{"mappings":"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","sources":["../node_modules/jsonld-context-parser/lib/ContextParser.js","../node_modules/cross-fetch/dist/browser-polyfill.js","../node_modules/relative-to-absolute-iri/index.js","../node_modules/relative-to-absolute-iri/lib/Resolve.js","../node_modules/jsonld-context-parser/lib/ErrorCoded.js","../node_modules/jsonld-context-parser/lib/FetchDocumentLoader.js","../node_modules/http-link-header/lib/link.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/jsonld-context-parser/lib/JsonLdContextNormalized.js","../node_modules/jsonld-context-parser/lib/Util.js","../node_modules/canonicalize/lib/canonicalize.js","../node_modules/jsonld-context-parser/lib/IDocumentLoader.js","../node_modules/jsonld-context-parser/lib/JsonLdContext.js","node_modules/@ldflex/async-iteration-handlers/lib/defaultIterationHandlers.js","node_modules/@ldflex/async-iteration-handlers/lib/asyncIterationHandlers.js","node_modules/async/dist/async.mjs","../node_modules/process/browser.js","node_modules/@ldflex/async-iteration-handlers/lib/iterableMethodsFactory.js","node_modules/@ldflex/async-iteration-handlers/lib/seriesIterationHandlers.js","../node_modules/@webreflection/mapset/esm/index.js","../node_modules/@webreflection/uparser/esm/index.js","../node_modules/@webreflection/uwire/esm/index.js","../node_modules/uarray/esm/index.js","../node_modules/uhandlers/esm/index.js","../node_modules/udomdiff/esm/index.js","../node_modules/uhtml/esm/utils.js","../node_modules/uhtml/esm/handlers.js","../node_modules/uhtml/esm/rabbit.js","../node_modules/uhtml/esm/index.js","../node_modules/jsonld-context-parser/index.js","../src/helpers/withLoader.ts","../node_modules/ldflex/src/PathProxy.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/BlankNode.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/DefaultGraph.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/fromTerm.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/NamedNode.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/Literal.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/Quad.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/Variable.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/lib/DataFactory.js","../node_modules/ldflex/node_modules/@rdfjs/data-model/index.js","../node_modules/ldflex/src/ContextProvider.js","../node_modules/ldflex/src/filters.js","../node_modules/ldflex/src/iterableUtils.js","../node_modules/ldflex/src/promiseUtils.js","../node_modules/ldflex/src/valueUtils.js","../node_modules/ldflex/src/AbstractPathResolver.js","../node_modules/ldflex/src/JSONLDResolver.js","../src/helpers/ComplexPathResolver.ts","../node_modules/ldflex/src/AsyncIteratorHandler.js","../node_modules/ldflex/src/handlerUtil.js","../node_modules/ldflex/src/CollectionsHandler.js","../node_modules/ldflex/src/DataHandler.js","../node_modules/ldflex/src/MutationFunctionHandler.js","../node_modules/ldflex/src/ExecuteQueryHandler.js","../node_modules/ldflex/src/GetFunctionHandler.js","../node_modules/ldflex/src/MutationExpressionsHandler.js","../node_modules/ldflex/src/PathExpressionHandler.js","../node_modules/ldflex/src/PredicateHandler.js","../node_modules/ldflex/src/PredicatesHandler.js","../node_modules/ldflex/src/PreloadHandler.js","../node_modules/ldflex/src/PropertiesHandler.js","../node_modules/ldflex/src/SortHandler.js","../node_modules/ldflex/src/SparqlHandler.js","../node_modules/ldflex/src/StringToLDflexHandler.js","../node_modules/ldflex/src/SubjectHandler.js","../node_modules/ldflex/src/SubjectsHandler.js","../node_modules/ldflex/src/ThenHandler.js","../node_modules/ldflex/src/ToArrayHandler.js","../node_modules/ldflex/src/URIHandler.js","../node_modules/ldflex/src/defaultHandlers.js","../node_modules/ldflex/src/InsertFunctionHandler.js","../node_modules/ldflex/src/SetFunctionHandler.js","../node_modules/ldflex/src/ReplaceFunctionHandler.js","../node_modules/ldflex/src/DeleteFunctionHandler.js","../src/helpers/PathFactory.ts","../src/helpers/FetchEngine.ts","../node_modules/ldflex/src/BundleHandler.js","../src/helpers/path.ts","../node_modules/ldflex/src/ParentHandler.js","../node_modules/ldflex/src/PathHandler.js","../src/helpers/createHtml.ts","../src/helpers/prefixes.ts","node_modules/@ldflex/async-iteration-handlers/lib/index.js","demo.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultExpandOptions = exports.ContextParser = void 0;\nrequire(\"cross-fetch/polyfill\");\nconst relative_to_absolute_iri_1 = require(\"relative-to-absolute-iri\");\nconst ErrorCoded_1 = require(\"./ErrorCoded\");\nconst FetchDocumentLoader_1 = require(\"./FetchDocumentLoader\");\nconst JsonLdContextNormalized_1 = require(\"./JsonLdContextNormalized\");\nconst Util_1 = require(\"./Util\");\n// tslint:disable-next-line:no-var-requires\nconst canonicalizeJson = require('canonicalize');\n/**\n * Parses JSON-LD contexts.\n */\nclass ContextParser {\n    constructor(options) {\n        options = options || {};\n        this.documentLoader = options.documentLoader || new FetchDocumentLoader_1.FetchDocumentLoader();\n        this.documentCache = {};\n        this.validateContext = !options.skipValidation;\n        this.expandContentTypeToBase = !!options.expandContentTypeToBase;\n        this.remoteContextsDepthLimit = options.remoteContextsDepthLimit || 32;\n        this.redirectSchemaOrgHttps = 'redirectSchemaOrgHttps' in options ? !!options.redirectSchemaOrgHttps : true;\n    }\n    /**\n     * Validate the given @language value.\n     * An error will be thrown if it is invalid.\n     * @param value An @language value.\n     * @param {boolean} strictRange If the string value should be strictly checked against a regex.\n     * @param {string} errorCode The error code to emit on errors.\n     * @return {boolean} If validation passed.\n     *                   Can only be false if strictRange is false and the string value did not pass the regex.\n     */\n    static validateLanguage(value, strictRange, errorCode) {\n        if (typeof value !== 'string') {\n            throw new ErrorCoded_1.ErrorCoded(`The value of an '@language' must be a string, got '${JSON.stringify(value)}'`, errorCode);\n        }\n        if (!Util_1.Util.REGEX_LANGUAGE_TAG.test(value)) {\n            if (strictRange) {\n                throw new ErrorCoded_1.ErrorCoded(`The value of an '@language' must be a valid language tag, got '${JSON.stringify(value)}'`, errorCode);\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Validate the given @direction value.\n     * An error will be thrown if it is invalid.\n     * @param value An @direction value.\n     * @param {boolean} strictValues If the string value should be strictly checked against a regex.\n     * @return {boolean} If validation passed.\n     *                   Can only be false if strictRange is false and the string value did not pass the regex.\n     */\n    static validateDirection(value, strictValues) {\n        if (typeof value !== 'string') {\n            throw new ErrorCoded_1.ErrorCoded(`The value of an '@direction' must be a string, got '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_BASE_DIRECTION);\n        }\n        if (!Util_1.Util.REGEX_DIRECTION_TAG.test(value)) {\n            if (strictValues) {\n                throw new ErrorCoded_1.ErrorCoded(`The value of an '@direction' must be 'ltr' or 'rtl', got '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_BASE_DIRECTION);\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Add an @id term for all @reverse terms.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @return {IJsonLdContextNormalizedRaw} The mutated input context.\n     */\n    idifyReverseTerms(context) {\n        for (const key of Object.keys(context)) {\n            const value = context[key];\n            if (value && typeof value === 'object') {\n                if (value['@reverse'] && !value['@id']) {\n                    if (typeof value['@reverse'] !== 'string' || Util_1.Util.isValidKeyword(value['@reverse'])) {\n                        throw new ErrorCoded_1.ErrorCoded(`Invalid @reverse value, must be absolute IRI or blank node: '${value['@reverse']}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                    }\n                    value['@id'] = value['@reverse'];\n                    if (Util_1.Util.isPotentialKeyword(value['@reverse'])) {\n                        delete value['@reverse'];\n                    }\n                    else {\n                        value['@reverse'] = true;\n                    }\n                }\n            }\n        }\n        return context;\n    }\n    /**\n     * Expand all prefixed terms in the given context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {boolean} expandContentTypeToBase If @type inside the context may be expanded\n     *                                          via @base if @vocab is set to null.\n     */\n    expandPrefixedTerms(context, expandContentTypeToBase) {\n        const contextRaw = context.getContextRaw();\n        for (const key of Object.keys(contextRaw)) {\n            // Only expand allowed keys\n            if (Util_1.Util.EXPAND_KEYS_BLACKLIST.indexOf(key) < 0 && !Util_1.Util.isReservedInternalKeyword(key)) {\n                // Error if we try to alias a keyword to something else.\n                const keyValue = contextRaw[key];\n                if (Util_1.Util.isPotentialKeyword(key) && Util_1.Util.ALIAS_DOMAIN_BLACKLIST.indexOf(key) >= 0) {\n                    if (key !== '@type' || typeof contextRaw[key] === 'object'\n                        && !(contextRaw[key]['@protected'] || contextRaw[key]['@container'] === '@set')) {\n                        throw new ErrorCoded_1.ErrorCoded(`Keywords can not be aliased to something else.\nTried mapping ${key} to ${JSON.stringify(keyValue)}`, ErrorCoded_1.ERROR_CODES.KEYWORD_REDEFINITION);\n                    }\n                }\n                // Error if we try to alias to an illegal keyword\n                if (Util_1.Util.ALIAS_RANGE_BLACKLIST.indexOf(Util_1.Util.getContextValueId(keyValue)) >= 0) {\n                    throw new ErrorCoded_1.ErrorCoded(`Aliasing to certain keywords is not allowed.\nTried mapping ${key} to ${JSON.stringify(keyValue)}`, ErrorCoded_1.ERROR_CODES.INVALID_KEYWORD_ALIAS);\n                }\n                // Error if this term was marked as prefix as well\n                if (keyValue && Util_1.Util.isPotentialKeyword(Util_1.Util.getContextValueId(keyValue))\n                    && keyValue['@prefix'] === true) {\n                    throw new ErrorCoded_1.ErrorCoded(`Tried to use keyword aliases as prefix: '${key}': '${JSON.stringify(keyValue)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                }\n                // Loop because prefixes might be nested\n                while (Util_1.Util.isPrefixValue(contextRaw[key])) {\n                    const value = contextRaw[key];\n                    let changed = false;\n                    if (typeof value === 'string') {\n                        contextRaw[key] = context.expandTerm(value, true);\n                        changed = changed || value !== contextRaw[key];\n                    }\n                    else {\n                        const id = value['@id'];\n                        const type = value['@type'];\n                        // If @id is missing, don't allow @id to be added if @prefix: true and key not being a valid IRI.\n                        const canAddIdEntry = !('@prefix' in value) || Util_1.Util.isValidIri(key);\n                        if ('@id' in value) {\n                            // Use @id value for expansion\n                            if (id !== undefined && id !== null && typeof id === 'string') {\n                                contextRaw[key]['@id'] = context.expandTerm(id, true);\n                                changed = changed || id !== contextRaw[key]['@id'];\n                            }\n                        }\n                        else if (!Util_1.Util.isPotentialKeyword(key) && canAddIdEntry) {\n                            // Add an explicit @id value based on the expanded key value\n                            const newId = context.expandTerm(key, true);\n                            if (newId !== key) {\n                                // Don't set @id if expansion failed\n                                contextRaw[key]['@id'] = newId;\n                                changed = true;\n                            }\n                        }\n                        if (type && typeof type === 'string' && type !== '@vocab'\n                            && (!value['@container'] || !value['@container']['@type'])\n                            && canAddIdEntry) {\n                            // First check @vocab, then fallback to @base\n                            contextRaw[key]['@type'] = context.expandTerm(type, true);\n                            if (expandContentTypeToBase && type === contextRaw[key]['@type']) {\n                                contextRaw[key]['@type'] = context.expandTerm(type, false);\n                            }\n                            changed = changed || type !== contextRaw[key]['@type'];\n                        }\n                    }\n                    if (!changed) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Normalize the @language entries in the given context to lowercase.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {IParseOptions} parseOptions The parsing options.\n     */\n    normalize(context, { processingMode, normalizeLanguageTags }) {\n        // Lowercase language keys in 1.0\n        if (normalizeLanguageTags || processingMode === 1.0) {\n            for (const key of Object.keys(context)) {\n                if (key === '@language' && typeof context[key] === 'string') {\n                    context[key] = context[key].toLowerCase();\n                }\n                else {\n                    const value = context[key];\n                    if (value && typeof value === 'object') {\n                        if (typeof value['@language'] === 'string') {\n                            value['@language'] = value['@language'].toLowerCase();\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Convert all @container strings and array values to hash-based values.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     */\n    containersToHash(context) {\n        for (const key of Object.keys(context)) {\n            const value = context[key];\n            if (value && typeof value === 'object') {\n                if (typeof value['@container'] === 'string') {\n                    value['@container'] = { [value['@container']]: true };\n                }\n                else if (Array.isArray(value['@container'])) {\n                    const newValue = {};\n                    for (const containerValue of value['@container']) {\n                        newValue[containerValue] = true;\n                    }\n                    value['@container'] = newValue;\n                }\n            }\n        }\n    }\n    /**\n     * Normalize and apply context-levevl @protected terms onto each term separately.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {number} processingMode The processing mode.\n     */\n    applyScopedProtected(context, { processingMode }) {\n        if (processingMode && processingMode >= 1.1) {\n            if (context['@protected']) {\n                for (const key of Object.keys(context)) {\n                    if (Util_1.Util.isReservedInternalKeyword(key)) {\n                        continue;\n                    }\n                    if (!Util_1.Util.isPotentialKeyword(key) && !Util_1.Util.isTermProtected(context, key)) {\n                        const value = context[key];\n                        if (value && typeof value === 'object') {\n                            if (!('@protected' in context[key])) {\n                                // Mark terms with object values as protected if they don't have an @protected: false annotation\n                                context[key]['@protected'] = true;\n                            }\n                        }\n                        else {\n                            // Convert string-based term values to object-based values with @protected: true\n                            context[key] = {\n                                '@id': value,\n                                '@protected': true,\n                            };\n                        }\n                    }\n                }\n                delete context['@protected'];\n            }\n        }\n    }\n    /**\n     * Check if the given context inheritance does not contain any overrides of protected terms.\n     * @param {IJsonLdContextNormalizedRaw} contextBefore The context that may contain some protected terms.\n     * @param {IJsonLdContextNormalizedRaw} contextAfter A new context that is being applied on the first one.\n     * @param {IExpandOptions} expandOptions Options that are needed for any expansions during this validation.\n     */\n    validateKeywordRedefinitions(contextBefore, contextAfter, expandOptions) {\n        for (const key of Object.keys(contextAfter)) {\n            if (Util_1.Util.isTermProtected(contextBefore, key)) {\n                // The entry in the context before will always be in object-mode\n                // If the new entry is in string-mode, convert it to object-mode\n                // before checking if it is identical.\n                if (typeof contextAfter[key] === 'string') {\n                    const isPrefix = Util_1.Util.isSimpleTermDefinitionPrefix(contextAfter[key], expandOptions);\n                    contextAfter[key] = { '@id': contextAfter[key] };\n                    // If the simple term def was a prefix, explicitly mark the term as a prefix in the expanded term definition,\n                    // because otherwise we loose this information due to JSON-LD interpreting prefixes differently\n                    // in simple vs expanded term definitions.\n                    if (isPrefix) {\n                        contextAfter[key]['@prefix'] = true;\n                        contextBefore[key]['@prefix'] = true; // Also on before, to make sure the next step still considers them ==\n                    }\n                }\n                // Convert term values to strings for each comparison\n                const valueBefore = canonicalizeJson(contextBefore[key]);\n                // We modify this deliberately,\n                // as we need it for the value comparison (they must be identical modulo '@protected')),\n                // and for the fact that this new value will override the first one.\n                contextAfter[key]['@protected'] = true;\n                const valueAfter = canonicalizeJson(contextAfter[key]);\n                // Error if they are not identical\n                if (valueBefore !== valueAfter) {\n                    throw new ErrorCoded_1.ErrorCoded(`Attempted to override the protected keyword ${key} from ${JSON.stringify(Util_1.Util.getContextValueId(contextBefore[key]))} to ${JSON.stringify(Util_1.Util.getContextValueId(contextAfter[key]))}`, ErrorCoded_1.ERROR_CODES.PROTECTED_TERM_REDEFINITION);\n                }\n            }\n        }\n    }\n    /**\n     * Validate the entries of the given context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {IParseOptions} options The parse options.\n     */\n    validate(context, { processingMode }) {\n        for (const key of Object.keys(context)) {\n            // Ignore reserved internal keywords.\n            if (Util_1.Util.isReservedInternalKeyword(key)) {\n                continue;\n            }\n            // Do not allow empty term\n            if (key === '') {\n                throw new ErrorCoded_1.ErrorCoded(`The empty term is not allowed, got: '${key}': '${JSON.stringify(context[key])}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n            }\n            const value = context[key];\n            const valueType = typeof value;\n            // First check if the key is a keyword\n            if (Util_1.Util.isPotentialKeyword(key)) {\n                switch (key.substr(1)) {\n                    case 'vocab':\n                        if (value !== null && valueType !== 'string') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @vocab IRI: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_VOCAB_MAPPING);\n                        }\n                        break;\n                    case 'base':\n                        if (value !== null && valueType !== 'string') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @base IRI: ${context[key]}`, ErrorCoded_1.ERROR_CODES.INVALID_BASE_IRI);\n                        }\n                        break;\n                    case 'language':\n                        if (value !== null) {\n                            ContextParser.validateLanguage(value, true, ErrorCoded_1.ERROR_CODES.INVALID_DEFAULT_LANGUAGE);\n                        }\n                        break;\n                    case 'version':\n                        if (value !== null && valueType !== 'number') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @version number: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_VERSION_VALUE);\n                        }\n                        break;\n                    case 'direction':\n                        if (value !== null) {\n                            ContextParser.validateDirection(value, true);\n                        }\n                        break;\n                    case 'propagate':\n                        if (processingMode === 1.0) {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an illegal @propagate keyword: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_ENTRY);\n                        }\n                        if (value !== null && valueType !== 'boolean') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @propagate value: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_PROPAGATE_VALUE);\n                        }\n                        break;\n                }\n                // Don't allow keywords to be overridden\n                if (Util_1.Util.isValidKeyword(key) && Util_1.Util.isValidKeyword(Util_1.Util.getContextValueId(value))) {\n                    throw new ErrorCoded_1.ErrorCoded(`Illegal keyword alias in term value, found: '${key}': '${Util_1.Util\n                        .getContextValueId(value)}'`, ErrorCoded_1.ERROR_CODES.KEYWORD_REDEFINITION);\n                }\n                continue;\n            }\n            // Otherwise, consider the key a term\n            if (value !== null) {\n                switch (valueType) {\n                    case 'string':\n                        if (Util_1.Util.getPrefix(value, context) === key) {\n                            throw new ErrorCoded_1.ErrorCoded(`Detected cyclical IRI mapping in context entry: '${key}': '${JSON\n                                .stringify(value)}'`, ErrorCoded_1.ERROR_CODES.CYCLIC_IRI_MAPPING);\n                        }\n                        if (Util_1.Util.isValidIriWeak(key)) {\n                            if (value === '@type') {\n                                throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to @type, found: '${key}': '${value}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                            }\n                            else if (Util_1.Util.isValidIri(value) && value !== new JsonLdContextNormalized_1.JsonLdContextNormalized(context).expandTerm(key)) {\n                                throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to other IRIs, found: '${key}': '${value}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                            }\n                        }\n                        break;\n                    case 'object':\n                        if (!Util_1.Util.isCompactIri(key) && !('@id' in value)\n                            && (value['@type'] === '@id' ? !context['@base'] : !context['@vocab'])) {\n                            throw new ErrorCoded_1.ErrorCoded(`Missing @id in context entry: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                        }\n                        for (const objectKey of Object.keys(value)) {\n                            const objectValue = value[objectKey];\n                            if (!objectValue) {\n                                continue;\n                            }\n                            switch (objectKey) {\n                                case '@id':\n                                    if (Util_1.Util.isValidKeyword(objectValue)\n                                        && objectValue !== '@type' && objectValue !== '@id' && objectValue !== '@graph') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Illegal keyword alias in term value, found: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                    }\n                                    if (Util_1.Util.isValidIriWeak(key)) {\n                                        if (objectValue === '@type') {\n                                            throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to @type, found: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                        }\n                                        else if (Util_1.Util.isValidIri(objectValue)\n                                            && objectValue !== new JsonLdContextNormalized_1.JsonLdContextNormalized(context).expandTerm(key)) {\n                                            throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to other IRIs, found: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                        }\n                                    }\n                                    if (typeof objectValue !== 'string') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Detected non-string @id in context entry: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                    }\n                                    if (Util_1.Util.getPrefix(objectValue, context) === key) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Detected cyclical IRI mapping in context entry: '${key}': '${JSON\n                                            .stringify(value)}'`, ErrorCoded_1.ERROR_CODES.CYCLIC_IRI_MAPPING);\n                                    }\n                                    break;\n                                case '@type':\n                                    if (value['@container'] === '@type' && objectValue !== '@id' && objectValue !== '@vocab') {\n                                        throw new ErrorCoded_1.ErrorCoded(`@container: @type only allows @type: @id or @vocab, but got: '${key}': '${objectValue}'`, ErrorCoded_1.ERROR_CODES.INVALID_TYPE_MAPPING);\n                                    }\n                                    if (typeof objectValue !== 'string') {\n                                        throw new ErrorCoded_1.ErrorCoded(`The value of an '@type' must be a string, got '${JSON.stringify(valueType)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TYPE_MAPPING);\n                                    }\n                                    if (objectValue !== '@id' && objectValue !== '@vocab'\n                                        && (processingMode === 1.0 || objectValue !== '@json')\n                                        && (processingMode === 1.0 || objectValue !== '@none')\n                                        && (objectValue[0] === '_' || !Util_1.Util.isValidIri(objectValue))) {\n                                        throw new ErrorCoded_1.ErrorCoded(`A context @type must be an absolute IRI, found: '${key}': '${objectValue}'`, ErrorCoded_1.ERROR_CODES.INVALID_TYPE_MAPPING);\n                                    }\n                                    break;\n                                case '@reverse':\n                                    if (typeof objectValue === 'string' && value['@id'] && value['@id'] !== objectValue) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Found non-matching @id and @reverse term values in '${key}':\\\n'${objectValue}' and '${value['@id']}'`, ErrorCoded_1.ERROR_CODES.INVALID_REVERSE_PROPERTY);\n                                    }\n                                    if ('@nest' in value) {\n                                        throw new ErrorCoded_1.ErrorCoded(`@nest is not allowed in the reverse property '${key}'`, ErrorCoded_1.ERROR_CODES.INVALID_REVERSE_PROPERTY);\n                                    }\n                                    break;\n                                case '@container':\n                                    if (processingMode === 1.0) {\n                                        if (Object.keys(objectValue).length > 1\n                                            || Util_1.Util.CONTAINERS_1_0.indexOf(Object.keys(objectValue)[0]) < 0) {\n                                            throw new ErrorCoded_1.ErrorCoded(`Invalid term @container for '${key}' ('${Object.keys(objectValue)}') in 1.0, \\\nmust be only one of ${Util_1.Util.CONTAINERS_1_0.join(', ')}`, ErrorCoded_1.ERROR_CODES.INVALID_CONTAINER_MAPPING);\n                                        }\n                                    }\n                                    for (const containerValue of Object.keys(objectValue)) {\n                                        if (containerValue === '@list' && value['@reverse']) {\n                                            throw new ErrorCoded_1.ErrorCoded(`Term value can not be @container: @list and @reverse at the same time on '${key}'`, ErrorCoded_1.ERROR_CODES.INVALID_REVERSE_PROPERTY);\n                                        }\n                                        if (Util_1.Util.CONTAINERS.indexOf(containerValue) < 0) {\n                                            throw new ErrorCoded_1.ErrorCoded(`Invalid term @container for '${key}' ('${containerValue}'), \\\nmust be one of ${Util_1.Util.CONTAINERS.join(', ')}`, ErrorCoded_1.ERROR_CODES.INVALID_CONTAINER_MAPPING);\n                                        }\n                                    }\n                                    break;\n                                case '@language':\n                                    ContextParser.validateLanguage(objectValue, true, ErrorCoded_1.ERROR_CODES.INVALID_LANGUAGE_MAPPING);\n                                    break;\n                                case '@direction':\n                                    ContextParser.validateDirection(objectValue, true);\n                                    break;\n                                case '@prefix':\n                                    if (objectValue !== null && typeof objectValue !== 'boolean') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Found an invalid term @prefix boolean in: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_PREFIX_VALUE);\n                                    }\n                                    if (!('@id' in value) && !Util_1.Util.isValidIri(key)) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Invalid @prefix definition for '${key}' ('${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                                    }\n                                    break;\n                                case '@index':\n                                    if (processingMode === 1.0 || !value['@container'] || !value['@container']['@index']) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Attempt to add illegal key to value object: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                                    }\n                                    break;\n                                case '@nest':\n                                    if (Util_1.Util.isPotentialKeyword(objectValue) && objectValue !== '@nest') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Found an invalid term @nest value in: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_NEST_VALUE);\n                                    }\n                            }\n                        }\n                        break;\n                    default:\n                        throw new ErrorCoded_1.ErrorCoded(`Found an invalid term value: '${key}': '${value}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                }\n            }\n        }\n    }\n    /**\n     * Apply the @base context entry to the given context under certain circumstances.\n     * @param context A context.\n     * @param options Parsing options.\n     * @param inheritFromParent If the @base value from the parent context can be inherited.\n     * @return The given context.\n     */\n    applyBaseEntry(context, options, inheritFromParent) {\n        // In some special cases, this can be a string, so ignore those.\n        if (typeof context === 'string') {\n            return context;\n        }\n        // Give priority to @base in the parent context\n        if (inheritFromParent && !('@base' in context) && options.parentContext\n            && typeof options.parentContext === 'object' && '@base' in options.parentContext) {\n            context['@base'] = options.parentContext['@base'];\n            if (options.parentContext['@__baseDocument']) {\n                context['@__baseDocument'] = true;\n            }\n        }\n        // Override the base IRI if provided.\n        if (options.baseIRI && !options.external) {\n            if (!('@base' in context)) {\n                // The context base is the document base\n                context['@base'] = options.baseIRI;\n                context['@__baseDocument'] = true;\n            }\n            else if (context['@base'] !== null && typeof context['@base'] === 'string'\n                && !Util_1.Util.isValidIri(context['@base'])) {\n                // The context base is relative to the document base\n                context['@base'] = (0, relative_to_absolute_iri_1.resolve)(context['@base'], options.parentContext && options.parentContext['@base'] || options.baseIRI);\n            }\n        }\n        return context;\n    }\n    /**\n     * Resolve relative context IRIs, or return full IRIs as-is.\n     * @param {string} contextIri A context IRI.\n     * @param {string} baseIRI A base IRI.\n     * @return {string} The normalized context IRI.\n     */\n    normalizeContextIri(contextIri, baseIRI) {\n        if (!Util_1.Util.isValidIri(contextIri)) {\n            try {\n                contextIri = (0, relative_to_absolute_iri_1.resolve)(contextIri, baseIRI);\n            }\n            catch (_a) {\n                throw new Error(`Invalid context IRI: ${contextIri}`);\n            }\n        }\n        // TODO: Temporary workaround for fixing schema.org CORS issues (https://github.com/schemaorg/schemaorg/issues/2578#issuecomment-652324465)\n        if (this.redirectSchemaOrgHttps && contextIri.startsWith('http://schema.org')) {\n            contextIri = 'https://schema.org/';\n        }\n        return contextIri;\n    }\n    /**\n     * Parse scoped contexts in the given context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {IParseOptions} options Parsing options.\n     * @return {IJsonLdContextNormalizedRaw} The mutated input context.\n     */\n    async parseInnerContexts(context, options) {\n        for (const key of Object.keys(context)) {\n            const value = context[key];\n            if (value && typeof value === 'object') {\n                if ('@context' in value && value['@context'] !== null && !options.ignoreScopedContexts) {\n                    // Simulate a processing based on the parent context to check if there are any (potential errors).\n                    // Honestly, I find it a bit weird to do this here, as the context may be unused,\n                    // and the final effective context may differ based on any other embedded/scoped contexts.\n                    // But hey, it's part of the spec, so we have no choice...\n                    // https://w3c.github.io/json-ld-api/#h-note-10\n                    if (this.validateContext) {\n                        try {\n                            const parentContext = Object.assign({}, context);\n                            parentContext[key] = Object.assign({}, parentContext[key]);\n                            delete parentContext[key]['@context'];\n                            await this.parse(value['@context'], Object.assign(Object.assign({}, options), { external: false, parentContext, ignoreProtection: true, ignoreRemoteScopedContexts: true, ignoreScopedContexts: true }));\n                        }\n                        catch (e) {\n                            throw new ErrorCoded_1.ErrorCoded(e.message, ErrorCoded_1.ERROR_CODES.INVALID_SCOPED_CONTEXT);\n                        }\n                    }\n                    value['@context'] = (await this.parse(value['@context'], Object.assign(Object.assign({}, options), { external: false, minimalProcessing: true, ignoreRemoteScopedContexts: true, parentContext: context })))\n                        .getContextRaw();\n                }\n            }\n        }\n        return context;\n    }\n    /**\n     * Parse a JSON-LD context in any form.\n     * @param {JsonLdContext} context A context, URL to a context, or an array of contexts/URLs.\n     * @param {IParseOptions} options Optional parsing options.\n     * @return {Promise<JsonLdContextNormalized>} A promise resolving to the context.\n     */\n    async parse(context, options = {}) {\n        const { baseIRI, parentContext: parentContextInitial, external, processingMode = ContextParser.DEFAULT_PROCESSING_MODE, normalizeLanguageTags, ignoreProtection, minimalProcessing, } = options;\n        let parentContext = parentContextInitial;\n        const remoteContexts = options.remoteContexts || {};\n        // Avoid remote context overflows\n        if (Object.keys(remoteContexts).length >= this.remoteContextsDepthLimit) {\n            throw new ErrorCoded_1.ErrorCoded('Detected an overflow in remote context inclusions: ' + Object.keys(remoteContexts), ErrorCoded_1.ERROR_CODES.CONTEXT_OVERFLOW);\n        }\n        if (context === null || context === undefined) {\n            // Don't allow context nullification and there are protected terms\n            if (!ignoreProtection && parentContext && Util_1.Util.hasProtectedTerms(parentContext)) {\n                throw new ErrorCoded_1.ErrorCoded('Illegal context nullification when terms are protected', ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_NULLIFICATION);\n            }\n            // Context that are explicitly set to null are empty.\n            return new JsonLdContextNormalized_1.JsonLdContextNormalized(this.applyBaseEntry({}, options, false));\n        }\n        else if (typeof context === 'string') {\n            const contextIri = this.normalizeContextIri(context, baseIRI);\n            const overriddenLoad = this.getOverriddenLoad(contextIri, options);\n            if (overriddenLoad) {\n                return new JsonLdContextNormalized_1.JsonLdContextNormalized(overriddenLoad);\n            }\n            const parsedStringContext = await this.parse(await this.load(contextIri), Object.assign(Object.assign({}, options), { baseIRI: contextIri, external: true, remoteContexts: Object.assign(Object.assign({}, remoteContexts), { [contextIri]: true }) }));\n            this.applyBaseEntry(parsedStringContext.getContextRaw(), options, true);\n            return parsedStringContext;\n        }\n        else if (Array.isArray(context)) {\n            // As a performance consideration, first load all external contexts in parallel.\n            const contextIris = [];\n            const contexts = await Promise.all(context.map((subContext, i) => {\n                if (typeof subContext === 'string') {\n                    const contextIri = this.normalizeContextIri(subContext, baseIRI);\n                    contextIris[i] = contextIri;\n                    const overriddenLoad = this.getOverriddenLoad(contextIri, options);\n                    if (overriddenLoad) {\n                        return overriddenLoad;\n                    }\n                    return this.load(contextIri);\n                }\n                else {\n                    return subContext;\n                }\n            }));\n            // Don't apply inheritance logic on minimal processing\n            if (minimalProcessing) {\n                return new JsonLdContextNormalized_1.JsonLdContextNormalized(contexts);\n            }\n            const reducedContexts = await contexts.reduce((accContextPromise, contextEntry, i) => accContextPromise\n                .then((accContext) => this.parse(contextEntry, Object.assign(Object.assign({}, options), { baseIRI: contextIris[i] || options.baseIRI, external: !!contextIris[i] || options.external, parentContext: accContext.getContextRaw(), remoteContexts: contextIris[i] ? Object.assign(Object.assign({}, remoteContexts), { [contextIris[i]]: true }) : remoteContexts }))), Promise.resolve(new JsonLdContextNormalized_1.JsonLdContextNormalized(parentContext || {})));\n            // Override the base IRI if provided.\n            this.applyBaseEntry(reducedContexts.getContextRaw(), options, true);\n            return reducedContexts;\n        }\n        else if (typeof context === 'object') {\n            if ('@context' in context) {\n                return await this.parse(context['@context'], options);\n            }\n            // Make a deep clone of the given context, to avoid modifying it.\n            context = JSON.parse(JSON.stringify(context)); // No better way in JS at the moment.\n            if (parentContext && !minimalProcessing) {\n                parentContext = JSON.parse(JSON.stringify(parentContext));\n            }\n            // We have an actual context object.\n            let newContext = {};\n            // According to the JSON-LD spec, @base must be ignored from external contexts.\n            if (external) {\n                delete context['@base'];\n            }\n            // Override the base IRI if provided.\n            this.applyBaseEntry(context, options, true);\n            // Hashify container entries\n            // Do this before protected term validation as that influences term format\n            this.containersToHash(context);\n            // Don't perform any other modifications if only minimal processing is needed.\n            if (minimalProcessing) {\n                return new JsonLdContextNormalized_1.JsonLdContextNormalized(context);\n            }\n            // In JSON-LD 1.1, load @import'ed context prior to processing.\n            let importContext = {};\n            if ('@import' in context) {\n                if (processingMode >= 1.1) {\n                    // Only accept string values\n                    if (typeof context['@import'] !== 'string') {\n                        throw new ErrorCoded_1.ErrorCoded('An @import value must be a string, but got ' + typeof context['@import'], ErrorCoded_1.ERROR_CODES.INVALID_IMPORT_VALUE);\n                    }\n                    // Load context\n                    importContext = await this.loadImportContext(this.normalizeContextIri(context['@import'], baseIRI));\n                    delete context['@import'];\n                }\n                else {\n                    throw new ErrorCoded_1.ErrorCoded('Context importing is not supported in JSON-LD 1.0', ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_ENTRY);\n                }\n            }\n            // Merge different parts of the final context in order\n            newContext = Object.assign(Object.assign(Object.assign(Object.assign({}, newContext), (typeof parentContext === 'object' ? parentContext : {})), importContext), context);\n            const newContextWrapped = new JsonLdContextNormalized_1.JsonLdContextNormalized(newContext);\n            // Parse inner contexts with minimal processing\n            await this.parseInnerContexts(newContext, options);\n            // In JSON-LD 1.1, @vocab can be relative to @vocab in the parent context.\n            if ((newContext && newContext['@version'] || ContextParser.DEFAULT_PROCESSING_MODE) >= 1.1\n                && ((context['@vocab'] && typeof context['@vocab'] === 'string') || context['@vocab'] === '')\n                && context['@vocab'].indexOf(':') < 0 && parentContext && '@vocab' in parentContext) {\n                newContext['@vocab'] = parentContext['@vocab'] + context['@vocab'];\n            }\n            // Handle terms (before protection checks)\n            this.idifyReverseTerms(newContext);\n            this.expandPrefixedTerms(newContextWrapped, this.expandContentTypeToBase);\n            // In JSON-LD 1.1, check if we are not redefining any protected keywords\n            if (!ignoreProtection && parentContext && processingMode >= 1.1) {\n                this.validateKeywordRedefinitions(parentContext, newContext, exports.defaultExpandOptions);\n            }\n            this.normalize(newContext, { processingMode, normalizeLanguageTags });\n            this.applyScopedProtected(newContext, { processingMode });\n            if (this.validateContext) {\n                this.validate(newContext, { processingMode });\n            }\n            return newContextWrapped;\n        }\n        else {\n            throw new ErrorCoded_1.ErrorCoded(`Tried parsing a context that is not a string, array or object, but got ${context}`, ErrorCoded_1.ERROR_CODES.INVALID_LOCAL_CONTEXT);\n        }\n    }\n    /**\n     * Fetch the given URL as a raw JSON-LD context.\n     * @param url An URL.\n     * @return A promise resolving to a raw JSON-LD context.\n     */\n    async load(url) {\n        // First try to retrieve the context from cache\n        const cached = this.documentCache[url];\n        if (cached) {\n            return typeof cached === 'string' ? cached : Array.isArray(cached) ? cached.slice() : Object.assign({}, cached);\n        }\n        // If not in cache, load it\n        let document;\n        try {\n            document = await this.documentLoader.load(url);\n        }\n        catch (e) {\n            throw new ErrorCoded_1.ErrorCoded(`Failed to load remote context ${url}: ${e.message}`, ErrorCoded_1.ERROR_CODES.LOADING_REMOTE_CONTEXT_FAILED);\n        }\n        // Validate the context\n        if (!('@context' in document)) {\n            throw new ErrorCoded_1.ErrorCoded(`Missing @context in remote context at ${url}`, ErrorCoded_1.ERROR_CODES.INVALID_REMOTE_CONTEXT);\n        }\n        return this.documentCache[url] = document['@context'];\n    }\n    /**\n     * Override the given context that may be loaded.\n     *\n     * This will check whether or not the url is recursively being loaded.\n     * @param url An URL.\n     * @param options Parsing options.\n     * @return An overridden context, or null.\n     *         Optionally an error can be thrown if a cyclic context is detected.\n     */\n    getOverriddenLoad(url, options) {\n        if (url in (options.remoteContexts || {})) {\n            if (options.ignoreRemoteScopedContexts) {\n                return url;\n            }\n            else {\n                throw new ErrorCoded_1.ErrorCoded('Detected a cyclic context inclusion of ' + url, ErrorCoded_1.ERROR_CODES.RECURSIVE_CONTEXT_INCLUSION);\n            }\n        }\n        return null;\n    }\n    /**\n     * Load an @import'ed context.\n     * @param importContextIri The full URI of an @import value.\n     */\n    async loadImportContext(importContextIri) {\n        // Load the context\n        const importContext = await this.load(importContextIri);\n        // Require the context to be a non-array object\n        if (typeof importContext !== 'object' || Array.isArray(importContext)) {\n            throw new ErrorCoded_1.ErrorCoded('An imported context must be a single object: ' + importContextIri, ErrorCoded_1.ERROR_CODES.INVALID_REMOTE_CONTEXT);\n        }\n        // Error if the context contains another @import\n        if ('@import' in importContext) {\n            throw new ErrorCoded_1.ErrorCoded('An imported context can not import another context: ' + importContextIri, ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_ENTRY);\n        }\n        // Containers have to be converted into hash values the same way as for the importing context\n        // Otherwise context validation will fail for container values\n        this.containersToHash(importContext);\n        return importContext;\n    }\n}\nexports.ContextParser = ContextParser;\nContextParser.DEFAULT_PROCESSING_MODE = 1.1;\nexports.defaultExpandOptions = {\n    allowPrefixForcing: true,\n    allowPrefixNonGenDelims: false,\n    allowVocabRelativeToBase: true,\n};\n//# sourceMappingURL=ContextParser.js.map","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./lib/Resolve\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convert the given relative IRI to an absolute IRI\n * by taking into account the given optional baseIRI.\n *\n * @param {string} relativeIRI The relative IRI to convert to an absolute IRI.\n * @param {string} baseIRI The optional base IRI.\n * @return {string} an absolute IRI.\n */\nfunction resolve(relativeIRI, baseIRI) {\n    baseIRI = baseIRI || '';\n    const baseFragmentPos = baseIRI.indexOf('#');\n    // Ignore any fragments in the base IRI\n    if (baseFragmentPos > 0) {\n        baseIRI = baseIRI.substr(0, baseFragmentPos);\n    }\n    // Convert empty value directly to base IRI\n    if (!relativeIRI.length) {\n        // At this point, the baseIRI MUST be absolute, otherwise we error\n        if (baseIRI.indexOf(':') < 0) {\n            throw new Error(`Found invalid baseIRI '${baseIRI}' for value '${relativeIRI}'`);\n        }\n        return baseIRI;\n    }\n    // If the value starts with a query character, concat directly (but strip the existing query)\n    if (relativeIRI.startsWith('?')) {\n        const baseQueryPos = baseIRI.indexOf('?');\n        if (baseQueryPos > 0) {\n            baseIRI = baseIRI.substr(0, baseQueryPos);\n        }\n        return baseIRI + relativeIRI;\n    }\n    // If the value starts with a fragment character, concat directly\n    if (relativeIRI.startsWith('#')) {\n        return baseIRI + relativeIRI;\n    }\n    // Ignore baseIRI if it is empty\n    if (!baseIRI.length) {\n        const relativeColonPos = relativeIRI.indexOf(':');\n        if (relativeColonPos < 0) {\n            throw new Error(`Found invalid relative IRI '${relativeIRI}' for a missing baseIRI`);\n        }\n        return removeDotSegmentsOfPath(relativeIRI, relativeColonPos);\n    }\n    // Ignore baseIRI if the value is absolute\n    const valueColonPos = relativeIRI.indexOf(':');\n    if (valueColonPos >= 0) {\n        return removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n    }\n    // At this point, the baseIRI MUST be absolute, otherwise we error\n    const baseColonPos = baseIRI.indexOf(':');\n    if (baseColonPos < 0) {\n        throw new Error(`Found invalid baseIRI '${baseIRI}' for value '${relativeIRI}'`);\n    }\n    const baseIRIScheme = baseIRI.substr(0, baseColonPos + 1);\n    // Inherit the baseIRI scheme if the value starts with '//'\n    if (relativeIRI.indexOf('//') === 0) {\n        return baseIRIScheme + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n    }\n    // Check cases where '://' occurs in the baseIRI, and where there is no '/' after a ':' anymore.\n    let baseSlashAfterColonPos;\n    if (baseIRI.indexOf('//', baseColonPos) === baseColonPos + 1) {\n        // If there is no additional '/' after the '//'.\n        baseSlashAfterColonPos = baseIRI.indexOf('/', baseColonPos + 3);\n        if (baseSlashAfterColonPos < 0) {\n            // If something other than a '/' follows the '://', append the value after a '/',\n            // otherwise, prefix the value with only the baseIRI scheme.\n            if (baseIRI.length > baseColonPos + 3) {\n                return baseIRI + '/' + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n            }\n            else {\n                return baseIRIScheme + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n            }\n        }\n    }\n    else {\n        // If there is not even a single '/' after the ':'\n        baseSlashAfterColonPos = baseIRI.indexOf('/', baseColonPos + 1);\n        if (baseSlashAfterColonPos < 0) {\n            // If we don't have a '/' after the ':',\n            // prefix the value with only the baseIRI scheme.\n            return baseIRIScheme + removeDotSegmentsOfPath(relativeIRI, valueColonPos);\n        }\n    }\n    // If the value starts with a '/', then prefix it with everything before the first effective slash of the base IRI.\n    if (relativeIRI.indexOf('/') === 0) {\n        return baseIRI.substr(0, baseSlashAfterColonPos) + removeDotSegments(relativeIRI);\n    }\n    let baseIRIPath = baseIRI.substr(baseSlashAfterColonPos);\n    const baseIRILastSlashPos = baseIRIPath.lastIndexOf('/');\n    // Ignore everything after the last '/' in the baseIRI path\n    if (baseIRILastSlashPos >= 0 && baseIRILastSlashPos < baseIRIPath.length - 1) {\n        baseIRIPath = baseIRIPath.substr(0, baseIRILastSlashPos + 1);\n        // Also remove the first character of the relative path if it starts with '.' (and not '..' or './')\n        // This change is only allowed if there is something else following the path\n        if (relativeIRI[0] === '.' && relativeIRI[1] !== '.' && relativeIRI[1] !== '/' && relativeIRI[2]) {\n            relativeIRI = relativeIRI.substr(1);\n        }\n    }\n    // Prefix the value with the baseIRI path where\n    relativeIRI = baseIRIPath + relativeIRI;\n    // Remove dot segment from the IRI\n    relativeIRI = removeDotSegments(relativeIRI);\n    // Prefix our transformed value with the part of the baseIRI until the first '/' after the first ':'.\n    return baseIRI.substr(0, baseSlashAfterColonPos) + relativeIRI;\n}\nexports.resolve = resolve;\n/**\n * Remove dot segments from the given path,\n * as described in https://www.ietf.org/rfc/rfc3986.txt (page 32).\n * @param {string} path An IRI path.\n * @return {string} A path, will always start with a '/'.\n */\nfunction removeDotSegments(path) {\n    // Prepare a buffer with segments between each '/.\n    // Each segment represents an array of characters.\n    const segmentBuffers = [];\n    let i = 0;\n    while (i < path.length) {\n        // Remove '/.' or '/..'\n        switch (path[i]) {\n            case '/':\n                if (path[i + 1] === '.') {\n                    if (path[i + 2] === '.') {\n                        // Start a new segment if we find an invalid character after the '.'\n                        if (!isCharacterAllowedAfterRelativePathSegment(path[i + 3])) {\n                            segmentBuffers.push([]);\n                            i++;\n                            break;\n                        }\n                        // Go to parent directory,\n                        // so we remove a parent segment\n                        segmentBuffers.pop();\n                        // Ensure that we end with a slash if there is a trailing '/..'\n                        if (!path[i + 3]) {\n                            segmentBuffers.push([]);\n                        }\n                        i += 3;\n                    }\n                    else {\n                        // Start a new segment if we find an invalid character after the '.'\n                        if (!isCharacterAllowedAfterRelativePathSegment(path[i + 2])) {\n                            segmentBuffers.push([]);\n                            i++;\n                            break;\n                        }\n                        // Ensure that we end with a slash if there is a trailing '/.'\n                        if (!path[i + 2]) {\n                            segmentBuffers.push([]);\n                        }\n                        // Go to the current directory,\n                        // so we do nothing\n                        i += 2;\n                    }\n                }\n                else {\n                    // Start a new segment\n                    segmentBuffers.push([]);\n                    i++;\n                }\n                break;\n            case '#':\n            case '?':\n                // Query and fragment string should be appended unchanged\n                if (!segmentBuffers.length) {\n                    segmentBuffers.push([]);\n                }\n                segmentBuffers[segmentBuffers.length - 1].push(path.substr(i));\n                // Break the while loop\n                i = path.length;\n                break;\n            default:\n                // Not a special character, just append it to our buffer\n                if (!segmentBuffers.length) {\n                    segmentBuffers.push([]);\n                }\n                segmentBuffers[segmentBuffers.length - 1].push(path[i]);\n                i++;\n                break;\n        }\n    }\n    return '/' + segmentBuffers.map((buffer) => buffer.join('')).join('/');\n}\nexports.removeDotSegments = removeDotSegments;\n/**\n * Removes dot segments of the given IRI.\n * @param {string} iri An IRI (or part of IRI).\n * @param {number} colonPosition The position of the first ':' in the IRI.\n * @return {string} The IRI where dot segments were removed.\n */\nfunction removeDotSegmentsOfPath(iri, colonPosition) {\n    // Determine where we should start looking for the first '/' that indicates the start of the path\n    let searchOffset = colonPosition + 1;\n    if (colonPosition >= 0) {\n        if (iri[colonPosition + 1] === '/' && iri[colonPosition + 2] === '/') {\n            searchOffset = colonPosition + 3;\n        }\n    }\n    else {\n        if (iri[0] === '/' && iri[1] === '/') {\n            searchOffset = 2;\n        }\n    }\n    // Determine the path\n    const pathSeparator = iri.indexOf('/', searchOffset);\n    if (pathSeparator < 0) {\n        return iri;\n    }\n    const base = iri.substr(0, pathSeparator);\n    const path = iri.substr(pathSeparator);\n    // Remove dot segments from the path\n    return base + removeDotSegments(path);\n}\nexports.removeDotSegmentsOfPath = removeDotSegmentsOfPath;\nfunction isCharacterAllowedAfterRelativePathSegment(character) {\n    return !character || character === '#' || character === '?' || character === '/';\n}\n//# sourceMappingURL=Resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERROR_CODES = exports.ErrorCoded = void 0;\n/**\n * An error that has a certain error code.\n *\n * The error code can be any string.\n * All standardized error codes are listed in {@link ERROR_CODES}.\n */\nclass ErrorCoded extends Error {\n    /* istanbul ignore next */\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nexports.ErrorCoded = ErrorCoded;\n/**\n * All standardized JSON-LD error codes.\n * @see https://w3c.github.io/json-ld-api/#dom-jsonlderrorcode\n */\n// tslint:disable:object-literal-sort-keys\nvar ERROR_CODES;\n(function (ERROR_CODES) {\n    ERROR_CODES[\"COLLIDING_KEYWORDS\"] = \"colliding keywords\";\n    ERROR_CODES[\"CONFLICTING_INDEXES\"] = \"conflicting indexes\";\n    ERROR_CODES[\"CYCLIC_IRI_MAPPING\"] = \"cyclic IRI mapping\";\n    ERROR_CODES[\"INVALID_ID_VALUE\"] = \"invalid @id value\";\n    ERROR_CODES[\"INVALID_INDEX_VALUE\"] = \"invalid @index value\";\n    ERROR_CODES[\"INVALID_NEST_VALUE\"] = \"invalid @nest value\";\n    ERROR_CODES[\"INVALID_PREFIX_VALUE\"] = \"invalid @prefix value\";\n    ERROR_CODES[\"INVALID_PROPAGATE_VALUE\"] = \"invalid @propagate value\";\n    ERROR_CODES[\"INVALID_REVERSE_VALUE\"] = \"invalid @reverse value\";\n    ERROR_CODES[\"INVALID_IMPORT_VALUE\"] = \"invalid @import value\";\n    ERROR_CODES[\"INVALID_VERSION_VALUE\"] = \"invalid @version value\";\n    ERROR_CODES[\"INVALID_BASE_IRI\"] = \"invalid base IRI\";\n    ERROR_CODES[\"INVALID_CONTAINER_MAPPING\"] = \"invalid container mapping\";\n    ERROR_CODES[\"INVALID_CONTEXT_ENTRY\"] = \"invalid context entry\";\n    ERROR_CODES[\"INVALID_CONTEXT_NULLIFICATION\"] = \"invalid context nullification\";\n    ERROR_CODES[\"INVALID_DEFAULT_LANGUAGE\"] = \"invalid default language\";\n    ERROR_CODES[\"INVALID_INCLUDED_VALUE\"] = \"invalid @included value\";\n    ERROR_CODES[\"INVALID_IRI_MAPPING\"] = \"invalid IRI mapping\";\n    ERROR_CODES[\"INVALID_JSON_LITERAL\"] = \"invalid JSON literal\";\n    ERROR_CODES[\"INVALID_KEYWORD_ALIAS\"] = \"invalid keyword alias\";\n    ERROR_CODES[\"INVALID_LANGUAGE_MAP_VALUE\"] = \"invalid language map value\";\n    ERROR_CODES[\"INVALID_LANGUAGE_MAPPING\"] = \"invalid language mapping\";\n    ERROR_CODES[\"INVALID_LANGUAGE_TAGGED_STRING\"] = \"invalid language-tagged string\";\n    ERROR_CODES[\"INVALID_LANGUAGE_TAGGED_VALUE\"] = \"invalid language-tagged value\";\n    ERROR_CODES[\"INVALID_LOCAL_CONTEXT\"] = \"invalid local context\";\n    ERROR_CODES[\"INVALID_REMOTE_CONTEXT\"] = \"invalid remote context\";\n    ERROR_CODES[\"INVALID_REVERSE_PROPERTY\"] = \"invalid reverse property\";\n    ERROR_CODES[\"INVALID_REVERSE_PROPERTY_MAP\"] = \"invalid reverse property map\";\n    ERROR_CODES[\"INVALID_REVERSE_PROPERTY_VALUE\"] = \"invalid reverse property value\";\n    ERROR_CODES[\"INVALID_SCOPED_CONTEXT\"] = \"invalid scoped context\";\n    ERROR_CODES[\"INVALID_SCRIPT_ELEMENT\"] = \"invalid script element\";\n    ERROR_CODES[\"INVALID_SET_OR_LIST_OBJECT\"] = \"invalid set or list object\";\n    ERROR_CODES[\"INVALID_TERM_DEFINITION\"] = \"invalid term definition\";\n    ERROR_CODES[\"INVALID_TYPE_MAPPING\"] = \"invalid type mapping\";\n    ERROR_CODES[\"INVALID_TYPE_VALUE\"] = \"invalid type value\";\n    ERROR_CODES[\"INVALID_TYPED_VALUE\"] = \"invalid typed value\";\n    ERROR_CODES[\"INVALID_VALUE_OBJECT\"] = \"invalid value object\";\n    ERROR_CODES[\"INVALID_VALUE_OBJECT_VALUE\"] = \"invalid value object value\";\n    ERROR_CODES[\"INVALID_VOCAB_MAPPING\"] = \"invalid vocab mapping\";\n    ERROR_CODES[\"IRI_CONFUSED_WITH_PREFIX\"] = \"IRI confused with prefix\";\n    ERROR_CODES[\"KEYWORD_REDEFINITION\"] = \"keyword redefinition\";\n    ERROR_CODES[\"LOADING_DOCUMENT_FAILED\"] = \"loading document failed\";\n    ERROR_CODES[\"LOADING_REMOTE_CONTEXT_FAILED\"] = \"loading remote context failed\";\n    ERROR_CODES[\"MULTIPLE_CONTEXT_LINK_HEADERS\"] = \"multiple context link headers\";\n    ERROR_CODES[\"PROCESSING_MODE_CONFLICT\"] = \"processing mode conflict\";\n    ERROR_CODES[\"PROTECTED_TERM_REDEFINITION\"] = \"protected term redefinition\";\n    ERROR_CODES[\"CONTEXT_OVERFLOW\"] = \"context overflow\";\n    ERROR_CODES[\"INVALID_BASE_DIRECTION\"] = \"invalid base direction\";\n    ERROR_CODES[\"RECURSIVE_CONTEXT_INCLUSION\"] = \"recursive context inclusion\";\n    ERROR_CODES[\"INVALID_STREAMING_KEY_ORDER\"] = \"invalid streaming key order\";\n})(ERROR_CODES = exports.ERROR_CODES || (exports.ERROR_CODES = {}));\n//# sourceMappingURL=ErrorCoded.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchDocumentLoader = void 0;\nrequire(\"cross-fetch/polyfill\");\nconst ErrorCoded_1 = require(\"./ErrorCoded\");\nconst http_link_header_1 = require(\"http-link-header\");\nconst relative_to_absolute_iri_1 = require(\"relative-to-absolute-iri\");\n/**\n * Loads documents via the fetch API.\n */\nclass FetchDocumentLoader {\n    constructor(fetcher) {\n        this.fetcher = fetcher;\n    }\n    async load(url) {\n        const response = await (this.fetcher || fetch)(url, { headers: new Headers({ accept: 'application/ld+json' }) });\n        if (response.ok && response.headers) {\n            let mediaType = response.headers.get('Content-Type');\n            if (mediaType) {\n                const colonPos = mediaType.indexOf(';');\n                if (colonPos > 0) {\n                    mediaType = mediaType.substr(0, colonPos);\n                }\n            }\n            if (mediaType === 'application/ld+json') {\n                // Return JSON-LD if proper content type was returned\n                return (await response.json());\n            }\n            else {\n                // Check for alternate link for a non-JSON-LD response\n                if (response.headers.has('Link')) {\n                    let alternateUrl;\n                    response.headers.forEach((value, key) => {\n                        if (key === 'link') {\n                            const linkHeader = (0, http_link_header_1.parse)(value);\n                            for (const link of linkHeader.get('type', 'application/ld+json')) {\n                                if (link.rel === 'alternate') {\n                                    if (alternateUrl) {\n                                        throw new Error('Multiple JSON-LD alternate links were found on ' + url);\n                                    }\n                                    alternateUrl = (0, relative_to_absolute_iri_1.resolve)(link.uri, url);\n                                }\n                            }\n                        }\n                    });\n                    if (alternateUrl) {\n                        return this.load(alternateUrl);\n                    }\n                }\n                throw new ErrorCoded_1.ErrorCoded(`Unsupported JSON-LD media type ${mediaType}`, ErrorCoded_1.ERROR_CODES.LOADING_DOCUMENT_FAILED);\n            }\n        }\n        else {\n            throw new Error(response.statusText || `Status code: ${response.status}`);\n        }\n    }\n}\nexports.FetchDocumentLoader = FetchDocumentLoader;\n//# sourceMappingURL=FetchDocumentLoader.js.map","'use strict'\n\nvar COMPATIBLE_ENCODING_PATTERN = /^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i\nvar WS_TRIM_PATTERN = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g\nvar WS_CHAR_PATTERN = /\\s|\\uFEFF|\\xA0/\nvar WS_FOLD_PATTERN = /\\r?\\n[\\x20\\x09]+/g\nvar DELIMITER_PATTERN = /[;,\"]/\nvar WS_DELIMITER_PATTERN = /[;,\"]|\\s/\n\n/**\n * Token character pattern\n * @type {RegExp}\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nvar TOKEN_PATTERN = /^[!#$%&'*+\\-\\.^_`|~\\da-zA-Z]+$/\n\nvar STATE = {\n  IDLE: 1 << 0,\n  URI: 1 << 1,\n  ATTR: 1 << 2,\n}\n\nfunction trim( value ) {\n  return value.replace( WS_TRIM_PATTERN, '' )\n}\n\nfunction hasWhitespace( value ) {\n  return WS_CHAR_PATTERN.test( value )\n}\n\nfunction skipWhitespace( value, offset ) {\n  while( hasWhitespace( value[offset] ) ) {\n    offset++\n  }\n  return offset\n}\n\nfunction needsQuotes( value ) {\n  return WS_DELIMITER_PATTERN.test( value ) ||\n    !TOKEN_PATTERN.test( value )\n}\n\nclass Link {\n\n  /**\n   * Link\n   * @constructor\n   * @param {String} [value]\n   * @returns {Link}\n   */\n  constructor( value ) {\n\n    /** @type {Array} URI references */\n    this.refs = []\n\n    if( value ) {\n      this.parse( value )\n    }\n\n  }\n\n  /**\n   * Get refs with given relation type\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  rel( value ) {\n\n    var links = []\n    var type = value.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ].rel.toLowerCase() === type ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  /**\n   * Get refs where given attribute has a given value\n   * @param {String} attr\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  get( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    var links = []\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  set( link ) {\n    this.refs.push( link )\n    return this\n  }\n\n  has( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        return true\n      }\n    }\n\n    return false\n\n  }\n\n  parse( value, offset ) {\n\n    offset = offset || 0\n    value = offset ? value.slice( offset ) : value\n\n    // Trim & unfold folded lines\n    value = trim( value ).replace( WS_FOLD_PATTERN, '' )\n\n    var state = STATE.IDLE\n    var length = value.length\n    var offset = 0\n    var ref = null\n\n    while( offset < length ) {\n      if( state === STATE.IDLE ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === '<' ) {\n          if( ref != null ) {\n            ref.rel != null ?\n              this.refs.push( ...Link.expandRelations( ref ) ) :\n              this.refs.push( ref )\n          }\n          var end = value.indexOf( '>', offset )\n          if( end === -1 ) throw new Error( 'Expected end of URI delimiter at offset ' + offset )\n          ref = { uri: value.slice( offset + 1, end ) }\n          // this.refs.push( ref )\n          offset = end\n          state = STATE.URI\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n        offset++\n      } else if( state === STATE.URI ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === ';' ) {\n          state = STATE.ATTR\n          offset++\n        } else if( value[offset] === ',' ) {\n          state = STATE.IDLE\n          offset++\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n      } else if( state === STATE.ATTR ) {\n        if( value[offset] ===';' || hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        }\n        var end = value.indexOf( '=', offset )\n        if( end === -1 ) throw new Error( 'Expected attribute delimiter at offset ' + offset )\n        var attr = trim( value.slice( offset, end ) ).toLowerCase()\n        var attrValue = ''\n        offset = end + 1\n        offset = skipWhitespace( value, offset )\n        if( value[offset] === '\"' ) {\n          offset++\n          while( offset < length ) {\n            if( value[offset] === '\"' ) {\n              offset++; break\n            }\n            if( value[offset] === '\\\\' ) {\n              offset++\n            }\n            attrValue += value[offset]\n            offset++\n          }\n        } else {\n          var end = offset + 1\n          while( !DELIMITER_PATTERN.test( value[end] ) && end < length ) {\n            end++\n          }\n          attrValue = value.slice( offset, end )\n          offset = end\n        }\n        if( ref[ attr ] && Link.isSingleOccurenceAttr( attr ) ) {\n          // Ignore multiples of attributes which may only appear once\n        } else if( attr[ attr.length - 1 ] === '*' ) {\n          ref[ attr ] = Link.parseExtendedValue( attrValue )\n        } else {\n          attrValue = attr === 'type' ?\n            attrValue.toLowerCase() : attrValue\n          if( ref[ attr ] != null ) {\n            if( Array.isArray( ref[ attr ] ) ) {\n              ref[ attr ].push( attrValue )\n            } else {\n              ref[ attr ] = [ ref[ attr ], attrValue ]\n            }\n          } else {\n            ref[ attr ] = attrValue\n          }\n        }\n        switch( value[offset] ) {\n          case ',': state = STATE.IDLE; break\n          case ';': state = STATE.ATTR; break\n        }\n        offset++\n      } else {\n        throw new Error( 'Unknown parser state \"' + state + '\"' )\n      }\n    }\n\n    if( ref != null ) {\n      ref.rel != null ?\n        this.refs.push( ...Link.expandRelations( ref ) ) :\n        this.refs.push( ref )\n    }\n\n    ref = null\n\n    return this\n\n  }\n\n  toString() {\n\n    var refs = []\n    var link = ''\n    var ref = null\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      ref = this.refs[i]\n      link = Object.keys( this.refs[i] ).reduce( function( link, attr ) {\n        if( attr === 'uri' ) return link\n        return link + '; ' + Link.formatAttribute( attr, ref[ attr ] )\n      }, '<' + ref.uri + '>' )\n      refs.push( link )\n    }\n\n    return refs.join( ', ' )\n\n  }\n\n}\n\n/**\n * Determines whether an encoding can be\n * natively handled with a `Buffer`\n * @param {String} value\n * @returns {Boolean}\n */\nLink.isCompatibleEncoding = function( value ) {\n  return COMPATIBLE_ENCODING_PATTERN.test( value )\n}\n\nLink.parse = function( value, offset ) {\n  return new Link().parse( value, offset )\n}\n\nLink.isSingleOccurenceAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'media' ||\n    attr === 'title' || attr === 'title*'\n}\n\nLink.isTokenAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'anchor'\n}\n\nLink.escapeQuotes = function( value ) {\n  return value.replace( /\"/g, '\\\\\"' )\n}\n\nLink.expandRelations = function( ref ) {\n  var rels = ref.rel.split( ' ' )\n  return rels.map( function( rel ) {\n    var value = Object.assign( {}, ref )\n    value.rel = rel\n    return value\n  })\n}\n\n/**\n * Parses an extended value and attempts to decode it\n * @internal\n * @param {String} value\n * @return {Object}\n */\nLink.parseExtendedValue = function( value ) {\n  var parts = /([^']+)?(?:'([^']*)')?(.+)/.exec( value )\n  return {\n    language: parts[2].toLowerCase(),\n    encoding: Link.isCompatibleEncoding( parts[1] ) ?\n      null : parts[1].toLowerCase(),\n    value: Link.isCompatibleEncoding( parts[1] ) ?\n      decodeURIComponent( parts[3] ) : parts[3]\n  }\n}\n\n/**\n * Format a given extended attribute and it's value\n * @param {String} attr\n * @param {Object} data\n * @return {String}\n */\nLink.formatExtendedAttribute = function( attr, data ) {\n\n  var encoding = ( data.encoding || 'utf-8' ).toUpperCase()\n  var language = data.language || 'en'\n\n  var encodedValue = ''\n\n  if( Buffer.isBuffer( data.value ) && Link.isCompatibleEncoding( encoding ) ) {\n    encodedValue = data.value.toString( encoding )\n  } else if( Buffer.isBuffer( data.value ) ) {\n    encodedValue = data.value.toString( 'hex' )\n      .replace( /[0-9a-f]{2}/gi, '%$1' )\n  } else {\n    encodedValue = encodeURIComponent( data.value )\n  }\n\n  return attr + '=' + encoding + '\\'' +\n    language + '\\'' + encodedValue\n\n}\n\n/**\n * Format a given attribute and it's value\n * @param {String} attr\n * @param {String|Object} value\n * @return {String}\n */\nLink.formatAttribute = function( attr, value ) {\n\n  if( Array.isArray( value ) ) {\n    return value.map(( item ) => {\n      return Link.formatAttribute( attr, item )\n    }).join( '; ' )\n  }\n\n  if( attr[ attr.length - 1 ] === '*' || typeof value !== 'string' ) {\n    return Link.formatExtendedAttribute( attr, value )\n  }\n\n  if( Link.isTokenAttr( attr ) ) {\n    value = needsQuotes( value ) ?\n      '\"' + Link.escapeQuotes( value ) + '\"' :\n      Link.escapeQuotes( value )\n  } else if( needsQuotes( value ) ) {\n    value = encodeURIComponent( value )\n    // We don't need to escape <SP> <,> <;> within quotes\n    value = value\n      .replace( /%20/g, ' ' )\n      .replace( /%2C/g, ',' )\n      .replace( /%3B/g, ';' )\n\n    value = '\"' + value + '\"'\n  }\n\n  return attr + '=' + value\n\n}\n\nmodule.exports = Link\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonLdContextNormalized = void 0;\nconst relative_to_absolute_iri_1 = require(\"relative-to-absolute-iri\");\nconst ContextParser_1 = require(\"./ContextParser\");\nconst ErrorCoded_1 = require(\"./ErrorCoded\");\nconst Util_1 = require(\"./Util\");\n/**\n * A class exposing operations over a normalized JSON-LD context.\n */\nclass JsonLdContextNormalized {\n    constructor(contextRaw) {\n        this.contextRaw = contextRaw;\n    }\n    /**\n     * @return The raw inner context.\n     */\n    getContextRaw() {\n        return this.contextRaw;\n    }\n    /**\n     * Expand the term or prefix of the given term if it has one,\n     * otherwise return the term as-is.\n     *\n     * This will try to expand the IRI as much as possible.\n     *\n     * Iff in vocab-mode, then other references to other terms in the context can be used,\n     * such as to `myTerm`:\n     * ```\n     * {\n     *   \"myTerm\": \"http://example.org/myLongTerm\"\n     * }\n     * ```\n     *\n     * @param {string} term A term that is an URL or a prefixed URL.\n     * @param {boolean} expandVocab If the term is a predicate or type and should be expanded based on @vocab,\n     *                              otherwise it is considered a regular term that is expanded based on @base.\n     * @param {IExpandOptions} options Options that define the way how expansion must be done.\n     * @return {string} The expanded term, the term as-is, or null if it was explicitly disabled in the context.\n     * @throws If the term is aliased to an invalid value (not a string, IRI or keyword).\n     */\n    expandTerm(term, expandVocab, options = ContextParser_1.defaultExpandOptions) {\n        const contextValue = this.contextRaw[term];\n        // Immediately return if the term was disabled in the context\n        if (contextValue === null || (contextValue && contextValue['@id'] === null)) {\n            return null;\n        }\n        // Check the @id\n        let validIriMapping = true;\n        if (contextValue && expandVocab) {\n            const value = Util_1.Util.getContextValueId(contextValue);\n            if (value && value !== term) {\n                if (typeof value !== 'string' || (!Util_1.Util.isValidIri(value) && !Util_1.Util.isValidKeyword(value))) {\n                    // Don't mark this mapping as invalid if we have an unknown keyword, but of the correct form.\n                    if (!Util_1.Util.isPotentialKeyword(value)) {\n                        validIriMapping = false;\n                    }\n                }\n                else {\n                    return value;\n                }\n            }\n        }\n        // Check if the term is prefixed\n        const prefix = Util_1.Util.getPrefix(term, this.contextRaw);\n        const vocab = this.contextRaw['@vocab'];\n        const vocabRelative = (!!vocab || vocab === '') && vocab.indexOf(':') < 0;\n        const base = this.contextRaw['@base'];\n        const potentialKeyword = Util_1.Util.isPotentialKeyword(term);\n        if (prefix) {\n            const contextPrefixValue = this.contextRaw[prefix];\n            const value = Util_1.Util.getContextValueId(contextPrefixValue);\n            if (value) {\n                if (typeof contextPrefixValue === 'string' || !options.allowPrefixForcing) {\n                    // If we have a simple term definition,\n                    // check the last character of the prefix to determine whether or not it is a prefix.\n                    // Validate that prefix ends with gen-delim character, unless @prefix is true\n                    if (!Util_1.Util.isSimpleTermDefinitionPrefix(value, options)) {\n                        // Treat the term as an absolute IRI\n                        return term;\n                    }\n                }\n                else {\n                    // If we have an expanded term definition, default to @prefix: false\n                    if (value[0] !== '_' && !potentialKeyword && !contextPrefixValue['@prefix'] && !(term in this.contextRaw)) {\n                        // Treat the term as an absolute IRI\n                        return term;\n                    }\n                }\n                return value + term.substr(prefix.length + 1);\n            }\n        }\n        else if (expandVocab && ((vocab || vocab === '') || (options.allowVocabRelativeToBase && (base && vocabRelative)))\n            && !potentialKeyword && !Util_1.Util.isCompactIri(term)) {\n            if (vocabRelative) {\n                if (options.allowVocabRelativeToBase) {\n                    return ((vocab || base) ? (0, relative_to_absolute_iri_1.resolve)(vocab, base) : '') + term;\n                }\n                else {\n                    throw new ErrorCoded_1.ErrorCoded(`Relative vocab expansion for term '${term}' with vocab '${vocab}' is not allowed.`, ErrorCoded_1.ERROR_CODES.INVALID_VOCAB_MAPPING);\n                }\n            }\n            else {\n                return vocab + term;\n            }\n        }\n        else if (!expandVocab && base && !potentialKeyword && !Util_1.Util.isCompactIri(term)) {\n            return (0, relative_to_absolute_iri_1.resolve)(term, base);\n        }\n        // Return the term as-is, unless we discovered an invalid IRI mapping for this term in the context earlier.\n        if (validIriMapping) {\n            return term;\n        }\n        else {\n            throw new ErrorCoded_1.ErrorCoded(`Invalid IRI mapping found for context entry '${term}': '${JSON.stringify(contextValue)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n        }\n    }\n    /**\n     * Compact the given term using @base, @vocab, an aliased term, or a prefixed term.\n     *\n     * This will try to compact the IRI as much as possible.\n     *\n     * @param {string} iri An IRI to compact.\n     * @param {boolean} vocab If the term is a predicate or type and should be compacted based on @vocab,\n     *                        otherwise it is considered a regular term that is compacted based on @base.\n     * @return {string} The compacted term or the IRI as-is.\n     */\n    compactIri(iri, vocab) {\n        // Try @vocab compacting\n        if (vocab && this.contextRaw['@vocab'] && iri.startsWith(this.contextRaw['@vocab'])) {\n            return iri.substr(this.contextRaw['@vocab'].length);\n        }\n        // Try @base compacting\n        if (!vocab && this.contextRaw['@base'] && iri.startsWith(this.contextRaw['@base'])) {\n            return iri.substr(this.contextRaw['@base'].length);\n        }\n        // Loop over all terms in the context\n        // This will try to prefix as short as possible.\n        // Once a fully compacted alias is found, return immediately, as we can not go any shorter.\n        const shortestPrefixing = { prefix: '', suffix: iri };\n        for (const key in this.contextRaw) {\n            const value = this.contextRaw[key];\n            if (value && !Util_1.Util.isPotentialKeyword(key)) {\n                const contextIri = Util_1.Util.getContextValueId(value);\n                if (iri.startsWith(contextIri)) {\n                    const suffix = iri.substr(contextIri.length);\n                    if (!suffix) {\n                        if (vocab) {\n                            // Immediately return on compacted alias\n                            return key;\n                        }\n                    }\n                    else if (suffix.length < shortestPrefixing.suffix.length) {\n                        // Overwrite the shortest prefix\n                        shortestPrefixing.prefix = key;\n                        shortestPrefixing.suffix = suffix;\n                    }\n                }\n            }\n        }\n        // Return the shortest prefix\n        if (shortestPrefixing.prefix) {\n            return shortestPrefixing.prefix + ':' + shortestPrefixing.suffix;\n        }\n        return iri;\n    }\n}\nexports.JsonLdContextNormalized = JsonLdContextNormalized;\n//# sourceMappingURL=JsonLdContextNormalized.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = void 0;\nclass Util {\n    /**\n     * Check if the given term is a valid compact IRI.\n     * Otherwise, it may be an IRI.\n     * @param {string} term A term.\n     * @return {boolean} If it is a compact IRI.\n     */\n    static isCompactIri(term) {\n        return term.indexOf(':') > 0 && !(term && term[0] === '#');\n    }\n    /**\n     * Get the prefix from the given term.\n     * @see https://json-ld.org/spec/latest/json-ld/#compact-iris\n     * @param {string} term A term that is an URL or a prefixed URL.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @return {string} The prefix or null.\n     */\n    static getPrefix(term, context) {\n        // Do not consider relative IRIs starting with a hash as compact IRIs\n        if (term && term[0] === '#') {\n            return null;\n        }\n        const separatorPos = term.indexOf(':');\n        if (separatorPos >= 0) {\n            // Suffix can not begin with two slashes\n            if (term.length > separatorPos + 1\n                && term.charAt(separatorPos + 1) === '/'\n                && term.charAt(separatorPos + 2) === '/') {\n                return null;\n            }\n            const prefix = term.substr(0, separatorPos);\n            // Prefix can not be an underscore (this is a blank node)\n            if (prefix === '_') {\n                return null;\n            }\n            // Prefix must match a term in the active context\n            if (context[prefix]) {\n                return prefix;\n            }\n        }\n        return null;\n    }\n    /**\n     * From a given context entry value, get the string value, or the @id field.\n     * @param contextValue A value for a term in a context.\n     * @return {string} The id value, or null.\n     */\n    static getContextValueId(contextValue) {\n        if (contextValue === null || typeof contextValue === 'string') {\n            return contextValue;\n        }\n        const id = contextValue['@id'];\n        return id ? id : null;\n    }\n    /**\n     * Check if the given simple term definition (string-based value of a context term)\n     * should be considered a prefix.\n     * @param value A simple term definition value.\n     * @param options Options that define the way how expansion must be done.\n     */\n    static isSimpleTermDefinitionPrefix(value, options) {\n        return !Util.isPotentialKeyword(value)\n            && (value[0] === '_' || options.allowPrefixNonGenDelims || Util.isPrefixIriEndingWithGenDelim(value));\n    }\n    /**\n     * Check if the given keyword is of the keyword format \"@\"1*ALPHA.\n     * @param {string} keyword A potential keyword.\n     * @return {boolean} If the given keyword is of the keyword format.\n     */\n    static isPotentialKeyword(keyword) {\n        return typeof keyword === 'string' && Util.KEYWORD_REGEX.test(keyword);\n    }\n    /**\n     * Check if the given prefix ends with a gen-delim character.\n     * @param {string} prefixIri A prefix IRI.\n     * @return {boolean} If the given prefix IRI is valid.\n     */\n    static isPrefixIriEndingWithGenDelim(prefixIri) {\n        return Util.ENDS_WITH_GEN_DELIM.test(prefixIri);\n    }\n    /**\n     * Check if the given context value can be a prefix value.\n     * @param value A context value.\n     * @return {boolean} If it can be a prefix value.\n     */\n    static isPrefixValue(value) {\n        return value && (typeof value === 'string' || (value && typeof value === 'object'));\n    }\n    /**\n     * Check if the given IRI is valid.\n     * @param {string} iri A potential IRI.\n     * @return {boolean} If the given IRI is valid.\n     */\n    static isValidIri(iri) {\n        return Boolean(iri && Util.IRI_REGEX.test(iri));\n    }\n    /**\n     * Check if the given IRI is valid, this includes the possibility of being a relative IRI.\n     * @param {string} iri A potential IRI.\n     * @return {boolean} If the given IRI is valid.\n     */\n    static isValidIriWeak(iri) {\n        return !!iri && iri[0] !== ':' && Util.IRI_REGEX_WEAK.test(iri);\n    }\n    /**\n     * Check if the given keyword is a defined according to the JSON-LD specification.\n     * @param {string} keyword A potential keyword.\n     * @return {boolean} If the given keyword is valid.\n     */\n    static isValidKeyword(keyword) {\n        return Util.VALID_KEYWORDS[keyword];\n    }\n    /**\n     * Check if the given term is protected in the context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {string} key A context term.\n     * @return {boolean} If the given term has an @protected flag.\n     */\n    static isTermProtected(context, key) {\n        const value = context[key];\n        return !(typeof value === 'string') && value && value['@protected'];\n    }\n    /**\n     * Check if the given context has at least one protected term.\n     * @param context A context.\n     * @return If the context has a protected term.\n     */\n    static hasProtectedTerms(context) {\n        for (const key of Object.keys(context)) {\n            if (Util.isTermProtected(context, key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Check if the given key is an internal reserved keyword.\n     * @param key A context key.\n     */\n    static isReservedInternalKeyword(key) {\n        return key.startsWith('@__');\n    }\n}\nexports.Util = Util;\n// Regex for valid IRIs\nUtil.IRI_REGEX = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^ \"<>{}|\\\\\\[\\]`#]*(#[^#]*)?$/;\n// Weaker regex for valid IRIs, this includes relative IRIs\nUtil.IRI_REGEX_WEAK = /(?::[^:])|\\//;\n// Regex for keyword form\nUtil.KEYWORD_REGEX = /^@[a-z]+$/i;\n// Regex to see if an IRI ends with a gen-delim character (see RFC 3986)\nUtil.ENDS_WITH_GEN_DELIM = /[:/?#\\[\\]@]$/;\n// Regex for language tags\nUtil.REGEX_LANGUAGE_TAG = /^[a-zA-Z]+(-[a-zA-Z0-9]+)*$/;\n// Regex for base directions\nUtil.REGEX_DIRECTION_TAG = /^(ltr)|(rtl)$/;\n// All known valid JSON-LD keywords\n// @see https://www.w3.org/TR/json-ld11/#keywords\nUtil.VALID_KEYWORDS = {\n    '@base': true,\n    '@container': true,\n    '@context': true,\n    '@direction': true,\n    '@graph': true,\n    '@id': true,\n    '@import': true,\n    '@included': true,\n    '@index': true,\n    '@json': true,\n    '@language': true,\n    '@list': true,\n    '@nest': true,\n    '@none': true,\n    '@prefix': true,\n    '@propagate': true,\n    '@protected': true,\n    '@reverse': true,\n    '@set': true,\n    '@type': true,\n    '@value': true,\n    '@version': true,\n    '@vocab': true,\n};\n// Keys in the contexts that will not be expanded based on the base IRI\nUtil.EXPAND_KEYS_BLACKLIST = [\n    '@base',\n    '@vocab',\n    '@language',\n    '@version',\n    '@direction',\n];\n// Keys in the contexts that may not be aliased from\nUtil.ALIAS_DOMAIN_BLACKLIST = [\n    '@container',\n    '@graph',\n    '@id',\n    '@index',\n    '@list',\n    '@nest',\n    '@none',\n    '@prefix',\n    '@reverse',\n    '@set',\n    '@type',\n    '@value',\n    '@version',\n];\n// Keys in the contexts that may not be aliased to\nUtil.ALIAS_RANGE_BLACKLIST = [\n    '@context',\n    '@preserve',\n];\n// All valid @container values\nUtil.CONTAINERS = [\n    '@list',\n    '@set',\n    '@index',\n    '@language',\n    '@graph',\n    '@id',\n    '@type',\n];\n// All valid @container values under processing mode 1.0\nUtil.CONTAINERS_1_0 = [\n    '@list',\n    '@set',\n    '@index',\n];\n//# sourceMappingURL=Util.js.map","/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=IDocumentLoader.js.map","\"use strict\";\n// tslint:disable:max-line-length\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=JsonLdContext.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.someSeries = exports.someLimit = exports.some = exports.reduce = exports.mapSeries = exports.mapLimit = exports.map = exports.forEachOfSeries = exports.forEachOfLimit = exports.forEachOf = exports.forEachSeries = exports.forEachLimit = exports.forEach = exports.findSeries = exports.findLimit = exports.find = exports.filterSeries = exports.filterLimit = exports.filter = exports.everySeries = exports.everyLimit = exports.every = void 0;\n/* eslint-disable new-cap */\nconst IterableMethods = __importStar(require(\"./asyncIterationHandlers\"));\nexports.every = new IterableMethods.every();\nexports.everyLimit = new IterableMethods.everyLimit();\nexports.everySeries = new IterableMethods.everySeries();\nexports.filter = new IterableMethods.filter();\nexports.filterLimit = new IterableMethods.filterLimit();\nexports.filterSeries = new IterableMethods.filterSeries();\nexports.find = new IterableMethods.find();\nexports.findLimit = new IterableMethods.findLimit();\nexports.findSeries = new IterableMethods.findSeries();\nexports.forEach = new IterableMethods.forEach();\nexports.forEachLimit = new IterableMethods.forEachLimit();\nexports.forEachSeries = new IterableMethods.forEachSeries();\nexports.forEachOf = new IterableMethods.forEachOf();\nexports.forEachOfLimit = new IterableMethods.forEachOfLimit();\nexports.forEachOfSeries = new IterableMethods.forEachOfSeries();\nexports.map = new IterableMethods.map();\nexports.mapLimit = new IterableMethods.mapLimit();\nexports.mapSeries = new IterableMethods.mapSeries();\nexports.reduce = new IterableMethods.reduce();\n// Note: Currently disabled due to poor handling of async iterators\n// see commented out tests around this\n// export const reduceRight = new IterableMethods.reduceRight();\n// export const reject = new IterableMethods.reject();\n// export const rejectLimit = new IterableMethods.rejectLimit();\n// export const rejectSeries = new IterableMethods.rejectSeries();\nexports.some = new IterableMethods.some();\nexports.someLimit = new IterableMethods.someLimit();\nexports.someSeries = new IterableMethods.someSeries();\n// export const transform = new IterableMethods.transform();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.someSeries = exports.someLimit = exports.some = exports.reduceRight = exports.reduce = exports.mapSeries = exports.mapLimit = exports.map = exports.filterSeries = exports.filterLimit = exports.filter = exports.everySeries = exports.everyLimit = exports.every = exports.forEachOfSeries = exports.forEachOfLimit = exports.forEachOf = exports.forEachSeries = exports.forEachLimit = exports.forEach = exports.findSeries = exports.findLimit = exports.find = void 0;\nconst async = __importStar(require(\"async\"));\nconst iterableMethodsFactory_1 = require(\"./iterableMethodsFactory\");\nexports.find = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.detect);\nexports.findLimit = (0, iterableMethodsFactory_1.iterableLimitMethodsFactory)(async.detectLimit);\nexports.findSeries = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.detectSeries);\nexports.forEach = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.each);\nexports.forEachLimit = (0, iterableMethodsFactory_1.iterableLimitMethodsFactory)(async.eachLimit);\nexports.forEachSeries = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.eachSeries);\nexports.forEachOf = (0, iterableMethodsFactory_1.iterableEachOfMethodsFactory)(async.eachOf);\nexports.forEachOfLimit = (0, iterableMethodsFactory_1.iterableEachOfLimitMethodsFactory)(async.eachOfLimit);\nexports.forEachOfSeries = (0, iterableMethodsFactory_1.iterableEachOfMethodsFactory)(async.eachOfSeries);\nexports.every = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.every);\nexports.everyLimit = (0, iterableMethodsFactory_1.iterableLimitMethodsFactory)(async.everyLimit);\nexports.everySeries = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.everySeries);\nexports.filter = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.filter);\nexports.filterLimit = (0, iterableMethodsFactory_1.iterableLimitMethodsFactory)(async.filterLimit);\nexports.filterSeries = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.filterSeries);\nexports.map = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.map);\nexports.mapLimit = (0, iterableMethodsFactory_1.iterableLimitMethodsFactory)(async.mapLimit);\nexports.mapSeries = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.mapSeries);\nexports.reduce = (0, iterableMethodsFactory_1.iterableMemoMethodsFactory)(async.reduce);\nexports.reduceRight = (0, iterableMethodsFactory_1.iterableMemoMethodsFactory)(async.reduceRight);\n// export const reject = iterableMethodsFactory(async.reject);\n// export const rejectLimit = iterableLimitMethodsFactory(async.rejectLimit);\n// export const rejectSeries = iterableMethodsFactory(async.rejectSeries);\nexports.some = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.some);\nexports.someLimit = (0, iterableMethodsFactory_1.iterableLimitMethodsFactory)(async.someLimit);\nexports.someSeries = (0, iterableMethodsFactory_1.iterableMethodsFactory)(async.someSeries);\n// May be some issues because of the 2nd arg accumulartor\n// export const transform = iterableMemoMethodsFactory(async.transform);\n","/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nfunction apply(fn, ...args) {\n    return (...callArgs) => fn(...args,...callArgs);\n}\n\nfunction initialParams (fn) {\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n}\n\n/* istanbul ignore file */\n\nvar hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasQueueMicrotask) {\n    _defer = queueMicrotask;\n} else if (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if (isAsync(func)) {\n        return function (...args/*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback)\n        }\n    }\n\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback)\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        setImmediate$1(e => { throw e }, err);\n    }\n}\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function')\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify (asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined')\n    function awaitable (...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args)\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err)\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        })\n    }\n\n    return awaitable\n}\n\nfunction applyEach (eachfn) {\n    return function applyEach(fns, ...callArgs) {\n        const go = awaitify(function (callback) {\n            var that = this;\n            return eachfn(fns, (fn, cb) => {\n                wrapAsync(fn).apply(that, callArgs.concat(cb));\n            }, callback);\n        });\n        return go;\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\n\nfunction isArrayLike(value) {\n    return value &&\n        typeof value.length === 'number' &&\n        value.length >= 0 &&\n        value.length % 1 === 0;\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\n\nfunction once(fn) {\n    function wrapper (...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper\n}\n\nfunction getIterator (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        if (key === '__proto__') {\n            return next();\n        }\n        return i < len ? {value: obj[key], key} : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({value, done: iterDone}) => {\n            //console.log('got value', value)\n            if (canceled || done) return\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return\n        if (err) return handleError(err)\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return\n        }\n\n        if (result === breakLoop || (done && running <= 0)) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\n\nvar eachOfLimit = (limit) => {\n    return (obj, iteratee, callback) => {\n        callback = once(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1')\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if (isAsyncGenerator(obj)) {\n            return asyncEachOfLimit(obj, limit, iteratee, callback)\n        }\n        if (isAsyncIterable(obj)) {\n            return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n        }\n        var nextElem = createIterator(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (err === false) {\n                done = true;\n                canceled = true;\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback);\n    var index = 0,\n        completed = 0,\n        {length} = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric (coll, iteratee, callback) {\n    return eachOfLimit$2(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dev.json is a file containing a valid json object config for dev environment\n * // dev.json is a file containing a valid json object config for test environment\n * // prod.json is a file containing a valid json object config for prod environment\n * // invalid.json is a file with a malformed json object\n *\n * let configs = {}; //global variable\n * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n *\n * // asynchronous function that reads a json file and parses the contents as json object\n * function parseFile(file, key, callback) {\n *     fs.readFile(file, \"utf8\", function(err, data) {\n *         if (err) return calback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }\n *\n * // Using callbacks\n * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *     } else {\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *         // JSON parse error exception\n *     } else {\n *         console.log(configs);\n *     }\n * });\n *\n * // Using Promises\n * async.forEachOf(validConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n *     // configs is now a map of JSON data, e.g.\n *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n * }).catch( err => {\n *     console.error(err);\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n * }).catch( err => {\n *     console.error(err);\n *     // JSON parse error exception\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * //Error handing\n * async () => {\n *     try {\n *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n *         console.log(configs);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // JSON parse error exception\n *     }\n * }\n *\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOf$1 = awaitify(eachOf, 3);\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callbacks\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.map(fileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(results);\n *     }\n * });\n *\n * // Using Promises\n * async.map(fileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now an array of the file size in bytes for each file, e.g.\n *     // [ 1000, 2000, 3000]\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.map(fileList, getFileSizeInBytes);\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction map (coll, iteratee, callback) {\n    return _asyncMap(eachOf$1, coll, iteratee, callback)\n}\nvar map$1 = awaitify(map, 3);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional. The results\n * for each of the applied async functions are passed to the final callback\n * as an array.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - Returns a function that takes no args other than\n * an optional callback, that is the result of applying the `args` to each\n * of the functions.\n * @example\n *\n * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n *\n * appliedFn((err, results) => {\n *     // results[0] is the results for `enableSearch`\n *     // results[1] is the results for `updateSchema`\n * });\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n *     callback\n * );\n */\nvar applyEach$1 = applyEach(map$1);\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n    return eachOfLimit$2(coll, 1, iteratee, callback)\n}\nvar eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapSeries (coll, iteratee, callback) {\n    return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n}\nvar mapSeries$1 = awaitify(mapSeries, 3);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - A function, that when called, is the result of\n * appling the `args` to the list of functions.  It takes no args, other than\n * a callback.\n */\nvar applyEachSeries = applyEach(mapSeries$1);\n\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback () {\n    let resolve, reject;\n    function callback (err, ...args) {\n        if (err) return reject(err)\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res,\n        reject = rej;\n    });\n\n    return callback\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n * @example\n *\n * //Using Callbacks\n * async.auto({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     if (err) {\n *         console.log('err = ', err);\n *     }\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * });\n *\n * //Using Promises\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }).then(results => {\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * }).catch(err => {\n *     console.log('err = ', err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.auto({\n *             get_data: function(callback) {\n *                 // async code to get some data\n *                 callback(null, 'data', 'converted to array');\n *             },\n *             make_folder: function(callback) {\n *                 // async code to create a directory to store a file in\n *                 // this is run at the same time as getting the data\n *                 callback(null, 'folder');\n *             },\n *             write_file: ['get_data', 'make_folder', function(results, callback) {\n *                 // once there is some data and the directory exists,\n *                 // write the data to a file in the directory\n *                 callback(null, 'filename');\n *             }],\n *             email_link: ['write_file', function(results, callback) {\n *                 // once the file is written let's email a link to it...\n *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *             }]\n *         });\n *         console.log('results = ', results);\n *         // results = {\n *         //     get_data: ['data', 'converted to array']\n *         //     make_folder; 'folder',\n *         //     write_file: 'filename'\n *         //     email_link: { file: 'filename', email: 'user@example.com' }\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction auto(tasks, concurrency, callback) {\n    if (typeof concurrency !== 'number') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || promiseCallback());\n    var numTasks = Object.keys(tasks).length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var canceled = false;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    Object.keys(tasks).forEach(key => {\n        var task = tasks[key];\n        if (!Array.isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        dependencies.forEach(dependencyName => {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, () => {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(() => runTask(key, task));\n    }\n\n    function processQueue() {\n        if (canceled) return\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        taskListeners.forEach(fn => fn());\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce((err, ...result) => {\n            runningTasks--;\n            if (err === false) {\n                canceled = true;\n                return\n            }\n            if (result.length < 2) {\n                [result] = result;\n            }\n            if (err) {\n                var safeResults = {};\n                Object.keys(results).forEach(rkey => {\n                    safeResults[rkey] = results[rkey];\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n                if (canceled) return\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            getDependents(currentTask).forEach(dependent => {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        Object.keys(tasks).forEach(key => {\n            const task = tasks[key];\n            if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n\n    return callback[PROMISE_SYMBOL]\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\nvar ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\n\nfunction stripComments(string) {\n    let stripped = '';\n    let index = 0;\n    let endBlockComment = string.indexOf('*/');\n    while (index < string.length) {\n        if (string[index] === '/' && string[index+1] === '/') {\n            // inline comment\n            let endIndex = string.indexOf('\\n', index);\n            index = (endIndex === -1) ? string.length : endIndex;\n        } else if ((endBlockComment !== -1) && (string[index] === '/') && (string[index+1] === '*')) {\n            // block comment\n            let endIndex = string.indexOf('*/', index);\n            if (endIndex !== -1) {\n                index = endIndex + 2;\n                endBlockComment = string.indexOf('*/', index);\n            } else {\n                stripped += string[index];\n                index++;\n            }\n        } else {\n            stripped += string[index];\n            index++;\n        }\n    }\n    return stripped;\n}\n\nfunction parseParams(func) {\n    const src = stripComments(func.toString());\n    let match = src.match(FN_ARGS);\n    if (!match) {\n        match = src.match(ARROW_FN_ARGS);\n    }\n    if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n    let [, args] = match;\n    return args\n        .replace(/\\s/g, '')\n        .split(FN_ARG_SPLIT)\n        .map((arg) => arg.replace(FN_ARG, '').trim());\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    Object.keys(tasks).forEach(key => {\n        var taskFn = tasks[key];\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (Array.isArray(taskFn)) {\n            params = [...taskFn];\n            taskFn = params.pop();\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = params.map(name => results[name]);\n            newArgs.push(taskCb);\n            wrapAsync(taskFn)(...newArgs);\n        }\n    });\n\n    return auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nclass DLL {\n    constructor() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    removeLink(node) {\n        if (node.prev) node.prev.next = node.next;\n        else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;\n        else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    }\n\n    empty () {\n        while(this.head) this.shift();\n        return this;\n    }\n\n    insertAfter(node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;\n        else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    }\n\n    insertBefore(node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;\n        else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    }\n\n    unshift(node) {\n        if (this.head) this.insertBefore(this.head, node);\n        else setInitial(this, node);\n    }\n\n    push(node) {\n        if (this.tail) this.insertAfter(this.tail, node);\n        else setInitial(this, node);\n    }\n\n    shift() {\n        return this.head && this.removeLink(this.head);\n    }\n\n    pop() {\n        return this.tail && this.removeLink(this.tail);\n    }\n\n    toArray() {\n        return [...this]\n    }\n\n    *[Symbol.iterator] () {\n        var cur = this.head;\n        while (cur) {\n            yield cur.data;\n            cur = cur.next;\n        }\n    }\n\n    remove (testFn) {\n        var curr = this.head;\n        while(curr) {\n            var {next} = curr;\n            if (testFn(curr)) {\n                this.removeLink(curr);\n            }\n            curr = next;\n        }\n        return this;\n    }\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new RangeError('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n    const events = {\n        error: [],\n        drain: [],\n        saturated: [],\n        unsaturated: [],\n        empty: []\n    };\n\n    function on (event, handler) {\n        events[event].push(handler);\n    }\n\n    function once (event, handler) {\n        const handleAndRemove = (...args) => {\n            off(event, handleAndRemove);\n            handler(...args);\n        };\n        events[event].push(handleAndRemove);\n    }\n\n    function off (event, handler) {\n        if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n        if (!handler) return events[event] = []\n        events[event] = events[event].filter(ev => ev !== handler);\n    }\n\n    function trigger (event, ...args) {\n        events[event].forEach(handler => handler(...args));\n    }\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, rejectOnError, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n\n        var res, rej;\n        function promiseCallback (err, ...args) {\n            // we don't care about the error, let the global error handler\n            // deal with it\n            if (err) return rejectOnError ? rej(err) : res()\n            if (args.length <= 1) return res(args[0])\n            res(args);\n        }\n\n        var item = q._createTaskItem(\n            data,\n            rejectOnError ? promiseCallback :\n                (callback || promiseCallback)\n        );\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n\n        if (rejectOnError || !callback) {\n            return new Promise((resolve, reject) => {\n                res = resolve;\n                rej = reject;\n            })\n        }\n    }\n\n    function _createCB(tasks) {\n        return function (err, ...args) {\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = workersList.indexOf(task);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback(err, ...args);\n\n                if (err != null) {\n                    trigger('error', err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                trigger('unsaturated');\n            }\n\n            if (q.idle()) {\n                trigger('drain');\n            }\n            q.process();\n        };\n    }\n\n    function _maybeDrain(data) {\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            setImmediate$1(() => trigger('drain'));\n            return true\n        }\n        return false\n    }\n\n    const eventMethod = (name) => (handler) => {\n        if (!handler) {\n            return new Promise((resolve, reject) => {\n                once(name, (err, data) => {\n                    if (err) return reject(err)\n                    resolve(data);\n                });\n            })\n        }\n        off(name);\n        on(name, handler);\n\n    };\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        _createTaskItem (data, callback) {\n            return {\n                data,\n                callback\n            };\n        },\n        *[Symbol.iterator] () {\n            yield* q._tasks[Symbol.iterator]();\n        },\n        concurrency,\n        payload,\n        buffer: concurrency / 4,\n        started: false,\n        paused: false,\n        push (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, false, callback))\n            }\n            return _insert(data, false, false, callback);\n        },\n        pushAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, true, callback))\n            }\n            return _insert(data, false, true, callback);\n        },\n        kill () {\n            off();\n            q._tasks.empty();\n        },\n        unshift (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, false, callback))\n            }\n            return _insert(data, true, false, callback);\n        },\n        unshiftAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, true, callback))\n            }\n            return _insert(data, true, true, callback);\n        },\n        remove (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    trigger('empty');\n                }\n\n                if (numRunning === q.concurrency) {\n                    trigger('saturated');\n                }\n\n                var cb = onlyOnce(_createCB(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length () {\n            return q._tasks.length;\n        },\n        running () {\n            return numRunning;\n        },\n        workersList () {\n            return workersList;\n        },\n        idle() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause () {\n            q.paused = true;\n        },\n        resume () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    // define these as fixed properties, so people get useful errors when updating\n    Object.defineProperties(q, {\n        saturated: {\n            writable: false,\n            value: eventMethod('saturated')\n        },\n        unsaturated: {\n            writable: false,\n            value: eventMethod('unsaturated')\n        },\n        empty: {\n            writable: false,\n            value: eventMethod('empty')\n        },\n        drain: {\n            writable: false,\n            value: eventMethod('drain')\n        },\n        error: {\n            writable: false,\n            value: eventMethod('error')\n        },\n    });\n    return q;\n}\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * await cargo.push({name: 'baz'});\n * console.log('finished processing baz');\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n * If the all `workers` are in progress, the task is queued until one becomes available. Once\n * a `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n * the cargoQueue passes an array of tasks to multiple parallel workers.\n *\n * @name cargoQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @see [async.cargo]{@link module:ControlFLow.cargo}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargoQueue and inner queue.\n * @example\n *\n * // create a cargoQueue object with payload 2 and concurrency 2\n * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2, 2);\n *\n * // add some items\n * cargoQueue.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargoQueue.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargoQueue.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n * cargoQueue.push({name: 'boo'}, function(err) {\n *     console.log('finished processing boo');\n * });\n */\nfunction cargo$1(worker, concurrency, payload) {\n    return queue(worker, concurrency, payload);\n}\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n *\n * // asynchronous function that computes the file size in bytes\n * // file size is added to the memoized value, then returned\n * function getFileSizeInBytes(memo, file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, memo + stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.reduce(fileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // 6000\n *     // which is the sum of the file sizes of the three files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback);\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfSeries$1(coll, (x, i, iterCb) => {\n        _iteratee(memo, x, (err, v) => {\n            memo = v;\n            iterCb(err);\n        });\n    }, err => callback(err, memo));\n}\nvar reduce$1 = awaitify(reduce, 4);\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         User.get.bind(User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(...functions) {\n    var _functions = functions.map(wrapAsync);\n    return function (...args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = promiseCallback();\n        }\n\n        reduce$1(_functions, args, (newargs, fn, iterCb) => {\n            fn.apply(that, newargs.concat((err, ...nextargs) => {\n                iterCb(err, nextargs);\n            }));\n        },\n        (err, results) => cb(err, ...results));\n\n        return cb[PROMISE_SYMBOL]\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * If the last argument to the composed function is not a function, a promise\n * is returned when you call it.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nfunction compose(...args) {\n    return seq(...args.reverse());\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapLimit (coll, limit, iteratee, callback) {\n    return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar mapLimit$1 = awaitify(mapLimit, 4);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapLimit\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, ...args) => {\n            if (err) return iterCb(err);\n            return iterCb(err, args);\n        });\n    }, (err, mapResults) => {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = result.concat(...mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n}\nvar concatLimit$1 = awaitify(concatLimit, 4);\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. The results array will be returned in\n * the original order of `coll` passed to the `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @alias flatMap\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * let directoryList = ['dir1','dir2','dir3'];\n * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n *\n * // Using callbacks\n * async.concat(directoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *    }\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *        // [ Error: ENOENT: no such file or directory ]\n *        // since dir4 does not exist\n *    } else {\n *        console.log(results);\n *    }\n * });\n *\n * // Using Promises\n * async.concat(directoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n * }).catch(err => {\n *      console.log(err);\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n * }).catch(err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4 does not exist\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.concat(directoryList, fs.readdir);\n *         console.log(results);\n *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *     } catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n *         console.log(results);\n *     } catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4 does not exist\n *     }\n * }\n *\n */\nfunction concat(coll, iteratee, callback) {\n    return concatLimit$1(coll, Infinity, iteratee, callback)\n}\nvar concat$1 = awaitify(concat, 3);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n    return concatLimit$1(coll, 1, iteratee, callback)\n}\nvar concatSeries$1 = awaitify(concatSeries, 3);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nfunction constant(...args) {\n    return function (...ignoredArgs/*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n}\n\nfunction _createTester(check, getResult) {\n    return (eachfn, arr, _iteratee, cb) => {\n        var testPassed = false;\n        var testResult;\n        const iteratee = wrapAsync(_iteratee);\n        eachfn(arr, (value, _, callback) => {\n            iteratee(value, (err, result) => {\n                if (err || err === false) return callback(err);\n\n                if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    return callback(null, breakLoop);\n                }\n                callback();\n            });\n        }, err => {\n            if (err) return cb(err);\n            cb(null, testPassed ? testResult : getResult(false));\n        });\n    };\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // dir1/file1.txt\n *        // result now equals the first file in the list that exists\n *    }\n *);\n *\n * // Using Promises\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n * .then(result => {\n *     console.log(result);\n *     // dir1/file1.txt\n *     // result now equals the first file in the list that exists\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n *         console.log(result);\n *         // dir1/file1.txt\n *         // result now equals the file in the list that exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction detect(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n}\nvar detect$1 = awaitify(detect, 3);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction detectLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar detectLimit$1 = awaitify(detectLimit, 4);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction detectSeries(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n}\n\nvar detectSeries$1 = awaitify(detectSeries, 3);\n\nfunction consoleFunc(name) {\n    return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n        /* istanbul ignore else */\n        if (typeof console === 'object') {\n            /* istanbul ignore else */\n            if (err) {\n                /* istanbul ignore else */\n                if (console.error) {\n                    console.error(err);\n                }\n            } else if (console[name]) { /* istanbul ignore else */\n                resultArgs.forEach(x => console[name](x));\n            }\n        }\n    })\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results;\n\n    function next(err, ...args) {\n        if (err) return callback(err);\n        if (err === false) return;\n        results = args;\n        _test(...args, check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return check(null, true);\n}\n\nvar doWhilst$1 = awaitify(doWhilst, 3);\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doUntil(iteratee, test, callback) {\n    const _test = wrapAsync(test);\n    return doWhilst$1(iteratee, (...args) => {\n        const cb = args.pop();\n        _test(...args, (err, truth) => cb (err, !truth));\n    }, callback);\n}\n\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n *\n * // asynchronous function that deletes a file\n * const deleteFile = function(file, callback) {\n *     fs.unlink(file, callback);\n * };\n *\n * // Using callbacks\n * async.each(fileList, deleteFile, function(err) {\n *     if( err ) {\n *         console.log(err);\n *     } else {\n *         console.log('All files have been deleted successfully');\n *     }\n * });\n *\n * // Error Handling\n * async.each(withMissingFileList, deleteFile, function(err){\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using Promises\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         await async.each(files, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         await async.each(withMissingFileList, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4/file2.txt does not exist\n *         // dir1/file1.txt could have been deleted\n *     }\n * }\n *\n */\nfunction eachLimit(coll, iteratee, callback) {\n    return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\nvar each = awaitify(eachLimit, 3);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\nvar eachLimit$2 = awaitify(eachLimit$1, 4);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n    return eachLimit$2(coll, 1, iteratee, callback)\n}\nvar eachSeries$1 = awaitify(eachSeries, 3);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        var sync = true;\n        args.push((...innerArgs) => {\n            if (sync) {\n                setImmediate$1(() => callback(...innerArgs));\n            } else {\n                callback(...innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    };\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.every(fileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * });\n *\n * async.every(withMissingFileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * });\n *\n * // Using Promises\n * async.every(fileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.every(withMissingFileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.every(fileList, fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.every(withMissingFileList, fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since NOT every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction every(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n}\nvar every$1 = awaitify(every, 3);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar everyLimit$1 = awaitify(everyLimit, 4);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everySeries(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar everySeries$1 = awaitify(everySeries, 3);\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            truthValues[index] = !!v;\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            if (err) return iterCb(err);\n            if (v) {\n                results.push({index, value: x});\n            }\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        callback(null, results\n            .sort((a, b) => a.index - b.index)\n            .map(v => v.value));\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    return filter(eachfn, coll, wrapAsync(iteratee), callback);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.filter(files, fileExists, function(err, results) {\n *    if(err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *        // results is now an array of the existing files\n *    }\n * });\n *\n * // Using Promises\n * async.filter(files, fileExists)\n * .then(results => {\n *     console.log(results);\n *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *     // results is now an array of the existing files\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.filter(files, fileExists);\n *         console.log(results);\n *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *         // results is now an array of the existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction filter (coll, iteratee, callback) {\n    return _filter(eachOf$1, coll, iteratee, callback)\n}\nvar filter$1 = awaitify(filter, 3);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterLimit (coll, limit, iteratee, callback) {\n    return _filter(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar filterLimit$1 = awaitify(filterLimit, 4);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterSeries (coll, iteratee, callback) {\n    return _filter(eachOfSeries$1, coll, iteratee, callback)\n}\nvar filterSeries$1 = awaitify(filterSeries, 3);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nvar forever$1 = awaitify(forever, 2);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupByLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, key) => {\n            if (err) return iterCb(err);\n            return iterCb(err, {key, val});\n        });\n    }, (err, mapResults) => {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var {hasOwnProperty} = Object.prototype;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var {key} = mapResults[i];\n                var {val} = mapResults[i];\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n}\n\nvar groupByLimit$1 = awaitify(groupByLimit, 4);\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const files = ['dir1/file1.txt','dir2','dir4']\n *\n * // asynchronous function that detects file type as none, file, or directory\n * function detectFile(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(null, 'none');\n *         }\n *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n *     });\n * }\n *\n * //Using callbacks\n * async.groupBy(files, detectFile, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *\t       console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n * });\n *\n * // Using Promises\n * async.groupBy(files, detectFile)\n * .then( result => {\n *     console.log(result);\n *     // {\n *     //     file: [ 'dir1/file1.txt' ],\n *     //     none: [ 'dir4' ],\n *     //     directory: [ 'dir2']\n *     // }\n *     // result is object containing the files grouped by type\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.groupBy(files, detectFile);\n *         console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction groupBy (coll, iteratee, callback) {\n    return groupByLimit$1(coll, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whose\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries (coll, iteratee, callback) {\n    return groupByLimit$1(coll, 1, iteratee, callback)\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfLimit(limit)(obj, (val, key, next) => {\n        _iteratee(val, key, (err, result) => {\n            if (err) return next(err);\n            newObj[key] = result;\n            next(err);\n        });\n    }, err => callback(err, newObj));\n}\n\nvar mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file3.txt'\n * };\n *\n * const withMissingFileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file4.txt'\n * };\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, key, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n * });\n *\n * // Error handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.mapValues(fileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // result is now a map of file size in bytes for each file, e.g.\n *     // {\n *     //     f1: 1000,\n *     //     f2: 2000,\n *     //     f3: 3000\n *     // }\n * }).catch (err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch (err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction mapValues(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesSeries(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, 1, iteratee, callback)\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            setImmediate$1(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/* istanbul ignore file */\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nvar parallel = awaitify((eachfn, tasks, callback) => {\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        wrapAsync(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n *\n * //Using Callbacks\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.parallel([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two'] even though\n *         // the second function had a shorter timeout.\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction parallel$1(tasks, callback) {\n    return parallel(eachOf$1, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n */\nfunction parallelLimit(tasks, limit, callback) {\n    return parallel(eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Iterable} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {number} payload - an integer that specifies how many items are\n * passed to the worker function at a time. only applies if this is a\n * [cargo]{@link module:ControlFlow.cargo} object\n * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n * a promise that rejects if an error occurs.\n * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n * a promise that rejects if an error occurs.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a function that sets a callback that is\n * called when the number of running workers hits the `concurrency` limit, and\n * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n * returns a promise for the next occurrence.\n * @property {Function} unsaturated - a function that sets a callback that is\n * called when the number of running workers is less than the `concurrency` &\n * `buffer` limits, and further tasks will not be queued. If the callback is\n * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a function that sets a callback that is called\n * when the last item from the `queue` is given to a `worker`. If the callback\n * is omitted, `q.empty()` returns a promise for the next occurrence.\n * @property {Function} drain - a function that sets a callback that is called\n * when the last item from the `queue` has returned from the `worker`. If the\n * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n * @property {Function} error - a function that sets a callback that is called\n * when a task errors. Has the signature `function(error, task)`. If the\n * callback is omitted, `error()` returns a promise that rejects on the next\n * error.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n *\n * @example\n * const q = async.queue(worker, 2)\n * q.push(item1)\n * q.push(item2)\n * q.push(item3)\n * // queues are iterable, spread into an array to inspect\n * const items = [...q] // [item1, item2, item3]\n * // or use for of\n * for (let item of q) {\n *     console.log(item)\n * }\n *\n * q.drain(() => {\n *     console.log('all done')\n * })\n * // or\n * await q.drain()\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain(function() {\n *     console.log('all items have been processed');\n * });\n * // or await the end\n * await q.drain()\n *\n * // assign an error callback\n * q.error(function(err, task) {\n *     console.error('task experienced an error');\n * });\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * // callback is optional\n * q.push({name: 'bar'});\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nfunction queue$1 (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue((items, cb) => {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n}\n\n// Binary min-heap implementation used for priority queue.\n// Implementation is stable, i.e. push time is considered for equal priorities\nclass Heap {\n    constructor() {\n        this.heap = [];\n        this.pushCount = Number.MIN_SAFE_INTEGER;\n    }\n\n    get length() {\n        return this.heap.length;\n    }\n\n    empty () {\n        this.heap = [];\n        return this;\n    }\n\n    percUp(index) {\n        let p;\n\n        while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n            let t = this.heap[index];\n            this.heap[index] = this.heap[p];\n            this.heap[p] = t;\n\n            index = p;\n        }\n    }\n\n    percDown(index) {\n        let l;\n\n        while ((l=leftChi(index)) < this.heap.length) {\n            if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                l = l+1;\n            }\n\n            if (smaller(this.heap[index], this.heap[l])) {\n                break;\n            }\n\n            let t = this.heap[index];\n            this.heap[index] = this.heap[l];\n            this.heap[l] = t;\n\n            index = l;\n        }\n    }\n\n    push(node) {\n        node.pushCount = ++this.pushCount;\n        this.heap.push(node);\n        this.percUp(this.heap.length-1);\n    }\n\n    unshift(node) {\n        return this.heap.push(node);\n    }\n\n    shift() {\n        let [top] = this.heap;\n\n        this.heap[0] = this.heap[this.heap.length-1];\n        this.heap.pop();\n        this.percDown(0);\n\n        return top;\n    }\n\n    toArray() {\n        return [...this];\n    }\n\n    *[Symbol.iterator] () {\n        for (let i = 0; i < this.heap.length; i++) {\n            yield this.heap[i].data;\n        }\n    }\n\n    remove (testFn) {\n        let j = 0;\n        for (let i = 0; i < this.heap.length; i++) {\n            if (!testFn(this.heap[i])) {\n                this.heap[j] = this.heap[i];\n                j++;\n            }\n        }\n\n        this.heap.splice(j);\n\n        for (let i = parent(this.heap.length-1); i >= 0; i--) {\n            this.percDown(i);\n        }\n\n        return this;\n    }\n}\n\nfunction leftChi(i) {\n    return (i<<1)+1;\n}\n\nfunction parent(i) {\n    return ((i+1)>>1)-1;\n}\n\nfunction smaller(x, y) {\n    if (x.priority !== y.priority) {\n        return x.priority < y.priority;\n    }\n    else {\n        return x.pushCount < y.pushCount;\n    }\n}\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are three\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * `pushAsync(task, priority, [callback])` - the same as `priorityQueue.push`,\n *   except this returns a promise that rejects if an error occurs.\n * * The `unshift` and `unshiftAsync` methods were removed.\n */\nfunction priorityQueue(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    var {\n        push,\n        pushAsync\n    } = q;\n\n    q._tasks = new Heap();\n    q._createTaskItem = ({data, priority}, callback) => {\n        return {\n            data,\n            priority,\n            callback\n        };\n    };\n\n    function createDataItems(tasks, priority) {\n        if (!Array.isArray(tasks)) {\n            return {data: tasks, priority};\n        }\n        return tasks.map(data => { return {data, priority}; });\n    }\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority = 0, callback) {\n        return push(createDataItems(data, priority), callback);\n    };\n\n    q.pushAsync = function(data, priority = 0, callback) {\n        return pushAsync(createDataItems(data, priority), callback);\n    };\n\n    // Remove unshift functions\n    delete q.unshift;\n    delete q.unshiftAsync;\n\n    return q;\n}\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\nvar race$1 = awaitify(race, 2);\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = [...array].reverse();\n    return reduce$1(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0){\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (Array.isArray(tasks)) {\n        results = tasks.map(reflect);\n    } else {\n        results = {};\n        Object.keys(tasks).forEach(key => {\n            results[key] = reflect.call(this, tasks[key]);\n        });\n    }\n    return results;\n}\n\nfunction reject(eachfn, arr, _iteratee, callback) {\n    const iteratee = wrapAsync(_iteratee);\n    return _filter(eachfn, arr, (value, cb) => {\n        iteratee(value, (err, v) => {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.reject(fileList, fileExists, function(err, results) {\n *    // [ 'dir3/file6.txt' ]\n *    // results now equals an array of the non-existing files\n * });\n *\n * // Using Promises\n * async.reject(fileList, fileExists)\n * .then( results => {\n *     console.log(results);\n *     // [ 'dir3/file6.txt' ]\n *     // results now equals an array of the non-existing files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.reject(fileList, fileExists);\n *         console.log(results);\n *         // [ 'dir3/file6.txt' ]\n *         // results now equals an array of the non-existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction reject$1 (coll, iteratee, callback) {\n    return reject(eachOf$1, coll, iteratee, callback)\n}\nvar reject$2 = awaitify(reject$1, 3);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectLimit (coll, limit, iteratee, callback) {\n    return reject(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar rejectLimit$1 = awaitify(rejectLimit, 4);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectSeries (coll, iteratee, callback) {\n    return reject(eachOfSeries$1, coll, iteratee, callback)\n}\nvar rejectSeries$1 = awaitify(rejectSeries, 3);\n\nfunction constant$1(value) {\n    return function () {\n        return value;\n    }\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || promiseCallback();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || promiseCallback();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[PROMISE_SYMBOL]\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ?\n            t.interval :\n            constant$1(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = (opts && opts.arity) || task.length;\n    if (isAsync(task)) {\n        arity += 1;\n    }\n    var _task = wrapAsync(task);\n    return initialParams((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = promiseCallback();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n        return callback[PROMISE_SYMBOL]\n    });\n}\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n *\n * //Using Callbacks\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * });\n *\n * // an example using objects instead of arrays\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.series([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction series(tasks, callback) {\n    return parallel(eachOfSeries$1, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // true\n *        // result is true since some file in the list exists\n *    }\n *);\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // false\n *        // result is false since none of the files exists\n *    }\n *);\n *\n * // Using Promises\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since some file in the list exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since none of the files exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since some file in the list exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since none of the files exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction some(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n}\nvar some$1 = awaitify(some, 3);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someLimit(coll, limit, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar someLimit$1 = awaitify(someLimit, 4);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someSeries(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar someSeries$1 = awaitify(someSeries, 3);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback passed\n * @example\n *\n * // bigfile.txt is a file that is 251100 bytes in size\n * // mediumfile.txt is a file that is 11000 bytes in size\n * // smallfile.txt is a file that is 121 bytes in size\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) return callback(getFileSizeErr);\n *         callback(null, fileSize);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // descending order\n * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) {\n *             return callback(getFileSizeErr);\n *         }\n *         callback(null, fileSize * -1);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n *         }\n *     }\n * );\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *             // [ Error: ENOENT: no such file or directory ]\n *         } else {\n *             console.log(results);\n *         }\n *     }\n * );\n *\n * // Using Promises\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now the original array of files sorted by\n *     // file size (ascending by default), e.g.\n *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *         // results is now the original array of files sorted by\n *         // file size (ascending by default), e.g.\n *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * // Error handling\n * async () => {\n *     try {\n *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return map$1(coll, (x, iterCb) => {\n        _iteratee(x, (err, criteria) => {\n            if (err) return iterCb(err);\n            iterCb(err, {value: x, criteria});\n        });\n    }, (err, results) => {\n        if (err) return callback(err);\n        callback(null, results.sort(comparator).map(v => v.value));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nvar sortBy$1 = awaitify(sortBy, 3);\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams((args, callback) => {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push((...cbArgs) => {\n            if (!timedOut) {\n                callback(...cbArgs);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn(...args);\n    });\n}\n\nfunction range(size) {\n    var result = Array(size);\n    while (size--) {\n        result[size] = size;\n    }\n    return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(range(count), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times (n, iteratee, callback) {\n    return timesLimit(n, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesSeries (n, iteratee, callback) {\n    return timesLimit(n, 1, iteratee, callback)\n}\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in parallel, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileList, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileList, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let result = await async.transform(fileList, transformFileSize);\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileMap, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileMap, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.transform(fileMap, transformFileSize);\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3 && typeof accumulator === 'function') {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = Array.isArray(coll) ? [] : {};\n    }\n    callback = once(callback || promiseCallback());\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf$1(coll, (v, k, cb) => {\n        _iteratee(accumulator, v, k, cb);\n    }, err => callback(err, accumulator));\n    return callback[PROMISE_SYMBOL]\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return eachSeries$1(tasks, (task, taskCb) => {\n        wrapAsync(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nvar tryEach$1 = awaitify(tryEach);\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function test(cb) { cb(null, count < 5); },\n *     function iter(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results = [];\n\n    function next(err, ...rest) {\n        if (err) return callback(err);\n        results = rest;\n        if (err === false) return;\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return _test(check);\n}\nvar whilst$1 = awaitify(whilst, 3);\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with (callback).\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * const results = []\n * let finished = false\n * async.until(function test(cb) {\n *     cb(null, finished)\n * }, function iter(next) {\n *     fetchPage(url, (err, body) => {\n *         if (err) return next(err)\n *         results = results.concat(body.objects)\n *         finished = !!body.next\n *         next(err)\n *     })\n * }, function done (err) {\n *     // all pages have been fetched\n * })\n */\nfunction until(test, iteratee, callback) {\n    const _test = wrapAsync(test);\n    return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall (tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        task(...args, onlyOnce(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nvar waterfall$1 = awaitify(waterfall);\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\nvar index = {\n    apply,\n    applyEach: applyEach$1,\n    applyEachSeries,\n    asyncify,\n    auto,\n    autoInject,\n    cargo,\n    cargoQueue: cargo$1,\n    compose,\n    concat: concat$1,\n    concatLimit: concatLimit$1,\n    concatSeries: concatSeries$1,\n    constant,\n    detect: detect$1,\n    detectLimit: detectLimit$1,\n    detectSeries: detectSeries$1,\n    dir,\n    doUntil,\n    doWhilst: doWhilst$1,\n    each,\n    eachLimit: eachLimit$2,\n    eachOf: eachOf$1,\n    eachOfLimit: eachOfLimit$2,\n    eachOfSeries: eachOfSeries$1,\n    eachSeries: eachSeries$1,\n    ensureAsync,\n    every: every$1,\n    everyLimit: everyLimit$1,\n    everySeries: everySeries$1,\n    filter: filter$1,\n    filterLimit: filterLimit$1,\n    filterSeries: filterSeries$1,\n    forever: forever$1,\n    groupBy,\n    groupByLimit: groupByLimit$1,\n    groupBySeries,\n    log,\n    map: map$1,\n    mapLimit: mapLimit$1,\n    mapSeries: mapSeries$1,\n    mapValues,\n    mapValuesLimit: mapValuesLimit$1,\n    mapValuesSeries,\n    memoize,\n    nextTick,\n    parallel: parallel$1,\n    parallelLimit,\n    priorityQueue,\n    queue: queue$1,\n    race: race$1,\n    reduce: reduce$1,\n    reduceRight,\n    reflect,\n    reflectAll,\n    reject: reject$2,\n    rejectLimit: rejectLimit$1,\n    rejectSeries: rejectSeries$1,\n    retry,\n    retryable,\n    seq,\n    series,\n    setImmediate: setImmediate$1,\n    some: some$1,\n    someLimit: someLimit$1,\n    someSeries: someSeries$1,\n    sortBy: sortBy$1,\n    timeout,\n    times,\n    timesLimit,\n    timesSeries,\n    transform,\n    tryEach: tryEach$1,\n    unmemoize,\n    until,\n    waterfall: waterfall$1,\n    whilst: whilst$1,\n\n    // aliases\n    all: every$1,\n    allLimit: everyLimit$1,\n    allSeries: everySeries$1,\n    any: some$1,\n    anyLimit: someLimit$1,\n    anySeries: someSeries$1,\n    find: detect$1,\n    findLimit: detectLimit$1,\n    findSeries: detectSeries$1,\n    flatMap: concat$1,\n    flatMapLimit: concatLimit$1,\n    flatMapSeries: concatSeries$1,\n    forEach: each,\n    forEachSeries: eachSeries$1,\n    forEachLimit: eachLimit$2,\n    forEachOf: eachOf$1,\n    forEachOfSeries: eachOfSeries$1,\n    forEachOfLimit: eachOfLimit$2,\n    inject: reduce$1,\n    foldl: reduce$1,\n    foldr: reduceRight,\n    select: filter$1,\n    selectLimit: filterLimit$1,\n    selectSeries: filterSeries$1,\n    wrapSync: asyncify,\n    during: whilst$1,\n    doDuring: doWhilst$1\n};\n\nexport default index;\nexport { apply, applyEach$1 as applyEach, applyEachSeries, asyncify, auto, autoInject, cargo, cargo$1 as cargoQueue, compose, concat$1 as concat, concatLimit$1 as concatLimit, concatSeries$1 as concatSeries, constant, detect$1 as detect, detectLimit$1 as detectLimit, detectSeries$1 as detectSeries, dir, doUntil, doWhilst$1 as doWhilst, each, eachLimit$2 as eachLimit, eachOf$1 as eachOf, eachOfLimit$2 as eachOfLimit, eachOfSeries$1 as eachOfSeries, eachSeries$1 as eachSeries, ensureAsync, every$1 as every, everyLimit$1 as everyLimit, everySeries$1 as everySeries, filter$1 as filter, filterLimit$1 as filterLimit, filterSeries$1 as filterSeries, forever$1 as forever, groupBy, groupByLimit$1 as groupByLimit, groupBySeries, log, map$1 as map, mapLimit$1 as mapLimit, mapSeries$1 as mapSeries, mapValues, mapValuesLimit$1 as mapValuesLimit, mapValuesSeries, memoize, nextTick, parallel$1 as parallel, parallelLimit, priorityQueue, queue$1 as queue, race$1 as race, reduce$1 as reduce, reduceRight, reflect, reflectAll, reject$2 as reject, rejectLimit$1 as rejectLimit, rejectSeries$1 as rejectSeries, retry, retryable, seq, series, setImmediate$1 as setImmediate, some$1 as some, someLimit$1 as someLimit, someSeries$1 as someSeries, sortBy$1 as sortBy, timeout, times, timesLimit, timesSeries, transform, tryEach$1 as tryEach, unmemoize, until, waterfall$1 as waterfall, whilst$1 as whilst, every$1 as all, everyLimit$1 as allLimit, everySeries$1 as allSeries, some$1 as any, someLimit$1 as anyLimit, someSeries$1 as anySeries, detect$1 as find, detectLimit$1 as findLimit, detectSeries$1 as findSeries, concat$1 as flatMap, concatLimit$1 as flatMapLimit, concatSeries$1 as flatMapSeries, each as forEach, eachSeries$1 as forEachSeries, eachLimit$2 as forEachLimit, eachOf$1 as forEachOf, eachOfSeries$1 as forEachOfSeries, eachOfLimit$2 as forEachOfLimit, reduce$1 as inject, reduce$1 as foldl, reduceRight as foldr, filter$1 as select, filterLimit$1 as selectLimit, filterSeries$1 as selectSeries, asyncify as wrapSync, whilst$1 as during, doWhilst$1 as doDuring };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iterableMemoMethodsFactory = exports.iterableLimitMethodsFactory = exports.iterableEachOfLimitMethodsFactory = exports.iterableEachOfMethodsFactory = exports.iterableMethodsFactory = void 0;\n/**\n * A factory that turns functions (both fully concurrent and fully in series)\n * from the async library into methods/handlers\n * for LDflex\n * @param asyncFunction The function to turn into a method/handler for LDflex\n */\nfunction iterableMethodsFactory(asyncFunction) {\n    return class {\n        handle(pathData, path) {\n            return (parameterFunction) => new Promise((resolve, reject) => {\n                asyncFunction(path, ((item, callback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const result = yield parameterFunction(yield Promise.resolve(item));\n                        // eslint-disable-next-line callback-return\n                        callback(null, result);\n                    }\n                    catch (e) {\n                        // eslint-disable-next-line callback-return\n                        callback(e);\n                    }\n                })), (err, res) => __awaiter(this, void 0, void 0, function* () {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(Array.isArray(res) ? yield Promise.all(res) : res);\n                }));\n            });\n        }\n    };\n}\nexports.iterableMethodsFactory = iterableMethodsFactory;\n/**\n * A factory that turns functions (both fully concurrent and fully in series)\n * from the async library into methods/handlers for LDflex\n * Use specifically for EachOf methods\n * @param asyncFunction The function to turn into a method/handler for LDflex\n */\nfunction iterableEachOfMethodsFactory(asyncFunction) {\n    return class {\n        handle(pathData, path) {\n            return (parameterFunction) => new Promise((resolve, reject) => {\n                asyncFunction(path, ((item, key, callback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const result = yield parameterFunction(yield Promise.resolve(item), key);\n                        // eslint-disable-next-line callback-return\n                        callback(null, result);\n                    }\n                    catch (e) {\n                        // eslint-disable-next-line callback-return\n                        callback(e);\n                    }\n                })), (err, res) => __awaiter(this, void 0, void 0, function* () {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(res);\n                }));\n            });\n        }\n    };\n}\nexports.iterableEachOfMethodsFactory = iterableEachOfMethodsFactory;\n/**\n * A factory that turns functions with a limited concurrency\n * from the async library into methods/handlers\n * for LDflex\n * Use specifically for EachOf methods\n * @param asyncFunction The function to turn into a method/handler for LDflex\n */\nfunction iterableEachOfLimitMethodsFactory(asyncFunction) {\n    return class {\n        handle(pathData, path) {\n            return (parameterFunction, limit = 5) => new Promise((resolve, reject) => {\n                asyncFunction(path, limit, ((item, key, callback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const resolvedItem = yield item;\n                        const result = yield parameterFunction(resolvedItem, key);\n                        // eslint-disable-next-line callback-return\n                        callback(null, result);\n                    }\n                    catch (e) {\n                        // eslint-disable-next-line callback-return\n                        callback(e);\n                    }\n                })), (err, res) => __awaiter(this, void 0, void 0, function* () {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(res);\n                }));\n            });\n        }\n    };\n}\nexports.iterableEachOfLimitMethodsFactory = iterableEachOfLimitMethodsFactory;\n/**\n * A factory that turns functions with a limited concurrency\n * from the async library into methods/handlers\n * for LDflex\n * @param asyncFunction The function to turn into a method/handler for LDflex\n */\nfunction iterableLimitMethodsFactory(asyncFunction) {\n    return class {\n        handle(pathData, path) {\n            return (parameterFunction, limit = 5) => new Promise((resolve, reject) => {\n                asyncFunction(path, limit, ((item, callback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const resolvedItem = yield item;\n                        const result = yield parameterFunction(resolvedItem);\n                        // eslint-disable-next-line callback-return\n                        callback(undefined, result);\n                    }\n                    catch (e) {\n                        // eslint-disable-next-line callback-return\n                        callback(e);\n                    }\n                })), (err, res) => __awaiter(this, void 0, void 0, function* () {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(Array.isArray(res) ? yield Promise.all(res) : res);\n                }));\n            });\n        }\n    };\n}\nexports.iterableLimitMethodsFactory = iterableLimitMethodsFactory;\n/**\n * A factory that turns functions (both fully concurrent and fully in series)\n * from the async library into methods/handlers\n * for LDflex\n * Used specifically for methods with memo's i.e. reducers\n * @param asyncFunction The function to turn into a method/handler for LDflex\n */\nfunction iterableMemoMethodsFactory(asyncFunction) {\n    return class {\n        handle(pathData, path) {\n            return (parameterFunction, memo) => new Promise((resolve, reject) => {\n                asyncFunction(path, memo, ((_memo, item, callback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const result = yield parameterFunction(_memo, yield Promise.resolve(item));\n                        // eslint-disable-next-line callback-return\n                        callback(undefined, result);\n                    }\n                    catch (e) {\n                        // eslint-disable-next-line callback-return\n                        callback(e);\n                    }\n                })), (err, res) => __awaiter(this, void 0, void 0, function* () {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(Array.isArray(res) ? yield Promise.all(res) : res);\n                }));\n            });\n        }\n    };\n}\nexports.iterableMemoMethodsFactory = iterableMemoMethodsFactory;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.some = exports.reduce = exports.map = exports.forEachOf = exports.forEach = exports.find = exports.filter = exports.every = void 0;\n/* eslint-disable new-cap */\nconst IterableMethods = __importStar(require(\"./asyncIterationHandlers\"));\nexports.every = new IterableMethods.everySeries();\nexports.filter = new IterableMethods.filterSeries();\nexports.find = new IterableMethods.findSeries();\nexports.forEach = new IterableMethods.forEachSeries();\nexports.forEachOf = new IterableMethods.forEachOfSeries();\nexports.map = new IterableMethods.mapSeries();\nexports.reduce = new IterableMethods.reduce();\n// export const reduceRight = new IterableMethods.reduceRight();\n// export const reject = new IterableMethods.rejectSeries();\nexports.some = new IterableMethods.someSeries();\n// export const transform = new IterableMethods.transform();\n","export class MapSet extends Map {\n  set(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\n\nexport class WeakMapSet extends WeakMap {\n  set(key, value) {\n    super.set(key, value);\n    return value;\n  }\n}\n","/*! (c) Andrea Giammarchi - ISC */\nconst empty = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\nconst elements = /<([a-z]+[a-z0-9:._-]*)([^>]*?)(\\/?)>/g;\nconst attributes = /([^\\s\\\\>\"'=]+)\\s*=\\s*(['\"]?)\\x01/g;\nconst holes = /[\\x01\\x02]/g;\n\n// \\x01 Node.ELEMENT_NODE\n// \\x02 Node.ATTRIBUTE_NODE\n\n/**\n * Given a template, find holes as both nodes and attributes and\n * return a string with holes as either comment nodes or named attributes.\n * @param {string[]} template a template literal tag array\n * @param {string} prefix prefix to use per each comment/attribute\n * @param {boolean} svg enforces self-closing tags\n * @returns {string} X/HTML with prefixed comments or attributes\n */\nexport default (template, prefix, svg) => {\n  let i = 0;\n  return template\n          .join('\\x01')\n          .trim()\n          .replace(\n            elements,\n            (_, name, attrs, selfClosing) => {\n              let ml = name + attrs.replace(attributes, '\\x02=$2$1').trimEnd();\n              if (selfClosing.length)\n                ml += (svg || empty.test(name)) ? ' /' : ('></' + name);\n              return '<' + ml + '>';\n            }\n          )\n          .replace(\n            holes,\n            hole => hole === '\\x01' ?\n              ('<!--' + prefix + i++ + '-->') :\n              (prefix + i++)\n          );\n};\n","const ELEMENT_NODE = 1;\nconst nodeType = 111;\n\nconst remove = ({firstChild, lastChild}) => {\n  const range = document.createRange();\n  range.setStartAfter(firstChild);\n  range.setEndAfter(lastChild);\n  range.deleteContents();\n  return firstChild;\n};\n\nexport const diffable = (node, operation) => node.nodeType === nodeType ?\n  ((1 / operation) < 0 ?\n    (operation ? remove(node) : node.lastChild) :\n    (operation ? node.valueOf() : node.firstChild)) :\n  node\n;\n\nexport const persistent = fragment => {\n  const {firstChild, lastChild} = fragment;\n  if (firstChild === lastChild)\n    return lastChild || fragment;\n  const {childNodes} = fragment;\n  const nodes = [...childNodes];\n  return {\n    ELEMENT_NODE,\n    nodeType,\n    firstChild,\n    lastChild,\n    valueOf() {\n      if (childNodes.length !== nodes.length)\n        fragment.append(...nodes);\n      return fragment;\n    }\n  };\n};\n","const {isArray} = Array;\nconst {indexOf, slice} = [];\n\nexport {isArray, indexOf, slice};\n","import {isArray} from 'uarray';\n\n// flag for foreign checks (slower path, fast by default)\nlet useForeign = false;\n\nexport class Foreign {\n  constructor(handler, value) {\n    useForeign = true;\n    this._ = (...args) => handler(...args, value);\n  }\n}\n\nexport const foreign = (handler, value) => new Foreign(handler, value);\n\nexport const aria = node => values => {\n  for (const key in values) {\n    const name = key === 'role' ? key : `aria-${key}`;\n    const value = values[key];\n    if (value == null)\n      node.removeAttribute(name);\n    else\n      node.setAttribute(name, value);\n  }\n};\n\nexport const attribute = (node, name) => {\n  let oldValue, orphan = true;\n  const attributeNode = document.createAttributeNS(null, name);\n  return newValue => {\n    if (oldValue !== newValue) {\n      oldValue = newValue;\n      if (oldValue == null) {\n        if (!orphan) {\n          node.removeAttributeNode(attributeNode);\n          orphan = true;\n        }\n      }\n      else {\n        const value = useForeign && (newValue instanceof Foreign) ?\n                        newValue._(node, name) : newValue;\n        if (value == null) {\n          if (!orphan)\n            node.removeAttributeNode(attributeNode);\n            orphan = true;\n        }\n        else {\n          attributeNode.value = value;\n          if (orphan) {\n            node.setAttributeNodeNS(attributeNode);\n            orphan = false;\n          }\n        }\n      }\n    }\n  };\n};\n\nexport const boolean = (node, key, oldValue) => newValue => {\n  if (oldValue !== !!newValue) {\n    // when IE won't be around anymore ...\n    // node.toggleAttribute(key, oldValue = !!newValue);\n    if ((oldValue = !!newValue))\n      node.setAttribute(key, '');\n    else\n      node.removeAttribute(key);\n  }\n};\n\nexport const data = ({dataset}) => values => {\n  for (const key in values) {\n    const value = values[key];\n    if (value == null)\n      delete dataset[key];\n    else\n      dataset[key] = value;\n  }\n};\n\nexport const event = (node, name) => {\n  let oldValue, lower, type = name.slice(2);\n  if (!(name in node) && (lower = name.toLowerCase()) in node)\n    type = lower.slice(2);\n  return newValue => {\n    const info = isArray(newValue) ? newValue : [newValue, false];\n    if (oldValue !== info[0]) {\n      if (oldValue)\n        node.removeEventListener(type, oldValue, info[1]);\n      if (oldValue = info[0])\n        node.addEventListener(type, oldValue, info[1]);\n    }\n  };\n};\n\nexport const ref = node => {\n  let oldValue;\n  return value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      if (typeof value === 'function')\n        value(node);\n      else\n        value.current = node;\n    }\n  };\n};\n\nexport const setter = (node, key) => key === 'dataset' ?\n  data(node) :\n  value => {\n    node[key] = value;\n  };\n\nexport const text = node => {\n  let oldValue;\n  return newValue => {\n    if (oldValue != newValue) {\n      oldValue = newValue;\n      node.textContent = newValue == null ? '' : newValue;\n    }\n  };\n};\n","/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * @param {Node} parentNode The container where children live\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nexport default (parentNode, a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ?\n        (bStart ?\n          (get(b[bStart - 1], -0).nextSibling) :\n          get(b[bEnd - bStart], 0)) :\n        before;\n      while (bStart < bEnd)\n        parentNode.insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart]))\n          parentNode.removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (\n      a[aStart] === b[bEnd - 1] &&\n      b[bStart] === a[aEnd - 1]\n    ) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      parentNode.insertBefore(\n        get(b[bStart++], 1),\n        get(a[aStart++], -1).nextSibling\n      );\n      parentNode.insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map;\n        let i = bStart;\n        while (i < bEnd)\n          map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === (index + sequence))\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > (index - bStart)) {\n            const node = get(a[aStart], 0);\n            while (bStart < index)\n              parentNode.insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            parentNode.replaceChild(\n              get(b[bStart++], 1),\n              get(a[aStart++], -1)\n            );\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else\n          aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else\n        parentNode.removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b;\n};\n","const {isArray, prototype} = Array;\nconst {indexOf} = prototype;\n\nexport {isArray, indexOf};\n\nconst {\n  createDocumentFragment,\n  createElement,\n  createElementNS,\n  createTextNode,\n  createTreeWalker,\n  importNode\n} = new Proxy(document, {\n  get: (target, method) => target[method].bind(target)\n});\n\nexport {createTextNode, createTreeWalker, importNode};\n\nconst createHTML = html => {\n  const template = createElement('template');\n  template.innerHTML = html;\n  return template.content;\n};\n\nlet xml;\nconst createSVG = svg => {\n  if (!xml) xml = createElementNS('http://www.w3.org/2000/svg', 'svg');\n  xml.innerHTML = svg;\n  const content = createDocumentFragment();\n  content.append(...xml.childNodes);\n  return content;\n};\n\nexport const createContent = (text, svg) => svg ?\n                              createSVG(text) : createHTML(text);\n","import {diffable} from '@webreflection/uwire';\n\nimport {aria, attribute, boolean, event, ref, setter, text} from 'uhandlers';\nimport udomdiff from 'udomdiff';\n\nimport {isArray, createTextNode} from './utils.js';\n\n// from a generic path, retrieves the exact targeted node\nconst reducePath = ({childNodes}, i) => childNodes[i];\n\n// this helper avoid code bloat around handleAnything() callback\nconst diff = (comment, oldNodes, newNodes) => udomdiff(\n  comment.parentNode,\n  // TODO: there is a possible edge case where a node has been\n  //       removed manually, or it was a keyed one, attached\n  //       to a shared reference between renders.\n  //       In this case udomdiff might fail at removing such node\n  //       as its parent won't be the expected one.\n  //       The best way to avoid this issue is to filter oldNodes\n  //       in search of those not live, or not in the current parent\n  //       anymore, but this would require both a change to uwire,\n  //       exposing a parentNode from the firstChild, as example,\n  //       but also a filter per each diff that should exclude nodes\n  //       that are not in there, penalizing performance quite a lot.\n  //       As this has been also a potential issue with domdiff,\n  //       and both lighterhtml and hyperHTML might fail with this\n  //       very specific edge case, I might as well document this possible\n  //       \"diffing shenanigan\" and call it a day.\n  oldNodes,\n  newNodes,\n  diffable,\n  comment\n);\n\n// if an interpolation represents a comment, the whole\n// diffing will be related to such comment.\n// This helper is in charge of understanding how the new\n// content for such interpolation/hole should be updated\nconst handleAnything = comment => {\n  let oldValue, text, nodes = [];\n  const anyContent = newValue => {\n    switch (typeof newValue) {\n      // primitives are handled as text content\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (oldValue !== newValue) {\n          oldValue = newValue;\n          if (!text)\n            text = createTextNode('');\n          text.data = newValue;\n          nodes = diff(comment, nodes, [text]);\n        }\n        break;\n      // null, and undefined are used to cleanup previous content\n      case 'object':\n      case 'undefined':\n        if (newValue == null) {\n          if (oldValue != newValue) {\n            oldValue = newValue;\n            nodes = diff(comment, nodes, []);\n          }\n          break;\n        }\n        // arrays and nodes have a special treatment\n        if (isArray(newValue)) {\n          oldValue = newValue;\n          // arrays can be used to cleanup, if empty\n          if (newValue.length === 0)\n            nodes = diff(comment, nodes, []);\n          // or diffed, if these contains nodes or \"wires\"\n          else if (typeof newValue[0] === 'object')\n            nodes = diff(comment, nodes, newValue);\n          // in all other cases the content is stringified as is\n          else\n            anyContent(String(newValue));\n          break;\n        }\n        // if the new value is a DOM node, or a wire, and it's\n        // different from the one already live, then it's diffed.\n        // if the node is a fragment, it's appended once via its childNodes\n        // There is no `else` here, meaning if the content\n        // is not expected one, nothing happens, as easy as that.\n        if (oldValue !== newValue && 'ELEMENT_NODE' in newValue) {\n          oldValue = newValue;\n          nodes = diff(\n            comment,\n            nodes,\n            newValue.nodeType === 11 ?\n              [...newValue.childNodes] :\n              [newValue]\n          );\n        }\n        break;\n      case 'function':\n        anyContent(newValue(comment));\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// attributes can be:\n//  * ref=${...}      for hooks and other purposes\n//  * aria=${...}     for aria attributes\n//  * ?boolean=${...} for boolean attributes\n//  * .dataset=${...} for dataset related attributes\n//  * .setter=${...}  for Custom Elements setters or nodes with setters\n//                    such as buttons, details, options, select, etc\n//  * @event=${...}   to explicitly handle event listeners\n//  * onevent=${...}  to automatically handle event listeners\n//  * generic=${...}  to handle an attribute just like an attribute\nconst handleAttribute = (node, name/*, svg*/) => {\n  switch (name[0]) {\n    case '?': return boolean(node, name.slice(1), false);\n    case '.': return setter(node, name.slice(1));\n    case '@': return event(node, 'on' + name.slice(1));\n    case 'o': if (name[1] === 'n') return event(node, name);\n  }\n\n  switch (name) {\n    case 'ref': return ref(node);\n    case 'aria': return aria(node);\n  }\n\n  return attribute(node, name/*, svg*/);\n};\n\n// each mapped update carries the update type and its path\n// the type is either node, attribute, or text, while\n// the path is how to retrieve the related node to update.\n// In the attribute case, the attribute name is also carried along.\nexport function handlers(options) {\n  const {type, path} = options;\n  const node = path.reduceRight(reducePath, this);\n  return type === 'node' ?\n    handleAnything(node) :\n    (type === 'attr' ?\n      handleAttribute(node, options.name/*, options.svg*/) :\n      text(node));\n};\n","import {WeakMapSet} from '@webreflection/mapset';\nimport instrument from '@webreflection/uparser';\nimport {persistent} from '@webreflection/uwire';\n\nimport {handlers} from './handlers.js';\nimport {isArray, indexOf, createContent, createTreeWalker, importNode} from './utils.js';\n\n// from a fragment container, create an array of indexes\n// related to its child nodes, so that it's possible\n// to retrieve later on exact node via reducePath\nconst createPath = node => {\n  const path = [];\n  let {parentNode} = node;\n  while (parentNode) {\n    path.push(indexOf.call(parentNode.childNodes, node));\n    node = parentNode;\n    ({parentNode} = node);\n  }\n  return path;\n};\n\n// the prefix is used to identify either comments, attributes, or nodes\n// that contain the related unique id. In the attribute cases\n// isµX=\"attribute-name\" will be used to map current X update to that\n// attribute name, while comments will be like <!--isµX-->, to map\n// the update to that specific comment node, hence its parent.\n// style and textarea will have <!--isµX--> text content, and are handled\n// directly through text-only updates.\nconst prefix = 'isµ';\n\n// Template Literals are unique per scope and static, meaning a template\n// should be parsed once, and once only, as it will always represent the same\n// content, within the exact same amount of updates each time.\n// This cache relates each template to its unique content and updates.\nconst cache = new WeakMapSet;\n\n// a RegExp that helps checking nodes that cannot contain comments\nconst textOnly = /^(?:textarea|script|style|title|plaintext|xmp)$/;\n\nexport const createCache = () => ({\n  stack: [],    // each template gets a stack for each interpolation \"hole\"\n\n  entry: null,  // each entry contains details, such as:\n                //  * the template that is representing\n                //  * the type of node it represents (html or svg)\n                //  * the content fragment with all nodes\n                //  * the list of updates per each node (template holes)\n                //  * the \"wired\" node or fragment that will get updates\n                // if the template or type are different from the previous one\n                // the entry gets re-created each time\n\n  wire: null    // each rendered node represent some wired content and\n                // this reference to the latest one. If different, the node\n                // will be cleaned up and the new \"wire\" will be appended\n});\n\n// the entry stored in the rendered node cache, and per each \"hole\"\nconst createEntry = (type, template) => {\n  const {content, updates} = mapUpdates(type, template);\n  return {type, template, content, updates, wire: null};\n};\n\n// a template is instrumented to be able to retrieve where updates are needed.\n// Each unique template becomes a fragment, cloned once per each other\n// operation based on the same template, i.e. data => html`<p>${data}</p>`\nconst mapTemplate = (type, template) => {\n  const svg = type === 'svg';\n  const text = instrument(template, prefix, svg);\n  const content = createContent(text, svg);\n  // once instrumented and reproduced as fragment, it's crawled\n  // to find out where each update is in the fragment tree\n  const tw = createTreeWalker(content, 1 | 128);\n  const nodes = [];\n  const length = template.length - 1;\n  let i = 0;\n  // updates are searched via unique names, linearly increased across the tree\n  // <div isµ0=\"attr\" isµ1=\"other\"><!--isµ2--><style><!--isµ3--</style></div>\n  let search = `${prefix}${i}`;\n  while (i < length) {\n    const node = tw.nextNode();\n    // if not all updates are bound but there's nothing else to crawl\n    // it means that there is something wrong with the template.\n    if (!node)\n      throw `bad template: ${text}`;\n    // if the current node is a comment, and it contains isµX\n    // it means the update should take care of any content\n    if (node.nodeType === 8) {\n      // The only comments to be considered are those\n      // which content is exactly the same as the searched one.\n      if (node.data === search) {\n        nodes.push({type: 'node', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n    else {\n      // if the node is not a comment, loop through all its attributes\n      // named isµX and relate attribute updates to this node and the\n      // attribute name, retrieved through node.getAttribute(\"isµX\")\n      // the isµX attribute will be removed as irrelevant for the layout\n      // let svg = -1;\n      while (node.hasAttribute(search)) {\n        nodes.push({\n          type: 'attr',\n          path: createPath(node),\n          name: node.getAttribute(search)\n        });\n        node.removeAttribute(search);\n        search = `${prefix}${++i}`;\n      }\n      // if the node was a style, textarea, or others, check its content\n      // and if it is <!--isµX--> then update tex-only this node\n      if (\n        textOnly.test(node.localName) &&\n        node.textContent.trim() === `<!--${search}-->`\n      ){\n        node.textContent = '';\n        nodes.push({type: 'text', path: createPath(node)});\n        search = `${prefix}${++i}`;\n      }\n    }\n  }\n  // once all nodes to update, or their attributes, are known, the content\n  // will be cloned in the future to represent the template, and all updates\n  // related to such content retrieved right away without needing to re-crawl\n  // the exact same template, and its content, more than once.\n  return {content, nodes};\n};\n\n// if a template is unknown, perform the previous mapping, otherwise grab\n// its details such as the fragment with all nodes, and updates info.\nconst mapUpdates = (type, template) => {\n  const {content, nodes} = (\n    cache.get(template) ||\n    cache.set(template, mapTemplate(type, template))\n  );\n  // clone deeply the fragment\n  const fragment = importNode(content, true);\n  // and relate an update handler per each node that needs one\n  const updates = nodes.map(handlers, fragment);\n  // return the fragment and all updates to use within its nodes\n  return {content: fragment, updates};\n};\n\n// as html and svg can be nested calls, but no parent node is known\n// until rendered somewhere, the unroll operation is needed to\n// discover what to do with each interpolation, which will result\n// into an update operation.\nexport const unroll = (info, {type, template, values}) => {\n  // interpolations can contain holes and arrays, so these need\n  // to be recursively discovered\n  const length = unrollValues(info, values);\n  let {entry} = info;\n  // if the cache entry is either null or different from the template\n  // and the type this unroll should resolve, create a new entry\n  // assigning a new content fragment and the list of updates.\n  if (!entry || (entry.template !== template || entry.type !== type))\n    info.entry = (entry = createEntry(type, template));\n  const {content, updates, wire} = entry;\n  // even if the fragment and its nodes is not live yet,\n  // it is already possible to update via interpolations values.\n  for (let i = 0; i < length; i++)\n    updates[i](values[i]);\n  // if the entry was new, or representing a different template or type,\n  // create a new persistent entity to use during diffing.\n  // This is simply a DOM node, when the template has a single container,\n  // as in `<p></p>`, or a \"wire\" in `<p></p><p></p>` and similar cases.\n  return wire || (entry.wire = persistent(content));\n};\n\n// the stack retains, per each interpolation value, the cache\n// related to each interpolation value, or null, if the render\n// was conditional and the value is not special (Array or Hole)\nconst unrollValues = ({stack}, values) => {\n  const {length} = values;\n  for (let i = 0; i < length; i++) {\n    const hole = values[i];\n    // each Hole gets unrolled and re-assigned as value\n    // so that domdiff will deal with a node/wire, not with a hole\n    if (hole instanceof Hole)\n      values[i] = unroll(\n        stack[i] || (stack[i] = createCache()),\n        hole\n      );\n    // arrays are recursively resolved so that each entry will contain\n    // also a DOM node or a wire, hence it can be diffed if/when needed\n    else if (isArray(hole))\n      unrollValues(stack[i] || (stack[i] = createCache()), hole);\n    // if the value is nothing special, the stack doesn't need to retain data\n    // this is useful also to cleanup previously retained data, if the value\n    // was a Hole, or an Array, but not anymore, i.e.:\n    // const update = content => html`<div>${content}</div>`;\n    // update(listOfItems); update(null); update(html`hole`)\n    else\n      stack[i] = null;\n  }\n  if (length < stack.length)\n    stack.splice(length);\n  return length;\n};\n\n/**\n * Holds all details wrappers needed to render the content further on.\n * @constructor\n * @param {string} type The hole type, either `html` or `svg`.\n * @param {string[]} template The template literals used to the define the content.\n * @param {Array} values Zero, one, or more interpolated values to render.\n */\nexport class Hole {\n  constructor(type, template, values) {\n    this.type = type;\n    this.template = template;\n    this.values = values;\n  }\n};\n","import {MapSet, WeakMapSet} from '@webreflection/mapset';\n\nimport {Hole, createCache, unroll} from './rabbit.js';\n\n// both `html` and `svg` template literal tags are polluted\n// with a `for(ref[, id])` and a `node` tag too\nconst tag = type => {\n  // both `html` and `svg` tags have their own cache\n  const keyed = new WeakMapSet;\n  // keyed operations always re-use the same cache and unroll\n  // the template and its interpolations right away\n  const fixed = cache => (template, ...values) => unroll(\n    cache,\n    {type, template, values}\n  );\n  return Object.assign(\n    // non keyed operations are recognized as instance of Hole\n    // during the \"unroll\", recursively resolved and updated\n    (template, ...values) => new Hole(type, template, values),\n    {\n      // keyed operations need a reference object, usually the parent node\n      // which is showing keyed results, and optionally a unique id per each\n      // related node, handy with JSON results and mutable list of objects\n      // that usually carry a unique identifier\n      for(ref, id) {\n        const memo = keyed.get(ref) || keyed.set(ref, new MapSet);\n        return memo.get(id) || memo.set(id, fixed(createCache()));\n      },\n      // it is possible to create one-off content out of the box via node tag\n      // this might return the single created node, or a fragment with all\n      // nodes present at the root level and, of course, their child nodes\n      node: (template, ...values) => unroll(createCache(), new Hole(type, template, values)).valueOf()\n    }\n  );\n};\n\n// each rendered node gets its own cache\nconst cache = new WeakMapSet;\n\n// rendering means understanding what `html` or `svg` tags returned\n// and it relates a specific node to its own unique cache.\n// Each time the content to render changes, the node is cleaned up\n// and the new new content is appended, and if such content is a Hole\n// then it's \"unrolled\" to resolve all its inner nodes.\nconst render = (where, what) => {\n  const hole = typeof what === 'function' ? what() : what;\n  const info = cache.get(where) || cache.set(where, createCache());\n  const wire = hole instanceof Hole ? unroll(info, hole) : hole;\n  if (wire !== info.wire) {\n    info.wire = wire;\n    // valueOf() simply returns the node itself, but in case it was a \"wire\"\n    // it will eventually re-append all nodes to its fragment so that such\n    // fragment can be re-appended many times in a meaningful way\n    // (wires are basically persistent fragments facades with special behavior)\n    where.replaceChildren(wire.valueOf());\n  }\n  return where;\n};\n\nconst html = tag('html');\nconst svg = tag('svg');\n\nexport {Hole, render, html, svg};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/ContextParser\"), exports);\n__exportStar(require(\"./lib/ErrorCoded\"), exports);\n__exportStar(require(\"./lib/FetchDocumentLoader\"), exports);\n__exportStar(require(\"./lib/IDocumentLoader\"), exports);\n__exportStar(require(\"./lib/JsonLdContext\"), exports);\n__exportStar(require(\"./lib/JsonLdContextNormalized\"), exports);\n__exportStar(require(\"./lib/Util\"), exports);\n//# sourceMappingURL=index.js.map","export const loaders = new WeakMap()\n\nexport const withLoader = (promise, loader) => {\n  loaders.set(promise, loader)\n  return promise\n}\n","const EMPTY = Object.create(null);\n\n/**\n * A PathProxy creates path expressions,\n * to which functionality can be attached.\n *\n * To users, these paths act as regular JavaScript objects\n * (such as `path.foo.bar.prop`) thanks to Proxy.\n * Behind the scenes, they carry around internal data\n * that can be used to influence their functionality.\n *\n * A path's functionality is realized by:\n * - handlers, which handle a specific named property\n * - resolvers, which can handle arbitrary properties\n * Only handlers and resolvers see the internal data.\n *\n * A path can have arbitrary internal data fields, but these are reserved:\n * - settings, an object that is passed on as-is to child paths\n * - proxy, a reference to the proxied object the user sees\n * - parent, a reference to the parent path\n * - apply, a function the will be invoked when the path is called as a function\n * - extendPath, a method to create a child path with this path as parent\n */\nexport default class PathProxy {\n  constructor({ handlers = EMPTY, resolvers = [] } = {}) {\n    this._handlers = handlers;\n    this._resolvers = resolvers;\n  }\n\n  /**\n   * Creates a path Proxy with the given settings and internal data fields.\n   */\n  createPath(settings = {}, data) {\n    // The settings parameter is optional\n    if (data === undefined)\n      [data, settings] = [settings, {}];\n\n    // Create the path's internal data object and the proxy that wraps it\n    const { apply, ...rawData } = data;\n    const path = apply ? Object.assign(callPathFunction, rawData) : rawData;\n    const proxy = new Proxy(path, this);\n    path.proxy = proxy;\n    path.settings = settings;\n    function callPathFunction(...args) {\n      return apply(args, path, proxy);\n    }\n\n    // Add an extendPath method to create child paths\n    if (!path.extendPath) {\n      const pathProxy = this;\n      path.extendPath = function extendPath(newData, parent = this) {\n        return pathProxy.createPath(settings, { parent, extendPath, ...newData });\n      };\n    }\n\n    // Return the proxied path\n    return proxy;\n  }\n\n  /**\n   * Handles access to a property\n   */\n  get(pathData, property) {\n    // Handlers provide functionality for a specific property,\n    // so check if we find a handler first\n    const handler = this._handlers[property];\n    if (handler && typeof handler.handle === 'function')\n      return handler.handle(pathData, pathData.proxy);\n\n    // Resolvers provide functionality for arbitrary properties,\n    // so find a resolver that can handle this property\n    for (const resolver of this._resolvers) {\n      if (resolver.supports(property))\n        return resolver.resolve(property, pathData, pathData.proxy);\n    }\n    // Otherwise, the property does not exist\n    return undefined;\n  }\n}\n","class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n","class DefaultGraph {\n  equals (other) {\n    return !!other && other.termType === this.termType\n  }\n}\n\nDefaultGraph.prototype.termType = 'DefaultGraph'\nDefaultGraph.prototype.value = ''\n\nmodule.exports = DefaultGraph\n","function fromTerm (original) {\n  if (!original) {\n    return null\n  }\n\n  if (original.termType === 'BlankNode') {\n    return this.blankNode(original.value)\n  }\n\n  if (original.termType === 'DefaultGraph') {\n    return this.defaultGraph()\n  }\n\n  if (original.termType === 'Literal') {\n    return this.literal(original.value, original.language || this.namedNode(original.datatype.value))\n  }\n\n  if (original.termType === 'NamedNode') {\n    return this.namedNode(original.value)\n  }\n\n  if (original.termType === 'Quad') {\n    const subject = this.fromTerm(original.subject)\n    const predicate = this.fromTerm(original.predicate)\n    const object = this.fromTerm(original.object)\n    const graph = this.fromTerm(original.graph)\n\n    return this.quad(subject, predicate, object, graph)\n  }\n\n  if (original.termType === 'Variable') {\n    return this.variable(original.value)\n  }\n\n  throw new Error(`unknown termType ${original.termType}`)\n}\n\nmodule.exports = fromTerm\n","class NamedNode {\n  constructor (iri) {\n    this.value = iri\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nNamedNode.prototype.termType = 'NamedNode'\n\nmodule.exports = NamedNode\n","const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n","const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n","class Variable {\n  constructor (name) {\n    this.value = name\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nVariable.prototype.termType = 'Variable'\n\nmodule.exports = Variable\n","const BlankNode = require('./BlankNode.js')\nconst DefaultGraph = require('./DefaultGraph.js')\nconst fromTermRaw = require('./fromTerm.js')\nconst Literal = require('./Literal.js')\nconst NamedNode = require('./NamedNode.js')\nconst Quad = require('./Quad.js')\nconst Variable = require('./Variable.js')\n\nfunction namedNode (value) {\n  return new NamedNode(value)\n}\n\nfunction blankNode (value) {\n  return new BlankNode(value)\n}\n\nfunction literal (value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype)\n    }\n\n    return new Literal(value, null, DataFactory.namedNode(languageOrDatatype))\n  }\n\n  return new Literal(value, null, languageOrDatatype)\n}\n\nfunction variable (value) {\n  return new Variable(value)\n}\n\nfunction defaultGraph () {\n  return DataFactory.defaultGraphInstance\n}\n\nfunction triple (subject, predicate, object) {\n  return DataFactory.quad(subject, predicate, object)\n}\n\nfunction quad (subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph || DataFactory.defaultGraphInstance)\n}\n\nfunction fromTerm (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nfunction fromQuad (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  literal,\n  variable,\n  defaultGraph,\n  triple,\n  quad,\n  fromTerm,\n  fromQuad,\n  defaultGraphInstance: new DefaultGraph()\n}\n\nmodule.exports = DataFactory\n","const DataFactory = require('./lib/DataFactory.js')\n\nmodule.exports = DataFactory\n","import { ContextParser } from 'jsonld-context-parser';\n\n/**\n * Used to share context between multiple resolvers\n */\nexport default class ContextProvider {\n  _context = Promise.resolve({});\n\n  /**\n   * Creates a new resolver for the given context(s).\n   */\n  constructor(...contexts) {\n    this.extendContext(...contexts);\n  }\n\n  /**\n   * Extends the current context with the given context(s).\n   */\n  async extendContext(...contexts) {\n    await (this._context = this._context.then(({ contextRaw }) =>\n      new ContextParser().parse([contextRaw, ...contexts])));\n  }\n}\n","export class Filter {\n  constructor(templateCallback) {\n    this.templateCallback = templateCallback;\n  }\n\n  toString(variable) {\n    return this.templateCallback(variable);\n  }\n}\n\nexport function lang(langcode) {\n  return new Filter(variable => `lang(${variable ?? ''}) = '${langcode}'`);\n}\n\nexport function langMatches(langcode) {\n  return new Filter(variable => `langMatches(lang(${variable ?? ''}), '${langcode}')`);\n}\n","const done = {};\n\n/**\n * Returns the elements of the iterable as an array\n */\nexport async function iterableToArray(iterable) {\n  const items = [];\n  for await (const item of iterable)\n    items.push(item);\n  return items;\n}\n\n/**\n * Gets the first element of the iterable.\n */\nexport function getFirstItem(iterable) {\n  const iterator = iterable[Symbol.asyncIterator]();\n  return iterator.next().then(item => item.value);\n}\n\n/**\n * Creates an async iterator with the item as only element.\n */\nexport function iteratorFor(item) {\n  return {\n    async next() {\n      if (item !== done) {\n        const value = await item;\n        item = done;\n        return { value };\n      }\n      return { done: true };\n    },\n  };\n}\n","import { getFirstItem } from './iterableUtils';\n\n/**\n * Returns a lazy thenable to the created promise.\n */\nexport function lazyThenable(createPromise) {\n  return { then: getThen(createPromise) };\n}\n\n/**\n * Lazily returns the `then` function of the created promise.\n */\nexport function getThen(createPromise) {\n  return (onResolved, onRejected) =>\n    createPromise().then(onResolved, onRejected);\n}\n\n/**\n * Returns an iterable that is also a promise to the first element.\n */\nexport function toIterablePromise(iterable) {\n  // If called with a generator function,\n  // memoize it to enable multiple iterations\n  if (typeof iterable === 'function')\n    iterable = memoizeIterable(iterable());\n\n  // Return an object that is iterable and a promise\n  return {\n    [Symbol.asyncIterator]() {\n      return iterable[Symbol.asyncIterator]();\n    },\n    get then() {\n      return getThen(() => getFirstItem(this));\n    },\n    catch(onRejected) {\n      return this.then(null, onRejected);\n    },\n    finally(callback) {\n      return this.then().finally(callback);\n    },\n  };\n}\n\n/**\n * Returns a memoized version of the iterable\n * that can be iterated over as many times as needed.\n */\nexport function memoizeIterable(iterable) {\n  const cache = [];\n  let iterator = iterable[Symbol.asyncIterator]();\n\n  return {\n    [Symbol.asyncIterator]() {\n      let i = 0;\n      return {\n        async next() {\n          // Return the item if it has been read already\n          if (i < cache.length)\n            return cache[i++];\n\n          // Stop if there are no more items\n          if (!iterator)\n            return { done: true };\n\n          // Read and cache an item from the iterable otherwise\n          const item = cache[i++] = iterator.next();\n          if ((await item).done)\n            iterator = null;\n          return item;\n        },\n      };\n    },\n  };\n}\n","import { namedNode, literal } from '@rdfjs/data-model';\n\nconst xsd = 'http://www.w3.org/2001/XMLSchema#';\n\nconst xsdBoolean = `${xsd}boolean`;\nconst xsdDateTime = `${xsd}dateTime`;\nconst xsdDecimal = `${xsd}decimal`;\nconst xsdDouble = `${xsd}double`;\nconst xsdFloat = `${xsd}float`;\nconst xsdInteger = `${xsd}integer`;\n\nconst xsdBooleanTerm = namedNode(xsdBoolean);\nconst xsdDateTimeTerm = namedNode(xsdDateTime);\nconst xsdDecimalTerm = namedNode(xsdDecimal);\nconst xsdDoubleTerm = namedNode(xsdDouble);\nconst xsdIntegerTerm = namedNode(xsdInteger);\n\nconst xsdTrue = literal('true', xsdBooleanTerm);\nconst xsdFalse = literal('false', xsdBooleanTerm);\nconst xsdNaN = literal('NaN', xsdDoubleTerm);\nconst xsdInf = literal('INF', xsdDoubleTerm);\nconst xsdMinusInf = literal('-INF', xsdDoubleTerm);\n\nconst xsdPrimitives = {\n  NaN,\n  'INF': Infinity,\n  '-INF': -Infinity,\n};\n\n// Checks whether the value is asynchronously iterable\nexport function isAsyncIterable(value) {\n  return value && typeof value[Symbol.asyncIterator] === 'function';\n}\n\n// Checks whether the value is an object without special meaning to LDflex\nexport function isPlainObject(value) {\n  return value !== null &&\n    // Ignore non-objects\n    typeof value === 'object' &&\n    // Ignore arrays\n    !Array.isArray(value) &&\n    // Ignore dates\n    !(value instanceof Date) &&\n    // Ignore Promise instances\n    typeof value.then !== 'function' &&\n    // Ignore RDF/JS Term instances\n    typeof value.termType !== 'string' &&\n    // Ignore LDflex paths\n    !isAsyncIterable(value);\n}\n\n// Checks whether the arguments consist of exactly one plain object\nexport function hasPlainObjectArgs(args, allowMultiple = false) {\n  const hasPlainObject = args.some(isPlainObject);\n  if (hasPlainObject && !allowMultiple && args.length !== 1)\n    throw new Error(`Expected only 1 plain object, but got ${args.length} arguments`);\n  return hasPlainObject;\n}\n\n// Ensures that the value is an array\nexport function ensureArray(value) {\n  if (Array.isArray(value))\n    return value;\n  return value ? [value] : [];\n}\n\n// Joins the arrays into a single array\nexport function joinArrays(arrays) {\n  return [].concat(...arrays);\n}\n\n// Ensures the value is an RDF/JS term\nexport function valueToTerm(value) {\n  switch (typeof value) {\n  // strings\n  case 'string':\n    return literal(value);\n\n  // booleans\n  case 'boolean':\n    return value ? xsdTrue : xsdFalse;\n\n  // numbers\n  case 'number':\n    if (Number.isInteger(value))\n      return literal(value.toString(), xsdIntegerTerm);\n    else if (Number.isFinite(value))\n      return literal(value.toString(), xsdDecimalTerm);\n    else if (value === Infinity)\n      return xsdInf;\n    else if (value === -Infinity)\n      return xsdMinusInf;\n    return xsdNaN;\n\n  // other objects\n  default:\n    if (value) {\n      // RDF/JS Term\n      if (typeof value.termType === 'string')\n        return value;\n      // Date\n      if (value instanceof Date)\n        return literal(value.toISOString(), xsdDateTimeTerm);\n    }\n  }\n\n  // invalid objects\n  throw new Error(`Invalid object: ${value}`);\n}\n\n// Converts the term into a primitive value\nexport function termToPrimitive(term) {\n  const { termType, value } = term;\n\n  // Some literals convert into specific primitive values\n  if (termType === 'Literal') {\n    const datatype = term.datatype.value;\n    if (datatype.startsWith(xsd)) {\n      switch (datatype) {\n      case xsdBoolean:\n        return value === 'true' || value === '1';\n      case xsdInteger:\n        return Number.parseInt(value, 10);\n      case xsdDecimal:\n        return Number.parseFloat(value);\n      case xsdDouble:\n      case xsdFloat:\n        if (value in xsdPrimitives)\n          return xsdPrimitives[value];\n        return Number.parseFloat(value);\n      case xsdDateTime:\n        return new Date(Date.parse(value));\n      default:\n      }\n    }\n  }\n\n  // All other nodes convert to their value\n  return value;\n}\n","import ContextProvider from './ContextProvider';\nimport { Filter } from './filters';\nimport { lazyThenable } from './promiseUtils';\nimport { valueToTerm } from './valueUtils';\n\n/**\n * Resolves property names of a path\n * to their corresponding IRIs through a JSON-LD context.\n * @abstract\n */\nexport default class AbstractPathResolver {\n  _contextProvider = new ContextProvider();\n\n  get _context() {\n    return this._contextProvider._context;\n  }\n\n  async extendContext(...contexts) {\n    await this._contextProvider.extendContext(...contexts);\n  }\n\n  /**\n   * Creates a new resolver for the given context(s).\n   * @param arg Either a context provider *or* a context\n   */\n  constructor(arg, ...contexts) {\n    if (arg instanceof ContextProvider) {\n      this._contextProvider = arg;\n      this.extendContext(...contexts);\n    }\n    else {\n      this.extendContext(arg, ...contexts);\n    }\n  }\n\n  /**\n   * The JSON-LD resolver supports all string properties.\n   */\n  supports(property) {\n    return typeof property === 'string';\n  }\n\n  /**\n   * When resolving a JSON-LD or complex path property,\n   * we create a new chainable path segment corresponding to the predicate.\n   *\n   * Example usage: person.friends.firstName\n   */\n  resolve(property, pathData) {\n    const predicate = lazyThenable(() => this.expandProperty(property));\n    const reverse = lazyThenable(() => this._context.then(({ contextRaw }) =>\n      contextRaw[property] && contextRaw[property]['@reverse']));\n    const resultsCache = this.getResultsCache(pathData, predicate, reverse);\n    const newData = { property, predicate, resultsCache, reverse, apply: this.apply };\n    return pathData.extendPath(newData);\n  }\n\n  /**\n   * When the property is called as a function,\n   * it adds property-object constraints to the path.\n   *\n   * Example usage: person.friends.location(place).firstName\n   */\n  apply(args, pathData, path) {\n    if (args.length === 0) {\n      const { property } = pathData;\n      throw new Error(`Specify at least one term when calling .${property}() on a path`);\n    }\n\n    // With the property constraint added, continue from the previous path\n    pathData.filters = args.filter(object => object instanceof Filter);\n    pathData.values = args.filter(object => !pathData.filters.includes(object)).map(valueToTerm);\n    return path;\n  }\n\n  async expandProperty(property) {\n    // JavaScript requires keys containing colons to be quoted,\n    // so prefixed names would need to written as path['foaf:knows'].\n    // We thus allow writing path.foaf_knows or path.foaf$knows instead.\n    return this.lookupProperty(property.replace(/^([a-z][a-z0-9]*)[_$]/i, '$1:'));\n  }\n\n  /**\n   * Gets the results cache for the given predicate.\n   */\n  getResultsCache(pathData, predicate, reverse) {\n    let { propertyCache } = pathData;\n\n    return propertyCache && lazyThenable(async () => {\n      // Preloading does not work with reversed predicates\n      propertyCache = !(await reverse) && await propertyCache;\n      const predicateString = (await predicate).value;\n      const key = `${predicateString}|${pathData.filters?.map(filter => filter.toString(''))}`;\n\n      return propertyCache && propertyCache[predicateString] || propertyCache && pathData.filters?.length && propertyCache[key];\n    });\n  }\n}\n","import { Util as ContextUtil } from 'jsonld-context-parser';\nimport { namedNode } from '@rdfjs/data-model';\nimport AbstractPathResolver from './AbstractPathResolver';\n\n/**\n * Resolves property names of a path\n * to their corresponding IRIs through a JSON-LD context.\n */\nexport default class JSONLDResolver extends AbstractPathResolver {\n  /**\n   * Expands a JSON property key into a full IRI.\n   */\n  async lookupProperty(property) {\n    const context = await this._context;\n    const expandedProperty = context.expandTerm(property, true);\n    if (!ContextUtil.isValidIri(expandedProperty))\n      throw new Error(`The JSON-LD context cannot expand the '${property}' property`);\n    return namedNode(expandedProperty);\n  }\n}\n","import AbstractPathResolver from 'ldflex/src/AbstractPathResolver';\n\n/**\n * This is a mutilated version of the LDflex ComplexPathResolver.\n * Because of this our LDflex paths may not support certain features.\n */\nexport default class ComplexPathResolver extends AbstractPathResolver {\n  supports(property) {\n    return super.supports(property) && /((^|[/|])[\\^])|(([a-z:>)])[*+?])|([)>*+?]|[a-z]*[:][a-z]*)[|/]([<(^]|[a-z]*[:][a-z]*)|(((^[(<])|([)>]$)))/i.test(property);\n  }\n\n  async lookupProperty(property) {\n    if (\n      property.startsWith('<') && property.endsWith('>') && property.split('<').length === 2) {\n        return { termType: 'namedNode', value: property.substring(1).substring(0, property.length - 2) };\n      }\n\n    try {\n      return {\n        termType: 'path',\n        value: property\n      };\n    } catch (e) {\n      throw new Error(`The Complex Path Resolver cannot expand the '${property}' path`);\n    }\n  }\n\n}","import { iteratorFor } from './iterableUtils';\n\n/**\n * AsyncIterator handler that yields either the subject or all results.\n *\n * Requires:\n *  - (optional) a subject on the path data\n *  - (optional) a subject on the path proxy\n *  - (optional) results on the path proxy\n */\nexport default class AsyncIteratorHandler {\n  handle({ subject }, pathProxy) {\n    // Return a one-item iterator of the subject if present;\n    // otherwise, return all results of this path\n    return subject ?\n      () => iteratorFor(pathProxy.subject) :\n      () => pathProxy.results[Symbol.asyncIterator]();\n  }\n}\n","// Creates a handler from the given function\nexport function handler(handle) {\n  return { handle };\n}\n","import { handler } from './handlerUtil';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n\n/**\n * @returns An handler that returns an RDF list as an array\n */\nexport function listHandler() {\n  return handler((_, path) => async () => {\n    let _path = await path;\n    const list = [];\n    while (_path && _path.value !== `${RDF}nil`) {\n      list.push(_path[`${RDF}first`]);\n      _path = await _path[`${RDF}rest`];\n    }\n    return (await Promise.all(list)).filter(value => value !== undefined);\n  });\n}\n\n/**\n * @param {Boolean} set Emits set if True, array otherwise\n * @returns An handler that returns an RDF collection as an array or set\n */\nexport function containerHandler(set) {\n  return handler((_, path) => async () => {\n    let container = [];\n    let elem;\n    let count = 0;\n    // eslint-disable-next-line no-cond-assign\n    while (elem = await path[`${RDF}_${++count}`])\n      container.push(elem);\n\n    container = await Promise.all(container);\n    return set ? new Set(container) : container;\n  });\n}\n\n/**\n * @returns An handler that returns an RDF collection according to its RDF:type\n */\nexport function collectionHandler() {\n  return handler((pathData, path) => async () => {\n    // TODO: Handle cases where multiple classes may be present (e.g. if inferencing is on)\n    switch ((await path[`${RDF}type`])?.value) {\n    case `${RDF}List`:\n      return listHandler().handle(pathData, path)();\n    case `${RDF}Bag`:\n      return containerHandler(true).handle(pathData, path)();\n    case `${RDF}Alt`:\n    case `${RDF}Seq`:\n    case `${RDF}Container`:\n      return containerHandler(false).handle(pathData, path)();\n    default:\n      // In this case none of the appropriate containers apply\n      return path;\n    }\n  });\n}\n","/**\n * Resolves to the given item in the path data.\n * For example, new DataHandler({}, 'foo', 'bar')\n * will return pathData.foo.bar.\n *\n * Resolution can optionally be async,\n * and/or be behind a function call.\n */\nexport default class DataHandler {\n  constructor(options, ...dataProperties) {\n    this._isAsync = options.async;\n    this._isFunction = options.function;\n    this._dataProperties = dataProperties;\n  }\n\n  static sync(...dataProperties) {\n    return new DataHandler({ async: false }, ...dataProperties);\n  }\n\n  static syncFunction(...dataProperties) {\n    return new DataHandler({ async: false, function: true }, ...dataProperties);\n  }\n\n  static async(...dataProperties) {\n    return new DataHandler({ async: true }, ...dataProperties);\n  }\n\n  static asyncFunction(...dataProperties) {\n    return new DataHandler({ async: true, function: true }, ...dataProperties);\n  }\n\n\n  // Resolves the data path, or returns a function that does so\n  handle(pathData) {\n    return !this._isFunction ?\n      this._resolveDataPath(pathData) :\n      () => this._resolveDataPath(pathData);\n  }\n\n  // Resolves the data path\n  _resolveDataPath(data) {\n    return !this._isAsync ?\n      this._resolveSyncDataPath(data) :\n      this._resolveAsyncDataPath(data);\n  }\n\n  // Resolves synchronous property access\n  _resolveSyncDataPath(data) {\n    for (const property of this._dataProperties)\n      data = data && data[property];\n    return data;\n  }\n\n  // Resolves asynchronous property access\n  async _resolveAsyncDataPath(data) {\n    for (const property of this._dataProperties)\n      data = data && await data[property];\n    return data;\n  }\n}\n","import { lazyThenable } from './promiseUtils';\nimport { iterableToArray } from './iterableUtils';\nimport {\n  ensureArray, joinArrays,\n  valueToTerm, hasPlainObjectArgs, isAsyncIterable,\n} from './valueUtils';\n\n/**\n * Returns a function that, when called with arguments,\n * extends the path with mutationExpressions.\n *\n * Mutation functions can be called in two equivalent ways:\n * - path.property.set(object, object)\n * - path.set({ property: [object, object] })\n * Objects can be strings, terms, or path expressions.\n * The second syntax allows setting multiple properties at once.\n * It also has `null` and `undefined` as shortcuts for the empty array,\n * and a direct value as shortcut for a single-valued array.\n *\n * Requires:\n * - a pathExpression property on the path proxy and all non-raw arguments.\n */\nexport default class MutationFunctionHandler {\n  constructor(mutationType, allowZeroArgs) {\n    this._mutationType = mutationType;\n    this._allowZeroArgs = allowZeroArgs;\n  }\n\n  // Creates a function that performs a mutation\n  handle(pathData, path) {\n    return (...args) => {\n      // Check if the given arguments are valid\n      if (!this._allowZeroArgs && !args.length)\n        throw new Error('Mutation cannot be invoked without arguments');\n\n      // Create a lazy Promise to the mutation expressions\n      const mutationExpressions = lazyThenable(() =>\n        this.createMutationExpressions(pathData, path, args));\n      return pathData.extendPath({ mutationExpressions });\n    };\n  }\n\n  // Creates expressions that represent the requested mutation\n  async createMutationExpressions(pathData, path, args) {\n    // The mutation targets a single property on the path by passing objects\n    if (!hasPlainObjectArgs(args))\n      return [await this.createMutationExpression(pathData, path, args)];\n\n    // The mutation targets multiple properties through a map of property-objects pairs\n    const pairs = Object.entries(args[0]);\n    const expressions = await Promise.all(pairs.map(([property, values]) =>\n      this.createMutationExpression(pathData, path[property], ensureArray(values))));\n    // Group expressions together to maintain the same structure as the singular case\n    // (All properties have the same parent path, and hence the same condition)\n    return [expressions.length === 0 ? {} : {\n      ...expressions[0],\n      predicateObjects: joinArrays(expressions.map(e => e.predicateObjects)),\n    }];\n  }\n\n  // Creates an expression that represents a mutation with the given objects\n  async createMutationExpression(pathData, path, values) {\n    // Obtain the path segments, which are the selection conditions for the mutation\n    const conditions = await path.pathExpression;\n    if (!Array.isArray(conditions))\n      throw new Error(`${pathData} has no pathExpression property`);\n    if (conditions.length < 2)\n      throw new Error(`${pathData} should at least contain a subject and a predicate`);\n\n    // Obtain the predicate and target objects\n    const { predicate, reverse } = conditions[conditions.length - 1];\n    if (!predicate)\n      throw new Error(`Expected predicate in ${pathData}`);\n    const objects = await this.extractObjects(pathData, path, values);\n\n    // Create a mutation, unless no objects are affected (`null` means all)\n    return objects !== null && objects.length === 0 ? {} : {\n      mutationType: this._mutationType,\n      conditions: conditions.slice(0, -1),\n      predicateObjects: [{ predicate, reverse, objects }],\n    };\n  }\n\n  // Extracts individual objects from a set of values passed to a mutation function\n  async extractObjects(pathData, path, values) {\n    // If no specific values are specified, match all (represented by `null`)\n    if (values.length === 0)\n      return null;\n\n    // Otherwise, expand singular values, promises, and paths\n    const objects = [];\n    for (const value of values) {\n      if (!isAsyncIterable(value))\n      // Add a (promise to) a single value\n        objects.push(await value);\n      // Add multiple values from a path\n      else\n        objects.push(...(await iterableToArray(value)));\n    }\n    return objects.map(valueToTerm);\n  }\n}\n","/**\n * Executes the query represented by a path.\n *\n * Requires:\n * - a queryEngine property in the path settings\n * - a sparql property on the path proxy\n * - (optional) a resultsCache property on the path data\n */\nexport default class ExecuteQueryHandler {\n  async *handle(pathData, path) {\n    // Try to retrieve the result from cache\n    const resultsCache = await pathData.resultsCache;\n    if (resultsCache) {\n      for (const result of resultsCache)\n        yield result;\n      return;\n    }\n\n    // Retrieve the query engine and query\n    const { queryEngine } = pathData.settings;\n    if (!queryEngine)\n      throw new Error(`${pathData} has no queryEngine setting`);\n    const query = await path.sparql;\n    if (query === null || query === undefined)\n      throw new Error(`${pathData} has no sparql property`);\n    // No results if the query is empty\n    if (query.length === 0)\n      return;\n\n    // Extract the term from every query result\n    for await (const bindings of queryEngine.execute(query))\n      yield this.extractTerm(bindings, pathData);\n  }\n\n  /**\n   * Extracts the first term from a query result binding as a new path.\n   */\n  extractTerm(binding, pathData) {\n    // Extract the first term from the binding map\n    if (binding.size !== 1)\n      throw new Error('Only single-variable queries are supported');\n    const subject = binding.values().next().value;\n\n    // Each result is a new path that starts from the term as subject\n    return pathData.extendPath({ subject }, null);\n  }\n}\n","import { isPlainObject, isAsyncIterable } from './valueUtils';\nimport { iterableToArray } from './iterableUtils';\n\n/**\n * Returns a function that requests the values of multiple properties.\n * You can use this function to access properties as follows:\n * - fn() returns []\n * - fn(p1) returns [path[p1]]\n * - fn(p1, p2) returns [path[p1], path[p2]]\n * - fn([p1, p2]) returns [path[p1], path[p2]]\n * - fn(asyncIterable) returns [path[p1], path[p2]]\n * - fn({ p1: null, p2: null }) returns { p1: path[p1], p2: path[p2] }\n * Combinations of the above are possible by passing them in arrays.\n */\nexport default class GetFunctionHandler {\n  handle(pathData, path) {\n    return (...args) => this.readProperties(path,\n      args.length === 1 ? args[0] : args, true);\n  }\n\n  async readProperties(path, properties, wrapSingleValues = false) {\n    // Convert an async iterable to an array\n    if (isAsyncIterable(properties))\n      properties = await iterableToArray(properties);\n\n    // If passed an array, read every property\n    if (Array.isArray(properties)) {\n      const values = properties.map(p => this.readProperties(path, p));\n      return Promise.all(values);\n    }\n\n    // If passed an object with property names as keys,\n    // return an object with the values filled in\n    if (isPlainObject(properties)) {\n      // Use the key as property value if none is specified\n      const keys = Object.keys(properties);\n      properties = keys.map(key => properties[key] || key);\n      // Store the resolved properties by key\n      const results = {};\n      const values = await this.readProperties(path, properties);\n      for (let i = 0; i < keys.length; i++)\n        results[keys[i]] = values[i];\n      return results;\n    }\n\n    // Otherwise, perform a single property access\n    const value = path[properties];\n    return wrapSingleValues ? [value] : value;\n  }\n}\n","/**\n * Traverses a path to collect mutationExpressions into an expression.\n * This is needed because mutations can be chained.\n *\n * Requires:\n * - a mutationExpressions property on the path proxy\n */\nexport default class MutationExpressionsHandler {\n  async handle(pathData) {\n    const mutationExpressions = [];\n\n    // Add all mutationExpressions to the path\n    let current = pathData;\n    while (current) {\n      // Obtain and store mutationExpressions\n      if (current.mutationExpressions)\n        mutationExpressions.unshift(...await current.mutationExpressions);\n      // Move to parent link\n      current = current.parent;\n    }\n\n    return mutationExpressions;\n  }\n}\n","/**\n * Traverses a path to collect links and nodes into an expression.\n */\nexport default class PathExpressionHandler {\n  async handle(pathData) {\n    const segments = [];\n    let current = pathData;\n\n    // Add all predicates to the path\n    while (current.parent) {\n      // Obtain and store predicate\n      if (current.predicate) {\n        segments.unshift({\n          predicate: await current.predicate,\n          reverse: await current.reverse,\n          sort: current.sort,\n          filters: current.filters,\n          values: current.values,\n        });\n      }\n      // Move to parent link\n      current = current.parent;\n    }\n\n    // Add the root subject to the path\n    if (!current.subject)\n      throw new Error(`Expected root subject in ${current}`);\n    const subject = await current.subject;\n    segments.unshift({ subject });\n\n    return segments;\n  }\n}\n","/**\n * Returns a new path starting from the predicate of the current path.\n *\n * Requires:\n * - (optional) a predicate property on the path data\n */\nexport default class PredicateHandler {\n  handle(pathData) {\n    const { predicate } = pathData;\n    return !predicate ? undefined : Promise.resolve(predicate)\n      .then(subject => pathData.extendPath({ subject }, null));\n  }\n}\n","/**\n * Queries for all predicates of a path subject\n */\nexport default class PredicatesHandler {\n  handle(pathData) {\n    return pathData.extendPath({\n      distinct: true,\n      select: '?predicate',\n      finalClause: queryVar => `${queryVar} ?predicate ?object.`,\n      property: pathData.property,\n    });\n  }\n}\n","const VARIABLE = /(SELECT\\s+)(\\?\\S+)/;\nconst QUERY_TAIL = /\\}[^}]*$/;\n\n/**\n * Returns a function that preloads and caches\n * certain properties of results on the current path.\n *\n * Requires:\n * - a predicate handler on the path proxy\n * - a queryEngine property in the path settings\n *\n * Creates:\n * - a resultsCache property on the path data\n */\nexport default class PreloadHandler {\n  /**\n   * Creates a preload function.\n   */\n  handle(pathData, pathProxy) {\n    return async (...properties) => {\n      if (properties.length > 0) {\n        // Map the properties to predicates\n        const predicates = await Promise.all(properties.map(async p =>\n          (await pathProxy[p].predicate).value));\n\n        // Create and attach the results cache to the path data\n        pathData.resultsCache =\n          await this.createResultsCache(predicates, pathData, pathProxy);\n      }\n      return pathProxy;\n    };\n  }\n\n  /**\n   * Creates a cache for the results of\n   * resolving the given predicates against the path.\n   */\n  async createResultsCache(predicates, pathData, path) {\n    // Execute the preloading query\n    const { query, vars, resultVar } = await this.createQuery(predicates, path);\n    const { settings: { queryEngine } } = pathData;\n    const bindings = queryEngine.execute(query);\n\n    // Extract all results and their preloaded property values\n    const resultsCache = {};\n    const propertyCaches = {};\n    for await (const binding of bindings) {\n      // Initialize the result's cache if needed\n      const result = binding.get(resultVar) ?? binding.get(resultVar.substring(1)), hash = hashTerm(result);\n      if (!(hash in resultsCache)) {\n        // Create the property cache\n        const propertyCache = propertyCaches[hash] = {};\n        for (const predicate of predicates)\n          propertyCache[predicate] = [];\n        // Create the result path\n        const resultData = { subject: result, propertyCache };\n        resultsCache[hash] = pathData.extendPath(resultData, null);\n      }\n\n      // Create and cache a possible property value path from the binding\n      const propertyCache = propertyCaches[hash];\n      for (let i = 0; i < vars.length; i++) {\n        const value = binding.get(vars[i]) ?? binding.get(vars[i].substring(1));\n        if (value) {\n          const valuePath = pathData.extendPath({ subject: value }, null);\n          propertyCache[predicates[i]].push(valuePath);\n        }\n      }\n    }\n    return Object.values(resultsCache);\n  }\n\n  /**\n   * Creates the query for preloading the given predicates on the path\n   */\n  async createQuery(predicates, path) {\n    // Obtain the query for the current path, and its main variable\n    const parentQuery = await path.sparql;\n    const variableMatch = VARIABLE.exec(parentQuery);\n    if (!variableMatch)\n      throw new Error(`Unexpected path query: ${parentQuery}`);\n    const resultVar = variableMatch[2];\n\n    // Modify the query to include the preload clauses\n    // TODO: instead of query manipulation, adjust the query generator\n    // TODO: support reverse predicates\n    const vars = predicates.map((p, i) => `?preload_${i}`);\n    const preloadClauses = predicates.map((predicate, i) =>\n      `    { ${resultVar} <${predicate}> ${vars[i]}. }`)\n      .join('\\n    UNION\\n');\n    const query = parentQuery\n      .replace(VARIABLE, `$1$2 ${vars.join(' ')}`)\n      .replace(QUERY_TAIL, `  OPTIONAL {\\n${preloadClauses}\\n  }\\n$&`);\n    return { query, vars, resultVar };\n  }\n}\n\n// Returns a unique string representation of the term\nexport function hashTerm(term) {\n  const { termType, value } = term;\n  switch (termType) {\n  case 'NamedNode':\n    return value;\n  case 'Literal':\n    const { language, datatype } = term;\n    return `${termType}|${language}|${datatype.value}|${value}`;\n  default:\n    return `${termType}|${value}`;\n  }\n}\n","/**\n * Queries for all compacted predicates of a path subject\n */\nimport { JsonLdContextNormalized } from 'jsonld-context-parser';\nimport { toIterablePromise } from './promiseUtils';\n\nexport default class PropertiesHandler {\n  handle(pathData, path) {\n    return toIterablePromise(this._handle(pathData, path));\n  }\n\n  async* _handle(pathData, path) {\n    const contextRaw = (await pathData.settings.parsedContext) || {};\n    const context = new JsonLdContextNormalized(contextRaw);\n    for await (const predicate of path.predicates)\n      yield context.compactIri(`${await predicate}`, true);\n  }\n}\n","/**\n * Returns a function that creates a new path with the same values,\n * but sorted on the given property.\n * The function accepts multiple properties to sort on a deeper path.\n *\n * Requires:\n *  - a predicate on the path proxy\n *  - a sort function on the path proxy (for multi-property sorting)\n */\nexport default class SortHandler {\n  constructor(order = 'ASC') {\n    this.order = order;\n  }\n\n  handle(pathData, pathProxy) {\n    return (...properties) => {\n      // Do nothing if no sort properties were given\n      if (properties.length === 0)\n        return pathProxy;\n\n      // Split off the first sort property and obtain its predicate\n      const [property, ...rest] = properties;\n      const { predicate } = pathProxy[property];\n\n      // Sort on the first property, and create paths for the next one\n      const childData = { property, predicate, sort: this.order };\n      const childPath = pathData.extendPath(childData);\n      return rest.length === 0 ? childPath : childPath.sort(...rest);\n    };\n  }\n}\n","import { namedNode } from '@rdfjs/data-model';\n\nconst NEEDS_ESCAPE = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n      ESCAPE_ALL = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n      ESCAPED_CHARS = {\n        '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n        '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n      };\n\n/**\n * Expresses a path or mutation as a SPARQL query.\n *\n * Requires:\n * - a mutationExpressions or pathExpression property on the path proxy\n */\nexport default class SparqlHandler {\n  async handle(pathData, path) {\n    // First check if we have a mutation expression\n    const mutationExpressions = await path.mutationExpressions;\n    if (Array.isArray(mutationExpressions) && mutationExpressions.length)\n      // Remove empty results to prevent dangling semicolons\n      return mutationExpressions.map(e => this.mutationExpressionToQuery(e)).filter(Boolean).join('\\n;\\n');\n\n    // Otherwise, fall back to checking for a path expression\n    const pathExpression = await path.pathExpression;\n    if (!Array.isArray(pathExpression))\n      throw new Error(`${pathData} has no pathExpression property`);\n    return this.pathExpressionToQuery(pathData, path, pathExpression);\n  }\n\n  pathExpressionToQuery(pathData, path, pathExpression) {\n    if (pathExpression.length < 2 && !pathData.finalClause)\n      throw new Error(`${pathData} should at least contain a subject and a predicate`);\n\n    // Create triple patterns\n    let queryVar = '?subject', sorts = [], clauses = [], filters = [];\n    if (pathExpression.length > 1) {\n      queryVar = this.createVar(pathData.property);\n      ({ queryVar, sorts, clauses, filters } = this.expressionToTriplePatterns(pathExpression, queryVar));\n    }\n    if (pathData.finalClause)\n      clauses.push(pathData.finalClause(queryVar));\n\n    // Create SPARQL query body\n    const distinct = pathData.distinct ? 'DISTINCT ' : '';\n    const select = `SELECT ${distinct}${pathData.select ? pathData.select : queryVar}`;\n    const filter = filters.length ? `FILTER(${filters.join(' || ')})` : '';\n    const where = ` WHERE {\\n  ${clauses.join('\\n  ')}\\n${filter ? `  ${filter}\\n` : ''}}`;\n    const orderClauses = sorts.map(({ order, variable }) => `${order}(${variable})`);\n    const orderBy = orderClauses.length === 0 ? '' : `\\nORDER BY ${orderClauses.join(' ')}`;\n    return `${select}${where}${orderBy}`;\n  }\n\n  mutationExpressionToQuery({ mutationType, conditions, predicateObjects }) {\n    // If there are no mutations, there is no query\n    if (!mutationType || !conditions || predicateObjects && predicateObjects.length === 0)\n      return '';\n\n    // Create the WHERE clauses\n    const scope = {};\n    let subject, where;\n    // If the only condition is a subject, we need no WHERE clause\n    if (conditions.length === 1) {\n      subject = this.termToString(conditions[0].subject);\n      where = [];\n    }\n    // Otherwise, create a WHERE clause from all conditions\n    else {\n      const lastPredicate = conditions[conditions.length - 1].predicate;\n      subject = this.createVar(lastPredicate.value, scope);\n      ({ queryVar: subject, clauses: where } =\n        this.expressionToTriplePatterns(conditions, subject, scope));\n    }\n\n    // Create the mutation clauses\n    const mutations = [];\n    for (const { predicate, reverse, objects } of predicateObjects) {\n      // Mutate either only the specified objects, or all of them\n      const objectStrings = objects ?\n        objects.map(o => this.termToString(o)) :\n        [this.createVar(predicate.value, scope)];\n      // Generate a triple pattern for all subjects\n      mutations.push(...this.triplePatterns(subject, predicate, objectStrings, reverse));\n    }\n    const mutationClauses = `{\\n  ${mutations.join('\\n  ')}\\n}`;\n\n    // Join clauses into a SPARQL query\n    return where.length === 0 ?\n      // If there are no WHERE clauses, just mutate raw data\n      `${mutationType} DATA ${mutationClauses}` :\n      // Otherwise, return a DELETE/INSERT ... WHERE ... query\n      `${mutationType} ${mutationClauses} WHERE {\\n  ${where.join('\\n  ')}\\n}`;\n  }\n\n  expressionToTriplePatterns([root, ...pathExpression], lastVar, scope = {}) {\n    const lastIndex = pathExpression.length - 1;\n    const clauses = [];\n    const sorts = [];\n    const allFilters = [];\n    let object = this.termToString(skolemize(root.subject));\n    let queryVar = object;\n    let allowValues = false;\n    pathExpression.forEach((segment, index) => {\n      // Obtain components and generate triple pattern\n      const subject = object;\n      const { predicate, reverse, sort, values, filters } = segment;\n\n      // Use fixed object values values if they were specified\n      let objects;\n      if (values && values.length > 0) {\n        if (!allowValues)\n          throw new Error('Specifying fixed values is not allowed here');\n        objects = values.map(this.termToString);\n        allowValues = false; // disallow subsequent fixed values for this predicate\n      }\n      // Otherwise, use a variable subject\n      else {\n        object = index < lastIndex ? this.createVar(`v${index}`, scope) : lastVar;\n        objects = [object];\n        if (filters) {\n          for (const filter of filters)\n            allFilters.push(filter.toString(object));\n        }\n\n        allowValues = true;\n      }\n      clauses.push(...this.triplePatterns(subject, predicate, objects, reverse));\n\n      // If the sort option was not set, use this object as a query variable\n      if (!sort) {\n        queryVar = object;\n      }\n      // If sort was set, use this object as a sorting variable\n      else {\n        // TODO: handle when an object is used for sorting, and later also for querying\n        sorts.push({ variable: object, order: sort });\n        // TODO: use a descriptive lastVar in case of sorting\n        object = queryVar;\n      }\n    });\n    return { queryVar, sorts, clauses, filters: allFilters };\n  }\n\n  // Creates a unique query variable within the given scope, based on the suggestion\n  createVar(suggestion = '', scope) {\n    let counter = 0;\n    let label = `?${suggestion.match(/[a-z0-9]*$/i)[0] || 'result'}`;\n    if (scope) {\n      suggestion = label;\n      while (scope[label])\n        label = `${suggestion}_${counter++}`;\n      scope[label] = true;\n    }\n    return label;\n  }\n\n  // Converts an RDFJS term to a string that we can use in a query\n  termToString(term) {\n    // Determine escaped value\n    let { value } = term;\n    if (NEEDS_ESCAPE.test(value))\n      value = value.replace(ESCAPE_ALL, escapeCharacter);\n\n    switch (term.termType) {\n    case 'NamedNode':\n      return `<${value}>`;\n\n    case 'BlankNode':\n      return `_:${value}`;\n\n    case 'Literal':\n      // Determine optional language or datatype\n      let suffix = '';\n      if (term.language)\n        suffix = `@${term.language}`;\n      else if (term.datatype.value !== 'http://www.w3.org/2001/XMLSchema#string')\n        suffix = `^^<${term.datatype.value}>`;\n      return `\"${value}\"${suffix}`;\n\n    default:\n      throw new Error(`Could not convert a term of type ${term.termType}`);\n    }\n  }\n\n  // Creates triple patterns for the given subject, predicate, and objects\n  triplePatterns(subjectString, predicateTerm, objectStrings, reverse = false) {\n    let subjectStrings = [subjectString];\n    if (reverse)\n      [subjectStrings, objectStrings] = [objectStrings, subjectStrings];\n    const objects = objectStrings.join(', ');\n    const predicate = predicateTerm.termType === 'path' ? predicateTerm.value : `<${predicateTerm.value}>`;\n    return subjectStrings.map(s => `${s} ${predicate} ${objects}.`);\n  }\n}\n\n// Replaces a character by its escaped version\n// (borrowed from https://www.npmjs.com/package/n3)\nfunction escapeCharacter(character) {\n  // Replace a single character by its escaped version\n  let result = ESCAPED_CHARS[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\n// Skolemizes the given term if it is a blank node\nlet skolemId = 0;\nfunction skolemize(term) {\n  if (term.termType !== 'BlankNode')\n    return term;\n  if (!term.skolemized)\n    term.skolemized = namedNode(`urn:ldflex:sk${skolemId++}`);\n  return term.skolemized;\n}\n","/**\n * Yields a function that interprets a string expression as an LDflex path.\n */\nexport default class StringToLDflexHandler {\n  handle(pathData, path) {\n    // Resolves the given string expression against the LDflex object\n    return (expression = '', ldflex = path) => {\n      // An expression starts with a property access in dot or bracket notation\n      const propertyPath = expression\n        // Add brackets around a single URL\n        .replace(/^(https?:\\/\\/[^()[\\]'\"]+)$/, '[\"$1\"]')\n        // Add the starting dot if omitted\n        .replace(/^(?=[a-z$_])/i, '.')\n        // Add quotes inside of brackets if omitted\n        .replace(/\\[([^'\"`\\](]*)\\]/g, '[\"$1\"]');\n\n      // Create a function to evaluate the expression\n      const body = `\"use strict\";return ldflex${propertyPath}`;\n      let evaluator;\n      try {\n        /* eslint no-new-func: off */\n        evaluator = Function('ldflex', body);\n      }\n      catch ({ message }) {\n        throw new Error(`Expression \"${expression}\" is invalid: ${message}`);\n      }\n\n      // Evaluate the function\n      return evaluator(ldflex);\n    };\n  }\n}\n","/**\n * Returns a new path starting from the subject of the current path.\n *\n * Requires:\n * - (optional) a subject property on the path data\n * - (optional) a parent property on the path data\n */\nexport default class SubjectHandler {\n  handle(pathData) {\n    // Traverse parents until we find a subject\n    let { subject, parent } = pathData;\n    while (!subject && parent)\n      ({ subject, parent } = parent);\n\n    // Resolve the subject if it exists,\n    // and return a path starting from that subject\n    return !subject ? undefined : Promise.resolve(subject)\n      .then(value => pathData.extendPath({ subject: value }, null));\n  }\n}\n","/**\n * Queries for all subjects of a document\n */\nexport default class SubjectsHandler {\n  handle(pathData) {\n    return pathData.extendPath({\n      distinct: true,\n      select: '?subject',\n      finalClause: () => '?subject ?predicate ?object.',\n      property: pathData.property,\n    });\n  }\n}\n","import { getThen } from './promiseUtils';\nimport { getFirstItem } from './iterableUtils';\n\n/**\n * Thenable handler that resolves to either the subject\n * of the first item of the results.\n *\n * Requires:\n *  - (optional) a subject on the path data\n *  - (optional) a subject on the path proxy\n *  - (optional) results on the path proxy\n */\nexport default class ThenHandler {\n  handle({ subject }, pathProxy) {\n    // Resolve to either the subject (zero-length path) or the first result\n    return subject ?\n      // If the subject is not a promise, it has already been resolved;\n      // consumers should not resolve it, but access its properties directly.\n      // This avoids infinite `then` chains when `await`ing this path.\n      subject.then && getThen(() => pathProxy.subject) :\n      // Otherwise, return the first result of this path\n      getThen(() => getFirstItem(pathProxy.results));\n  }\n}\n","import { isAsyncIterable } from './valueUtils';\n\n/**\n * Converts an asynchronously iterable path into an array.\n *\n * Requires:\n * - (optional) an iterable path\n */\nexport default class ToArrayHandler {\n  handle(pathData, path) {\n    return async map => {\n      const items = [];\n      if (isAsyncIterable(path)) {\n        // Ensure the mapping function is valid\n        if (typeof map !== 'function')\n          map = item => item;\n        // Retrieve and map all elements\n        let index = 0;\n        for await (const item of path)\n          items.push(await map(item, index++));\n      }\n      return items;\n    };\n  }\n}\n","import { handler } from './handlerUtil';\n\n/**\n * Finds the index at which the break between the namespace and the\n * occurs - then execute a callback with this index as the second arg\n */\nfunction breakIndex(term, cb) {\n  if (term?.termType !== 'NamedNode')\n    return undefined;\n  // Find the index of the last '#' or '/' if no '#' exists\n  const hashIndex = term.value.lastIndexOf('#');\n  return cb(term.value, hashIndex === -1 ? term.value.lastIndexOf('/') : hashIndex);\n}\n\n/**\n * Gets the namespace of a NamedNode subject\n */\nexport const namespaceHandler = handler(({ subject }) => breakIndex(subject, (str, index) => str.slice(0, index + 1)));\n\n/**\n * Gets the fragment of a NamedNode subject\n */\nexport const fragmentHandler = handler(({ subject }) => breakIndex(subject, (str, index) => str.slice(index + 1)));\n\n/**\n * Gets the prefix of a NamedNode subject\n */\nexport const prefixHandler = handler(async data => {\n  const context = await data.settings.parsedContext;\n  const ns = namespaceHandler.handle(data);\n  for (const key in context) {\n    if (typeof key === 'string' && context[key] === ns)\n      return key;\n  }\n  return undefined;\n});\n","import AsyncIteratorHandler from './AsyncIteratorHandler';\nimport { listHandler, containerHandler, collectionHandler } from './CollectionsHandler';\nimport DataHandler from './DataHandler';\nimport DeleteFunctionHandler from './DeleteFunctionHandler';\nimport ExecuteQueryHandler from './ExecuteQueryHandler';\nimport GetHandler from './GetFunctionHandler';\nimport InsertFunctionHandler from './InsertFunctionHandler';\nimport MutationExpressionsHandler from './MutationExpressionsHandler';\nimport PathExpressionHandler from './PathExpressionHandler';\nimport PredicateHandler from './PredicateHandler';\nimport PredicatesHandler from './PredicatesHandler';\nimport PreloadHandler from './PreloadHandler';\nimport PropertiesHandler from './PropertiesHandler';\nimport ReplaceFunctionHandler from './ReplaceFunctionHandler';\nimport SetFunctionHandler from './SetFunctionHandler';\nimport SortHandler from './SortHandler';\nimport SparqlHandler from './SparqlHandler';\nimport StringToLDflexHandler from './StringToLDflexHandler';\nimport SubjectHandler from './SubjectHandler';\nimport SubjectsHandler from './SubjectsHandler';\nimport ThenHandler from './ThenHandler';\nimport ToArrayHandler from './ToArrayHandler';\nimport { termToPrimitive } from './valueUtils';\nimport { handler } from './handlerUtil';\nimport { prefixHandler, namespaceHandler, fragmentHandler } from './URIHandler';\n\n/**\n * A map with default property handlers.\n */\nexport default {\n  // Flag to loaders that exported paths are not ES6 modules\n  __esModule: () => undefined,\n\n  // Add thenable and async iterable behavior\n  then: new ThenHandler(),\n  [Symbol.asyncIterator]: new AsyncIteratorHandler(),\n\n  // Add utilities for collections\n  list: listHandler(),\n  container: containerHandler(false),\n  containerAsSet: containerHandler(true),\n  collection: collectionHandler(),\n\n  // Add read and query functionality\n  get: new GetHandler(),\n  subject: new SubjectHandler(),\n  predicate: new PredicateHandler(),\n  properties: new PropertiesHandler(),\n  predicates: new PredicatesHandler(),\n  pathExpression: new PathExpressionHandler(),\n  sparql: new SparqlHandler(),\n  subjects: new SubjectsHandler(),\n  results: new ExecuteQueryHandler(),\n  sort: new SortHandler('ASC'),\n  sortDesc: new SortHandler('DESC'),\n  preload: new PreloadHandler(),\n\n  // Add write functionality\n  mutationExpressions: new MutationExpressionsHandler(),\n  add: new InsertFunctionHandler(),\n  set: new SetFunctionHandler(),\n  replace: new ReplaceFunctionHandler(),\n  delete: new DeleteFunctionHandler(),\n\n  // Add RDFJS term handling\n  termType:    termPropertyHandler('termType'),\n  value:       termPropertyHandler('value'),\n  datatype:    termPropertyHandler('datatype'),\n  language:    termPropertyHandler('language'),\n  canonical:   termPropertyHandler('canonical'),\n  equals:      DataHandler.sync('subject', 'equals'),\n  toString:    DataHandler.syncFunction('subject', 'value'),\n  valueOf:     subjectToPrimitiveHandler(),\n  toPrimitive: subjectToPrimitiveHandler(),\n\n  // URI / namedNode handling\n  prefix: prefixHandler,\n  namespace: namespaceHandler,\n  fragment: fragmentHandler,\n\n  // Add iteration helpers\n  toArray: new ToArrayHandler(),\n  termTypes: handler((_, path) => path.toArray(term => term.termType)),\n  values:    handler((_, path) => path.toArray(term => term.value)),\n  datatypes: handler((_, path) => path.toArray(term => term.datatype)),\n  languages: handler((_, path) => path.toArray(term => term.language)),\n\n  // Parse a string into an LDflex object\n  resolve: new StringToLDflexHandler(),\n};\n\n// Creates a handler for the given RDF/JS Term property\nfunction termPropertyHandler(property) {\n  // If a resolved subject is present,\n  // behave as an RDF/JS term and synchronously expose the property;\n  // otherwise, return a promise to the property value\n  return handler(({ subject }, path) =>\n    subject && (property in subject) ? subject[property] :\n      path.then && path.then(term => term?.[property]));\n}\n\n// Creates a handler that converts the subject into a primitive\nfunction subjectToPrimitiveHandler() {\n  return handler(({ subject }) => () =>\n    typeof subject?.termType !== 'string' ?\n      undefined : termToPrimitive(subject));\n}\n","import MutationFunctionHandler from './MutationFunctionHandler';\n\n/**\n * A MutationFunctionHandler for insertions.\n */\nexport default class InsertFunctionHandler extends MutationFunctionHandler {\n  constructor() {\n    super('INSERT', false);\n  }\n}\n","import MutationFunctionHandler from './MutationFunctionHandler';\nimport { hasPlainObjectArgs } from './valueUtils';\n\n/**\n * Returns a function that deletes all existing values\n * for the path, and then adds the given values to the path.\n *\n * Requires:\n * - a delete function on the path proxy.\n * - an add function on the path proxy.\n */\nexport default class SetFunctionHandler extends MutationFunctionHandler {\n  handle(pathData, path) {\n    return (...args) => {\n      // First, delete all existing values for the property/properties\n      const deletePath = !hasPlainObjectArgs(args) ?\n        // When a single property is given, delete all of its values\n        path.delete() :\n        // When a map of properties is given, delete all of their values\n        Object.keys(args[0]).reduce((previousPath, property) =>\n          previousPath.delete({ [property]: [] }), path);\n      // Next, insert the new values\n      return deletePath.add(...args);\n    };\n  }\n}\n","/**\n * Returns a function that deletes the given value\n * for the path, and then adds the given values to the path.\n *\n * Requires:\n * - a delete function on the path proxy.\n * - an add function on the path proxy.\n */\nexport default class ReplaceFunctionHandler {\n  handle(pathData, path) {\n    return function (oldValue, ...newValues) {\n      if (!oldValue || !newValues.length)\n        throw new Error('Replacing values requires at least two arguments, old value followed by all new values');\n      return path.delete(oldValue).add(...newValues);\n    };\n  }\n}\n","import MutationFunctionHandler from './MutationFunctionHandler';\n\n/**\n * A MutationFunctionHandler for deletions.\n */\nexport default class DeleteFunctionHandler extends MutationFunctionHandler {\n  constructor() {\n    super('DELETE', true);\n  }\n}\n","import PathProxy from 'ldflex/src/PathProxy';\nimport JSONLDResolver from 'ldflex/src/JSONLDResolver';\nimport ComplexPathResolver from './ComplexPathResolver';\nimport defaultHandlers from 'ldflex/src/defaultHandlers';\nimport { ContextParser } from 'jsonld-context-parser';\nimport ContextProvider from 'ldflex/src/ContextProvider';\n/**\n * A PathFactory creates paths with default settings.\n */\n\nexport default class PathFactory {\n\n  private _settings: any\n  private _data: any\n  private _jsonldResolver: any\n  private _pathProxy: any\n\n  constructor(settings, data) {\n    // Store settings and data\n    this._settings = settings = { ...settings\n    };\n    this._data = data = { ...data\n    }; // Prepare the handlers\n\n    const handlers = settings.handlers || defaultHandlers;\n\n    for (const key in handlers) handlers[key] = toHandler(handlers[key]);\n\n    for (const key of Object.getOwnPropertySymbols(handlers)) handlers[key] = toHandler(handlers[key]); // Prepare the resolvers\n\n\n    const resolvers = (settings.resolvers || []).map(toResolver);\n\n    if (settings.context) {\n      const contextProvider = new ContextProvider(settings.context);\n      resolvers.push(new ComplexPathResolver(contextProvider));\n      resolvers.push(this._jsonldResolver = new JSONLDResolver(contextProvider));\n      settings.parsedContext = new ContextParser().parse(settings.context).then(_ref => {\n        let {\n          contextRaw\n        } = _ref;\n        return contextRaw;\n      });\n    } else {\n      settings.context = settings.parsedContext = {};\n    } // Instantiate PathProxy that will create the paths\n\n\n    this._pathProxy = new PathProxy({\n      handlers,\n      resolvers\n    }); // Remove PathProxy settings from the settings object\n\n    delete settings.handlers;\n    delete settings.resolvers;\n  }\n  /**\n   * Creates a path with the given (optional) settings and data.\n   */\n\n\n  create() {\n    let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let data = arguments.length > 1 ? arguments[1] : undefined;\n    // The settings parameter is optional\n    if (!data) [data, settings] = [settings, null]; // Set data as subject if input as string\n\n    if (typeof data === 'string') data = {\n      subject: data\n    }; // Apply defaults on data\n\n    const _data = { ...this._data,\n      ...data\n    }; // Resolve string subjects to namedNodes\n\n    if (typeof _data.subject === 'string') {\n      if (this._jsonldResolver) _data.subject = this._jsonldResolver.lookupProperty(_data.subject);else throw new Error('Unable to resolve string subject - try providing a context to the PathFactory');\n    } // Apply defaults on settings\n\n\n    return this._pathProxy.createPath({ ...this._settings,\n      ...settings\n    }, _data);\n  }\n\n}\nPathFactory.defaultHandlers = defaultHandlers;\n/**\n * Converts a handler function into a handler object.\n */\n\nexport function toHandler(handle) {\n  return typeof handle.handle === 'function' ? handle : {\n    handle\n  };\n}\n/**\n * Converts a resolver function into a catch-all resolver object.\n */\n\nexport function toResolver(resolve) {\n  return typeof resolve.resolve === 'function' ? resolve : {\n    supports,\n    resolve\n  };\n} // Catch-all resolvers support everything\n\nfunction supports() {\n  return true;\n}","/**\n * Asynchronous iterator wrapper for the Comunica SPARQL query engine.\n */\nexport default class FetchEngine {\n\n  private source: string\n\n  constructor (source: string) {\n    this.source = source\n  }\n\n  /**\n   * Creates an asynchronous iterable of results for the given SPARQL query.\n   */\n  async* execute(query: string) {\n    const url = new URL(this.source)\n    url.searchParams.set('format', 'application/sparql-results+json')\n    const data = new FormData()\n    data.set('query', query)\n    const response = await fetch(url.toString(), {\n      method: 'POST',\n      body: data,\n    })\n\n    const json = await response.json()\n    const { results: { bindings } } = json\n\n    for (const binding of bindings) {\n      yield new Proxy(binding, {\n        get (target, name) {\n          if (name === 'values')\n            return () => {\n              const key = Object.keys(binding)[0]\n              // console.log(binding)\n              return toIterator([binding[key]]);\n            }\n\n          if (name === 'size') return 1\n\n          if (name === 'get') {\n            return (variable) => binding[variable]\n          }\n        }\n      })\n    }\n  }\n}\n\nfunction *toIterator<T>(iterable: Iterable<T>): Iterator<T> {\n  for (const i of iterable)\n    yield i;\n}","import PreloadHandler, { hashTerm } from './PreloadHandler';\n\nconst VARIABLE = /(SELECT\\s+)(\\?\\S+)/;\nconst QUERY_TAIL = /\\}[^}]*$/;\n\n/**\n * Given a number of paths, preloads them.\n * This handler can be used for template layers that use tagged template literals.\n * Such as uHTML and Preact + htm.\n */\nexport default class BundleHandler extends PreloadHandler {\n  /**\n   * Creates a preload function.\n   */\n  handle(pathData, pathProxy) {\n    const _this = this;\n\n    return async (paths, isMap = false) => {\n      const pathExpressions = await (await Promise.all(paths.map(path => path.pathExpression)));\n      const mergedPathExpressions = pathExpressions.map(pathExpression => pathExpression\n        .filter((segment, index) => {\n          if (segment.predicate && isMap && index === 1)\n            return false;\n          return segment.predicate;\n        })\n        .map(segment => segment.predicate.value)\n        .map(predicate => predicate.startsWith('http') ? `<${predicate}>` : predicate)\n        .join(' / ')\n      );\n\n      const resultsCaches = await _this.createResultsCache(pathExpressions, mergedPathExpressions, pathData, pathProxy, isMap);\n\n      for (const [index, path] of paths.entries()) {\n        const predicateString = (await path.predicate)?.value;\n        const filters = await (path.path).filters;\n        const key = `${predicateString}|${filters?.map(filter => filter.toString('')) ?? ''}`;\n        const cacheKey = mergedPathExpressions[index];\n\n        if (predicateString) {\n          const cacheItems = resultsCaches.map(resultsCache => resultsCache.path.propertyCache[cacheKey]);\n\n          const matches = [];\n          for (const cacheItem of cacheItems) {\n            for (const cacheItemValue of cacheItem) {\n              const itemKey = `${predicateString}|${cacheItemValue.path.filters?.map(filter => filter.toString('')) ?? ''}`;\n              // eslint-disable-next-line max-depth\n              if (key === itemKey)\n                matches.push(cacheItemValue);\n            }\n          }\n\n          path.path.resultsCache = matches;\n        }\n      }\n\n      return pathProxy;\n    };\n  }\n\n  /**\n   * Creates a cache for the results of\n   * resolving the given predicates against the path.\n   */\n  async createResultsCache(pathExpressions, mergedPathExpressions, pathData, path, isMap = false) {\n    // Execute the preloading query\n    const { query, vars, resultVar } = await this.createQuery(pathExpressions, mergedPathExpressions, path, isMap);\n    const { settings: { queryEngine } } = pathData;\n    const bindings = queryEngine.execute(query);\n\n    const predicates = mergedPathExpressions;\n\n    const mergedFilters = pathExpressions\n      .map(pathExpression => pathExpression.filter(segment => segment.filters).map(segment => segment.filters));\n\n    // Extract all results and their preloaded property values\n    const resultsCache = {};\n    const propertyCaches = {};\n    for await (const binding of bindings) {\n      // Initialize the result's cache if needed\n      const result = binding.get(resultVar) ?? binding.get(resultVar.substring(1)), hash = hashTerm(result);\n\n      if (!(hash in resultsCache)) {\n        // Create the property cache\n        const propertyCache = propertyCaches[hash] = {};\n        for (const predicate of predicates)\n          propertyCache[predicate] = [];\n        // Create the result path\n        const resultData = { subject: result, propertyCache };\n        resultsCache[hash] = pathData.extendPath(resultData, null);\n      }\n\n      // Create and cache a possible property value path from the binding\n      const propertyCache = propertyCaches[hash];\n      for (let i = 0; i < vars.length; i++) {\n        const value = binding.get(vars[i]) ?? binding.get(vars[i].substring(1));\n        if (value) {\n          const valuePath = pathData.extendPath({ subject: value, filters: mergedFilters[i] }, null);\n          propertyCache[predicates[i]].push(valuePath);\n        }\n      }\n    }\n    return Object.values(resultsCache);\n  }\n\n  async createQuery(pathExpressions, mergedPathExpressions, path, isMap = false) {\n    const subject = `${await path.subject}`;\n    path.finalClause = isMap ? () => ' ' : variable => `VALUES ${variable} { <${subject}> }`;\n    const parentQuery = await path.sparql;\n    const variableMatch = VARIABLE.exec(parentQuery);\n    const resultVar = variableMatch[2];\n\n    const vars = mergedPathExpressions.map((p, i) => `?preload_${i}`);\n\n    const mergedFilters = pathExpressions.map((pathExpression, index) => pathExpression\n      .filter(segment => segment.filters)\n      .map(segment => segment.filters.map(filter => filter.toString(vars[index])))\n    );\n\n    const filters = mergedFilters.map(mergedFilter => mergedFilter.length ? `  FILTER(${mergedFilter.join(' || ')})` : '');\n    const preloadClauses = mergedPathExpressions.map((predicate, i) => `    { ${resultVar} ${predicate} ${vars[i]}. \\n    ${filters[i]}\\n    }`).join('\\n    UNION\\n');\n    const newQueryTail = `  OPTIONAL {\\n${preloadClauses}\\n  }\\n$&`;\n    const query = parentQuery.replace(VARIABLE, `$1$2 ${vars.join(' ')}`).replace(QUERY_TAIL, newQueryTail);\n\n    return {\n      query,\n      vars,\n      resultVar,\n    };\n  }\n}\n","import PathFactory from './PathFactory'\nimport FetchEngine from './FetchEngine'\nimport PreloadHandler from 'ldflex/src/PreloadHandler';\nimport AsyncIteratorHandler from 'ldflex/src/AsyncIteratorHandler';\nimport { listHandler, containerHandler, collectionHandler } from 'ldflex/src/CollectionsHandler';\nimport DataHandler from 'ldflex/src/DataHandler';\nimport ExecuteQueryHandler from 'ldflex/src/ExecuteQueryHandler';\nimport GetHandler from 'ldflex/src/GetFunctionHandler';\nimport MutationExpressionsHandler from 'ldflex/src/MutationExpressionsHandler';\nimport PathExpressionHandler from 'ldflex/src/PathExpressionHandler';\nimport PredicateHandler from 'ldflex/src/PredicateHandler';\nimport PredicatesHandler from 'ldflex/src/PredicatesHandler';\nimport PropertiesHandler from 'ldflex/src/PropertiesHandler';\nimport SortHandler from 'ldflex/src/SortHandler';\nimport SparqlHandler from 'ldflex/src/SparqlHandler';\nimport StringToLDflexHandler from 'ldflex/src/StringToLDflexHandler';\nimport SubjectHandler from 'ldflex/src/SubjectHandler';\nimport SubjectsHandler from 'ldflex/src/SubjectsHandler';\nimport ThenHandler from 'ldflex/src/ThenHandler';\nimport ToArrayHandler from 'ldflex/src/ToArrayHandler';\nimport { PathHandler } from 'ldflex/src/PathHandler';\nimport { ParentHandler } from 'ldflex/src/ParentHandler';\nimport { termToPrimitive } from 'ldflex/src/valueUtils';\nimport { handler } from 'ldflex/src/handlerUtil';\nimport { prefixHandler, namespaceHandler, fragmentHandler } from 'ldflex/src/URIHandler';\nimport BundleHandler from 'ldflex/src/BundleHandler';\n\n/**\n * A map with default property handlers.\n */\n\nconst defaultHandlers = {\n  // Flag to loaders that exported paths are not ES6 modules\n  __esModule: () => undefined,\n  // Add thenable and async iterable behavior\n  then: new ThenHandler(),\n  [Symbol.asyncIterator]: new AsyncIteratorHandler(),\n  // Add utilities for collections\n  list: listHandler(),\n  container: containerHandler(false),\n  containerAsSet: containerHandler(true),\n  collection: collectionHandler(),\n  // Add read and query functionality\n  get: new GetHandler(),\n  subject: new SubjectHandler(),\n  predicate: new PredicateHandler(),\n  properties: new PropertiesHandler(),\n  predicates: new PredicatesHandler(),\n  pathExpression: new PathExpressionHandler(),\n  sparql: new SparqlHandler(),\n  subjects: new SubjectsHandler(),\n  results: new ExecuteQueryHandler(),\n  sort: new SortHandler('ASC'),\n  sortDesc: new SortHandler('DESC'),\n  preload: new PreloadHandler(),\n  // Add write functionality\n  mutationExpressions: new MutationExpressionsHandler(),\n  // Add RDFJS term handling\n  termType: termPropertyHandler('termType'),\n  value: termPropertyHandler('value'),\n  datatype: termPropertyHandler('datatype'),\n  language: termPropertyHandler('language'),\n  canonical: termPropertyHandler('canonical'),\n  equals: DataHandler.sync('subject', 'equals'),\n  toString: DataHandler.syncFunction('subject', 'value'),\n  valueOf: subjectToPrimitiveHandler(),\n  toPrimitive: subjectToPrimitiveHandler(),\n  // URI / namedNode handling\n  prefix: prefixHandler,\n  namespace: namespaceHandler,\n  fragment: fragmentHandler,\n  // Add iteration helpers\n  toArray: new ToArrayHandler(),\n  termTypes: handler((_, path) => path.toArray(term => term.termType)),\n  values: handler((_, path) => path.toArray(term => term.value)),\n  datatypes: handler((_, path) => path.toArray(term => term.datatype)),\n  languages: handler((_, path) => path.toArray(term => term.language)),\n  // Parse a string into an LDflex object\n  resolve: new StringToLDflexHandler()\n}; // Creates a handler for the given RDF/JS Term property\n\nfunction termPropertyHandler(property) {\n  // If a resolved subject is present,\n  // behave as an RDF/JS term and synchronously expose the property;\n  // otherwise, return a promise to the property value\n  return handler((_ref, path) => {\n    let {\n      subject\n    } = _ref;\n    return subject && property in subject ? subject[property] : path.then && path.then(term => term === null || term === void 0 ? void 0 : term[property]);\n  });\n} // Creates a handler that converts the subject into a primitive\n\n\nfunction subjectToPrimitiveHandler() {\n  return handler(_ref2 => {\n    let {\n      subject\n    } = _ref2;\n    return () => typeof (subject === null || subject === void 0 ? void 0 : subject.termType) !== 'string' ? undefined : termToPrimitive(subject);\n  });\n}\n\nconst handlers = {\n  ...defaultHandlers,\n\n  parent: new ParentHandler(),\n  path: new PathHandler(),\n  preload: new PreloadHandler(),\n  bundle: new BundleHandler()\n}\n\nexport const path = (iri: string, prefixes, vocab?: string, source?: string, extraLDflexHandlers: { [key: string]: any } = {}) => {\n  if (!source) source = iri\n  const queryEngine = new FetchEngine(source)\n  const context = { '@context': { ...prefixes }}\n  if (vocab) { context['@context']['@vocab'] = prefixes[vocab] }\n  const path = new PathFactory({ queryEngine, handlers: {\n    ...handlers,\n    ...extraLDflexHandlers\n  }, context }, undefined)\n  /** @ts-ignore */\n  return path.create({ subject: { termType: 'NamedNode', value: iri } })\n}","export class ParentHandler {\n  handle(pathData) {\n    let node = pathData;\n    while (node.parent)\n      node = node.parent;\n    return node;\n  }\n}\n","export class PathHandler {\n  handle(pathData) {\n    return pathData;\n  }\n}\n","import { html, render, Hole } from 'uhtml'\nimport { JsonLdContextNormalized } from 'jsonld-context-parser'\nimport { foreign } from 'uhandlers'\nimport { loaders } from './withLoader'\nimport { path } from './path'\n\nconst ldflexAttribute = (value, preloader) => foreign((node, name, value) => {\n  preloader.then(() => {\n    value.value.then(resolved => {\n      if (typeof resolved === 'string') {\n        node.setAttribute(name, resolved)\n      }  \n    })  \n  })\n}, value)\n\nexport const createHtml = (options: {\n  loader: any,\n  error: any,\n  extraLDflexHandlers?: {\n    [key: string]: any\n  },\n  dataHandlers: {\n    [key: string]: Function\n  },\n  prefixes: {\n    [key: string]: string\n  }\n}) => {\n  const parsedContext = new JsonLdContextNormalized(options.prefixes)\n  \n  for (const [type, handler] of Object.entries(options.dataHandlers)) {\n    const expandedType = parsedContext.expandTerm(type)\n    if (expandedType !== type) options.dataHandlers[expandedType] = handler\n  }\n\n  const htmlReplacement = function (templates, ...values) {\n    const paths = values.filter(value => typeof value?.extendPath === 'function');\n    const trails = new Map();\n    let preloader = Promise.resolve()\n\n    for (const path of paths) {\n      const subject = path.parent.subject.value\n      if (!trails.has(subject))\n        trails.set(subject, []);\n\n      const subjectPaths = trails.get(subject);\n      subjectPaths.push(path);\n    }\n\n    for (const subjectPaths of trails.values()) {\n      const { parent } = subjectPaths[0];\n      preloader = preloader.then(() => parent.proxy.bundle(subjectPaths))\n    }\n\n    values = values.map((value, index) => {\n      const isAttr = templates[index].trim().endsWith('=')\n      const isLDflex = typeof value?.extendPath === 'function'\n\n      if (isAttr && isLDflex) {\n        return ldflexAttribute(value, preloader)\n      }\n      \n      return mapValue(options, value, preloader)\n    })\n\n    return html(templates, ...values)\n  }\n\n  const get = (iri, vocab = 'foaf', source = null) => path(iri, options.prefixes, vocab, source, options.extraLDflexHandlers)\n\n  return {\n    html: htmlReplacement,\n    render: render,\n    Hole,\n    get\n  }\n}\n\n\n\nconst mapValue = (options, value, preloader) => {\n  const isLDflex = typeof value?.extendPath === 'function'\n  const isPromise = value instanceof Promise\n\n  if (!isLDflex && !isPromise) return value\n\n  // Return an uHTML interpolate callback.\n  return (comment) => {\n    const parentNode = comment.parentNode\n\n    if (parentNode && parentNode instanceof HTMLElement) {\n      render(parentNode, loaders.get(value) ?? options.loader())\n\n      if (isPromise && !isLDflex) {\n        return value.then(resolved => render(parentNode, html`${resolved}`))\n      }\n\n      if (isLDflex) {\n        return preloader.then(() => value.then(async resolved => {\n          const type = await (resolved?.datatype)?.id ?? 'iri'\n          const valueValue = await resolved?.value  \n\n          if (!valueValue) return parentNode.innerHTML = ''\n\n          if (!options.dataHandlers[type]) throw new Error('Missing data handler: ' + type)\n          return render(parentNode, options.dataHandlers[type](valueValue))  \n        })).catch((exception) => {\n          render(parentNode, options.error(exception))\n        })\n      }\n    }\n  }\n}","export default {\n  schema: 'https://schema.org/',\n  foaf: 'http://xmlns.com/foaf/0.1/',\n  rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  dbo: 'http://dbpedia.org/ontology/',\n  dbr: 'http://dbpedia.org/resource/',\n  dbp: 'http://dbpedia.org/property/',\n  rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n\n  \"friends\": \"knows\",\n  \"label\": \"http://www.w3.org/2000/01/rdf-schema#label\",\n}","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultHandlers = exports.seriesIterationHandlers = void 0;\nconst defaultIterationHandlers = __importStar(require(\"./defaultIterationHandlers\"));\nexports.seriesIterationHandlers = __importStar(require(\"./seriesIterationHandlers\"));\nexports.defaultHandlers = defaultIterationHandlers;\nexports.default = defaultIterationHandlers;\n","import { createHtml, prefixes } from '../src/index'\nimport { withLoader } from '../src/helpers/withLoader'\nimport { langMatches } from 'ldflex/src/filters'\nimport asyncHandlers from '@ldflex/async-iteration-handlers'\n\nexport const { html, render, Hole, get: getter } = createHtml({\n  loader: () => html`<span class=\"loader\">Loading...</span>`,\n  error: (exception) => html``,\n  prefixes,\n  extraLDflexHandlers: {\n    ...asyncHandlers,\n    map1: {\n      handle: (pathData, path) => {\n        return async (callback) => {\n          const result = []\n      \n          const pathFetch = function (templates, ...values) {\n            return values\n          }\n\n          const subPaths = callback(path, pathFetch).filter(Boolean)\n\n          if (subPaths.length) {\n            await path.bundle(subPaths, true)\n          }\n    \n          for await (const subPath of path) {\n            result.push(callback(subPath, html))\n          }\n    \n          return html`${result}`  \n        }\n      }\n    }\n  },\n  dataHandlers: {\n    'rdf:langString': (value) => value,\n    'xsd:string': (value) => value,\n    'xsd:date': (value) => new Date(value).toLocaleString('nl', { dateStyle: 'short' }),\n    'iri': (string: string) => {\n      if (string.includes('mailto:')) {\n        return html`<a href=${string}>${string.replace('mailto:', '')}</a>`\n      }\n      return string\n    }\n  }\n})\n\nconst loremIpsum = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis a feugiat turpis. Nam bibendum sed nibh et vestibulum. Praesent nibh neque, imperdiet in eleifend vitae, auctor in erat. Vestibulum fermentum consectetur urna, id lacinia neque facilisis sollicitudin. Aenean quis purus tellus. Nunc risus leo, suscipit quis massa nec, hendrerit congue justo.'\nconst loader = (length) => html`<span class=\"lorem\">${loremIpsum.substring(0, length)}</span>`\n\nconst get = (url) => getter(url, 'dbo', 'https://dbpedia.org/sparql')\n\nconst en = langMatches('en')\n\nconst philosopherData = [\n  'Søren_Kierkegaard',\n  'Friedrich_Nietzsche',\n  'Immanuel_Kant',\n  'Plato',\n  // 'Marcus_Aurelius'\n].map(id => { \n  const url = `http://dbpedia.org/resource/${id}`\n  return [get(url), url]\n})\n\nconst draw = async () => {\n\n  render(document.body, html`\n    <div class=\"container pt-5\">\n    <h1>A demonstration of <a target=\"_blank\" href=\"https://github.com/danielbeeke/uhtml-ldflex\">uHTML-LDflex</a></h1>\n\n    <p>\n      What are you seeing <a target=\"_blank\" href=\"https://github.com/danielbeeke/uhtml-ldflex/blob/master/demo/demo.ts\">here</a>?\n\n      <ul>\n      <li>uHTML templating engine, that automatically resolves LDflex paths via type specific handlers.</li>\n      <li>Multiple calls inside a template are bundled into one query via the preload function of LDflex.</li>\n      <li>The query bundling also works for .map(). A custom LDflex handler is written for that use case.</li>\n      <li>Promises first show a preloader and then are shown.</li>\n      </ul>\n    </p>\n\n    <div class=\"row row-cols-1 row-cols-md-4 g-4\">\n      ${philosopherData.map(([person, url]) => html`\n      <div class=\"col\">\n        <div class=\"card\">\n          <img onload=${(event) => event.target.classList.add('loaded')} src=${person.thumbnail} class=\"card-img-top\" alt=\" \">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">\n              <span>${withLoader(person.label(en), loader(20))}</span>\n            </h5>\n            <span>${withLoader(person.deathYear, loader(4))}</span>\n          \n            <p class=\"card-text truncate\">${withLoader(person.rdfs_comment(en), loader(1000))}</p>\n          </div>\n          \n          <ul class=\"list-group list-group-flush\" style=\"border-top: none;\">\n          <li class=\"list-group-item\"><em class=\"text-muted\">Works:</em></li>\n          </ul>\n        \n          <ul class=\"list-group list-group-flush\" style=\"max-height: 200px; border-top: none; overflow-y: scroll;\">\n          <li class=\"list-group-item\"><em class=\"text-muted\">Works:</em></li>\n          \n          ${person['^dbo:author'].label(en).map((label) => html`\n            <li class=\"list-group-item\">\n              <span>${label.value}</span>\n            </li>`\n          )}\n          </ul>\n\n          <div class=\"card-footer\">\n            <a href=${url} target=\"_blank\" class=\"btn btn-primary\">Read more</a>\n          </div>      \n\n        </div>\n      </div>\n      `)}\n    </div>\n\n  </div>\n  `)\n}\n\ndraw()\n\n\n"],"names":["Object","defineProperty","module","exports","value","defaultExpandOptions","ContextParser","$a733433db95d8dd4$var$ContextParser","constructor","options","this","documentLoader","$01VDl","FetchDocumentLoader","documentCache","validateContext","skipValidation","expandContentTypeToBase","remoteContextsDepthLimit","redirectSchemaOrgHttps","static","strictRange","errorCode","$h6hqV","ErrorCoded","JSON","stringify","$6vLBM","Util","REGEX_LANGUAGE_TAG","test","strictValues","ERROR_CODES","INVALID_BASE_DIRECTION","REGEX_DIRECTION_TAG","idifyReverseTerms","context","key","keys","isValidKeyword","INVALID_IRI_MAPPING","isPotentialKeyword","expandPrefixedTerms","contextRaw","getContextRaw","EXPAND_KEYS_BLACKLIST","indexOf","isReservedInternalKeyword","keyValue","ALIAS_DOMAIN_BLACKLIST","KEYWORD_REDEFINITION","ALIAS_RANGE_BLACKLIST","getContextValueId","INVALID_KEYWORD_ALIAS","INVALID_TERM_DEFINITION","isPrefixValue","changed","expandTerm","id","type","canAddIdEntry","isValidIri","newId","normalize","processingMode","normalizeLanguageTags","toLowerCase","containersToHash","Array","isArray","newValue","containerValue","applyScopedProtected","isTermProtected","validateKeywordRedefinitions","contextBefore","contextAfter","expandOptions","isPrefix","isSimpleTermDefinitionPrefix","valueBefore","$gIor8","PROTECTED_TERM_REDEFINITION","validate","valueType","substr","INVALID_VOCAB_MAPPING","INVALID_BASE_IRI","validateLanguage","INVALID_DEFAULT_LANGUAGE","INVALID_VERSION_VALUE","validateDirection","INVALID_CONTEXT_ENTRY","INVALID_PROPAGATE_VALUE","getPrefix","CYCLIC_IRI_MAPPING","isValidIriWeak","$3JqYv","JsonLdContextNormalized","isCompactIri","objectKey","objectValue","INVALID_TYPE_MAPPING","INVALID_REVERSE_PROPERTY","length","CONTAINERS_1_0","join","INVALID_CONTAINER_MAPPING","CONTAINERS","INVALID_LANGUAGE_MAPPING","INVALID_PREFIX_VALUE","INVALID_NEST_VALUE","applyBaseEntry","inheritFromParent","parentContext","baseIRI","external","$9sHSr","resolve","normalizeContextIri","contextIri","_a","Error","startsWith","async","ignoreScopedContexts","assign","parse","ignoreProtection","ignoreRemoteScopedContexts","e","message","INVALID_SCOPED_CONTEXT","minimalProcessing","parentContextInitial","DEFAULT_PROCESSING_MODE","remoteContexts","CONTEXT_OVERFLOW","hasProtectedTerms","INVALID_CONTEXT_NULLIFICATION","overriddenLoad","getOverriddenLoad","parsedStringContext","load","contextIris","contexts","Promise","all","map","subContext","i","reducedContexts","reduce","accContextPromise","contextEntry","then","accContext","newContext","importContext","INVALID_IMPORT_VALUE","loadImportContext","newContextWrapped","parseInnerContexts","INVALID_LOCAL_CONTEXT","url","cached","slice","document","LOADING_REMOTE_CONTEXT_FAILED","INVALID_REMOTE_CONTEXT","RECURSIVE_CONTEXT_INCLUSION","importContextIri","allowPrefixForcing","allowPrefixNonGenDelims","allowVocabRelativeToBase","self1","self","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","prototype","toString","call","normalizeName","name","String","TypeError","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","forEach","append","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","arrayBuffer","text","readAsText","chars","fromCharCode","readArrayBufferAsText","formData","decode","json","oldValue","has","hasOwnProperty","callback","thisArg","push","values","entries","methods","Request","input","method","upcased","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","stack","create","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","m","p","$6e38c3ae937828b3$var$__export","parcelRequire","$b8031a45095ebd52$var$removeDotSegments","path","segmentBuffers","$b8031a45095ebd52$var$isCharacterAllowedAfterRelativePathSegment","pop","$b8031a45095ebd52$var$removeDotSegmentsOfPath","iri","colonPosition","searchOffset","pathSeparator","character","relativeIRI","baseFragmentPos","baseQueryPos","relativeColonPos","valueColonPos","baseColonPos","baseIRIScheme","baseSlashAfterColonPos","baseIRIPath","baseIRILastSlashPos","lastIndexOf","removeDotSegments","removeDotSegmentsOfPath","$c7308519ba815972$var$ErrorCoded","code","super","fetcher","accept","mediaType","colonPos","alternateUrl","linkHeader","$fg2Qa","link","rel","uri","LOADING_DOCUMENT_FAILED","$b1ba8db121cd62fc$var$COMPATIBLE_ENCODING_PATTERN","$b1ba8db121cd62fc$var$WS_TRIM_PATTERN","$b1ba8db121cd62fc$var$WS_CHAR_PATTERN","$b1ba8db121cd62fc$var$WS_FOLD_PATTERN","$b1ba8db121cd62fc$var$DELIMITER_PATTERN","$b1ba8db121cd62fc$var$WS_DELIMITER_PATTERN","$b1ba8db121cd62fc$var$TOKEN_PATTERN","$b1ba8db121cd62fc$var$STATE","$b1ba8db121cd62fc$var$trim","$b1ba8db121cd62fc$var$hasWhitespace","$b1ba8db121cd62fc$var$skipWhitespace","offset","$b1ba8db121cd62fc$var$needsQuotes","$b1ba8db121cd62fc$var$Link","refs","links","attr","state","ref","expandRelations","end","attrValue","isSingleOccurenceAttr","parseExtendedValue","formatAttribute","isCompatibleEncoding","isTokenAttr","escapeQuotes","exec","language","encoding","formatExtendedAttribute","data","$b1ba8db121cd62fc$require$Buffer","isBuffer","encodeURIComponent","item","$fdbd661821e94ff9$export$a143d493d941bafc","$fdbd661821e94ff9$export$f99ded8fe4b79145","$fdbd661821e94ff9$var$customInspectSymbol","$fdbd661821e94ff9$var$Buffer","$fdbd661821e94ff9$var$K_MAX_LENGTH","$fdbd661821e94ff9$var$createBuffer","setPrototypeOf","arg","encodingOrOffset","$fdbd661821e94ff9$var$allocUnsafe","$fdbd661821e94ff9$var$from","string","isEncoding","$fdbd661821e94ff9$var$byteLength","actual","write","$fdbd661821e94ff9$var$fromString","arrayView","$fdbd661821e94ff9$var$isInstance","copy","$fdbd661821e94ff9$var$fromArrayBuffer","byteOffset","$fdbd661821e94ff9$var$fromArrayLike","$fdbd661821e94ff9$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","len","$fdbd661821e94ff9$var$checked","$fdbd661821e94ff9$var$numberIsNaN","$fdbd661821e94ff9$var$fromObject","toPrimitive","$fdbd661821e94ff9$var$assertSize","size","array","mustMatch","arguments","loweredCase","$fdbd661821e94ff9$var$utf8ToBytes","$fdbd661821e94ff9$var$base64ToBytes","$fdbd661821e94ff9$var$slowToString","start","$fdbd661821e94ff9$var$hexSlice","$fdbd661821e94ff9$var$utf8Slice","$fdbd661821e94ff9$var$asciiSlice","$fdbd661821e94ff9$var$latin1Slice","$fdbd661821e94ff9$var$base64Slice","$fdbd661821e94ff9$var$utf16leSlice","$fdbd661821e94ff9$var$swap","n","$fdbd661821e94ff9$var$bidirectionalIndexOf","val","dir","$fdbd661821e94ff9$var$arrayIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$fdbd661821e94ff9$var$hexWrite","Number","remaining","strLen","parsed","parseInt","$fdbd661821e94ff9$var$utf8Write","$fdbd661821e94ff9$var$blitBuffer","$fdbd661821e94ff9$var$asciiWrite","str","byteArray","charCodeAt","$fdbd661821e94ff9$var$asciiToBytes","$fdbd661821e94ff9$var$base64Write","$fdbd661821e94ff9$var$ucs2Write","units","c","hi","lo","$fdbd661821e94ff9$var$utf16leToBytes","$2Pflu","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","$fdbd661821e94ff9$var$MAX_ARGUMENTS_LENGTH","apply","$fdbd661821e94ff9$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$fdbd661821e94ff9$var$typedArraySupport","console","enumerable","poolSize","alloc","fill","$fdbd661821e94ff9$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$fdbd661821e94ff9$var$hexSliceLookupTable","$fdbd661821e94ff9$var$checkOffset","ext","$fdbd661821e94ff9$var$checkInt","$fdbd661821e94ff9$var$wrtBigUInt64LE","$fdbd661821e94ff9$var$checkIntBI","BigInt","$fdbd661821e94ff9$var$wrtBigUInt64BE","$fdbd661821e94ff9$var$checkIEEE754","$fdbd661821e94ff9$var$writeFloat","littleEndian","noAssert","$d6fIT","$fdbd661821e94ff9$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$fdbd661821e94ff9$var$defineBigIntMethod","$fdbd661821e94ff9$var$validateNumber","first","last","$fdbd661821e94ff9$var$boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$fdbd661821e94ff9$var$errors","$fdbd661821e94ff9$var$E","sym","getMessage","Base","writable","configurable","$fdbd661821e94ff9$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","$fdbd661821e94ff9$var$checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","abs","$fdbd661821e94ff9$var$INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","$fdbd661821e94ff9$var$base64clean","src","dst","alphabet","table","i16","fn","$fdbd661821e94ff9$var$BufferBigIntNotDefined","$20ec3f7d75eb65f7$export$d622b2ad8d90c771","$20ec3f7d75eb65f7$export$6100ba28696e12de","b64","tmp","lens","$20ec3f7d75eb65f7$var$getLens","validLen","placeHoldersLen","$20ec3f7d75eb65f7$var$Arr","$20ec3f7d75eb65f7$var$_byteLength","curByte","$20ec3f7d75eb65f7$var$revLookup","uint8","extraBytes","maxChunkLength","len2","$20ec3f7d75eb65f7$var$encodeChunk","$20ec3f7d75eb65f7$var$lookup","$20ec3f7d75eb65f7$var$code","$20ec3f7d75eb65f7$var$i","$20ec3f7d75eb65f7$var$len","num","output","$9898082a54f3b685$export$aafa59e2e03f2942","$9898082a54f3b685$export$68d8715fc104d294","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","term","expandVocab","$em0bs","contextValue","validIriMapping","prefix","vocab","vocabRelative","base","potentialKeyword","contextPrefixValue","value1","compactIri","shortestPrefixing","suffix","$4bda91574cc914f2$var$Util","separatorPos","charAt","isPrefixIriEndingWithGenDelim","keyword","KEYWORD_REGEX","prefixIri","ENDS_WITH_GEN_DELIM","Boolean","IRI_REGEX","IRI_REGEX_WEAK","VALID_KEYWORDS","serialize","object","t","cv","ci","sort","$67478d19e68b585e$var$__createBinding","__createBinding","o","k","k2","$67478d19e68b585e$var$__setModuleDefault","__setModuleDefault","v","$67478d19e68b585e$var$__importStar","__importStar","mod","__esModule","someSeries","someLimit","some","mapSeries","mapLimit","forEachOfSeries","forEachOfLimit","forEachOf","forEachSeries","forEachLimit","findSeries","findLimit","find","filterSeries","filterLimit","filter","everySeries","everyLimit","every","$67478d19e68b585e$var$IterableMethods","$6a183594efa9f5bd$var$__createBinding","$6a183594efa9f5bd$var$__setModuleDefault","$6a183594efa9f5bd$var$__importStar","reduceRight","$6a183594efa9f5bd$var$async","$kUcGy","iterableMethodsFactory","detect","iterableLimitMethodsFactory","detectLimit","detectSeries","each","eachLimit","eachSeries","iterableEachOfMethodsFactory","eachOf","iterableEachOfLimitMethodsFactory","eachOfLimit","eachOfSeries","iterableMemoMethodsFactory","$apZF2","$63690b4f22172e23$export$5635d7ef4b8fee1c","args","callArgs","$63690b4f22172e23$var$initialParams","$63690b4f22172e23$var$hasQueueMicrotask","queueMicrotask","$63690b4f22172e23$var$hasSetImmediate","setImmediate","$63690b4f22172e23$var$hasNextTick","nextTick","$63690b4f22172e23$var$fallback","setTimeout","$63690b4f22172e23$var$wrap","defer","$63690b4f22172e23$export$c233f08fbfea0913","$63690b4f22172e23$export$b5d55b15b1db3122","func","$63690b4f22172e23$var$isAsync","$63690b4f22172e23$var$handlePromise","$63690b4f22172e23$var$invokeCallback","toStringTag","$63690b4f22172e23$var$wrapAsync","asyncFn","$63690b4f22172e23$var$awaitify","arity","cbArgs","$63690b4f22172e23$var$applyEach","eachfn","fns","that","cb","$63690b4f22172e23$var$_asyncMap","iteratee","results","counter","_iteratee","_","iterCb","index","$63690b4f22172e23$var$isArrayLike","$63690b4f22172e23$var$breakLoop","$63690b4f22172e23$var$once","wrapper","callFn","$63690b4f22172e23$var$createIterator","coll","$63690b4f22172e23$var$createArrayIterator","okeys","$63690b4f22172e23$var$getIterator","$63690b4f22172e23$var$createES2015Iterator","$63690b4f22172e23$var$onlyOnce","$63690b4f22172e23$var$asyncEachOfLimit","generator","canceled","awaiting","running","idx","replenish","iterDone","iterateeCallback","catch","handleError","$63690b4f22172e23$var$eachOfLimit","asyncIterator","$63690b4f22172e23$var$isAsyncIterable","nextElem","looping","elem","$63690b4f22172e23$export$8b05461b96b91438","$63690b4f22172e23$var$eachOfArrayLike","completed","iteratorCallback","$63690b4f22172e23$var$eachOfGeneric","$63690b4f22172e23$export$d10d68e43a57bce9","$63690b4f22172e23$export$871de8747c9eaa88","$63690b4f22172e23$export$e0fc6250e304edaf","$63690b4f22172e23$export$750e7e5fea3b0654","$63690b4f22172e23$export$9a85c32cda85b0dd","$63690b4f22172e23$export$cdb63afc167779e","$63690b4f22172e23$var$PROMISE_SYMBOL","$63690b4f22172e23$var$promiseCallback","rej","$63690b4f22172e23$export$dfb5619354ba860","tasks","concurrency","numTasks","runningTasks","hasError","listeners","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","taskCallback","safeResults","rkey","processQueue","taskFn","runTask","run","getDependents","taskName","dependencies","remainingDependencies","dependencyName","taskListeners","addListener","currentTask","dependent","checkForDeadlocks","$63690b4f22172e23$var$FN_ARGS","$63690b4f22172e23$var$ARROW_FN_ARGS","$63690b4f22172e23$var$FN_ARG_SPLIT","$63690b4f22172e23$var$FN_ARG","$63690b4f22172e23$export$868ec1c38c3c8735","newTasks","params","fnIsAsync","hasNoDeps","newTask","stripped","endBlockComment","endIndex","endIndex1","$63690b4f22172e23$var$stripComments","match","$63690b4f22172e23$var$parseParams","taskCb","newArgs","$63690b4f22172e23$var$DLL","head","tail","removeLink","node","prev","empty","insertAfter","newNode","insertBefore","unshift","$63690b4f22172e23$var$setInitial","toArray","cur","remove","testFn","curr","dll","$63690b4f22172e23$var$queue","worker","payload","_worker","numRunning","workersList","events","drain","saturated","unsaturated","off","event","handler","ev","trigger","processingScheduled","_insert","insertAtFront","rejectOnError","promiseCallback","q","started","_createTaskItem","_tasks","process","_createCB","l","splice","idle","_maybeDrain","eventMethod","handleAndRemove","once","on","isProcessing","paused","datum","pushAsync","kill","unshiftAsync","pause","resume","defineProperties","$63690b4f22172e23$export$f9549d7e5aef7637","$63690b4f22172e23$export$687de40d137ed486","$63690b4f22172e23$export$533b26079ad0b4b","memo","$63690b4f22172e23$export$1041d4276c328e4d","functions","_functions","newargs","nextargs","$63690b4f22172e23$export$f672e0b6f7222cd7","reverse","$63690b4f22172e23$export$6a28d19bcc59197c","$63690b4f22172e23$export$4f1520afe59a31db","mapResults","$63690b4f22172e23$export$ee1b3e54f0441b22","$63690b4f22172e23$export$b6df61d74da01b63","$63690b4f22172e23$export$c983f826f44ff86","ignoredArgs","$63690b4f22172e23$var$_createTester","check","getResult","testResult","testPassed","$63690b4f22172e23$export$17b446b869dad473","bool","$63690b4f22172e23$export$922bcf02f3a5b284","$63690b4f22172e23$export$922a9a31d0cff2ee","$63690b4f22172e23$var$consoleFunc","resultArgs","$63690b4f22172e23$export$147ec2801e896265","$63690b4f22172e23$export$353f40bf1add0d75","_fn","_test","truth","$63690b4f22172e23$export$16f3a0560cc13fb4","$63690b4f22172e23$var$_withoutIndex","$63690b4f22172e23$export$79b2f7037acddd43","$63690b4f22172e23$export$2a2080ddac50d6b8","$63690b4f22172e23$export$9bd663f1fadd104c","$63690b4f22172e23$export$85d5b9ccf228381c","sync","innerArgs","$63690b4f22172e23$export$7ecc1a3b11b57dab","$63690b4f22172e23$export$61377f8da40b9b4c","$63690b4f22172e23$export$7ce9462b07c48a66","$63690b4f22172e23$var$filterArray","truthValues","$63690b4f22172e23$var$filterGeneric","$63690b4f22172e23$var$_filter","$63690b4f22172e23$export$3dea766d36a8935f","$63690b4f22172e23$export$6a93acd3681313ac","$63690b4f22172e23$export$ddcc38daaa46257c","$63690b4f22172e23$export$116a0f7f2303acd8","errback","$63690b4f22172e23$export$335ad4c8e8977a4b","$63690b4f22172e23$export$3f063810d7bf01bd","$63690b4f22172e23$export$d0689f2b629adbdb","$63690b4f22172e23$export$bef1f36f5486a6a3","$63690b4f22172e23$export$d5d82430c6fa645f","newObj","$63690b4f22172e23$export$825e789796ab7275","$63690b4f22172e23$export$8fbd16e43ec40b44","$63690b4f22172e23$export$fc10aeed3a532e2a","hasher","queues","memoized","unmemoized","$63690b4f22172e23$export$bdd553fddd433dcb","$63690b4f22172e23$var$parallel","$63690b4f22172e23$export$451942af9381149c","$63690b4f22172e23$export$362c0a688af131a0","$63690b4f22172e23$export$4f7fa46ff53e516f","$63690b4f22172e23$var$Heap","heap","pushCount","MIN_SAFE_INTEGER","percUp","$63690b4f22172e23$var$smaller","$63690b4f22172e23$var$parent","percDown","top","i1","priority","$63690b4f22172e23$export$25579debde666a98","createDataItems","$63690b4f22172e23$export$236c05de452bec2","$63690b4f22172e23$export$7fef8bcdbb34f435","reversed","$63690b4f22172e23$export$9debe8cffacea23","reflectCallback","retVal","$63690b4f22172e23$export$1a54554d0a489acc","$63690b4f22172e23$var$reject","$63690b4f22172e23$export$2800f3ceda99eb84","$63690b4f22172e23$export$b59d647fa1894da8","$63690b4f22172e23$export$d68373657532124d","$63690b4f22172e23$var$constant$1","$63690b4f22172e23$export$9369b12211e1fce4","opts","times","intervalFunc","$63690b4f22172e23$var$parseTimes","_task","attempt","retryAttempt","errorFilter","acc","interval","$63690b4f22172e23$export$9e1b8e833f44ff21","$63690b4f22172e23$export$7589597339a0562d","$63690b4f22172e23$export$ad14ef4001db2bcd","$63690b4f22172e23$export$eb635e263b5ded90","$63690b4f22172e23$export$c072acdb5b2ad89","$63690b4f22172e23$export$b035e44d7bb4278f","criteria","comparator","left","right","$63690b4f22172e23$export$83e74882c5df8fe1","milliseconds","info","timer","timedOut","clearTimeout","$63690b4f22172e23$export$5ebd4c84811c422b","count","$63690b4f22172e23$var$range","$63690b4f22172e23$export$b5bc26e198ce73d0","$63690b4f22172e23$export$51c3f8bb1fe6838c","$63690b4f22172e23$export$51186ad6e864892a","accumulator","$63690b4f22172e23$export$c382910393876e1e","$63690b4f22172e23$export$a8183b28ba2fbf41","$63690b4f22172e23$export$da38dd6790b15d8f","rest","$63690b4f22172e23$export$a40009bd2c363351","$63690b4f22172e23$export$981f466e0ef96280","taskIndex","nextTask","$63690b4f22172e23$export$2e2bcd8739ae039","applyEach","cargoQueue","concatLimit","concatSeries","doWhilst","forever","groupByLimit","mapValuesLimit","parallel","queue","race","rejectLimit","rejectSeries","sortBy","tryEach","waterfall","whilst","allLimit","allSeries","any","anyLimit","anySeries","flatMap","flatMapLimit","flatMapSeries","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","during","doDuring","$795c11c3c63e5bff$var$cachedSetTimeout","$795c11c3c63e5bff$var$cachedClearTimeout","$795c11c3c63e5bff$var$process","$795c11c3c63e5bff$var$defaultSetTimout","$795c11c3c63e5bff$var$defaultClearTimeout","$795c11c3c63e5bff$var$runTimeout","fun","e1","$795c11c3c63e5bff$var$currentQueue","$795c11c3c63e5bff$var$queue","$795c11c3c63e5bff$var$draining","$795c11c3c63e5bff$var$queueIndex","$795c11c3c63e5bff$var$cleanUpNextTick","$795c11c3c63e5bff$var$drainQueue","timeout","marker","$795c11c3c63e5bff$var$runClearTimeout","$795c11c3c63e5bff$var$Item","$795c11c3c63e5bff$var$noop","title","browser","env","argv","version","versions","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","$f382e0a6e577126a$var$__awaiter","__awaiter","_arguments","P","fulfilled","step","asyncFunction","handle","pathData","parameterFunction","resolvedItem","_memo","$e875d6dfa98253b1$var$__createBinding","$e875d6dfa98253b1$var$__setModuleDefault","$e875d6dfa98253b1$var$__importStar","$e875d6dfa98253b1$var$IterableMethods","$e886b6ac58863683$export$ab7b06d4df4bd22c","Map","$e886b6ac58863683$export$7f4c745ffacc49c3","WeakMap","$964b4aa3c2eef6fe$var$empty","$964b4aa3c2eef6fe$var$elements","$964b4aa3c2eef6fe$var$attributes","$964b4aa3c2eef6fe$var$holes","$964b4aa3c2eef6fe$export$2e2bcd8739ae039","template","svg","attrs","selfClosing","ml","trimEnd","hole","$cda163b18f206f43$export$6060d40568773aeb","operation","nodeType","firstChild","lastChild","createRange","setStartAfter","setEndAfter","deleteContents","$cda163b18f206f43$var$remove","$cda163b18f206f43$export$1f6005ddc92972ec","fragment","childNodes","nodes","$e7b023fbf6171233$export$43bee75e5e14138e","$e7b023fbf6171233$export$305f7d4e9d4624f2","$e7b023fbf6171233$export$58adb3bec8346d0f","$d4962822fcfec78a$var$useForeign","$d4962822fcfec78a$export$53ed384e325652d1","$d4962822fcfec78a$export$74ab03834501d175","$d4962822fcfec78a$export$4d2d26490572750a","removeAttribute","setAttribute","$d4962822fcfec78a$export$af4b9a83f4b00434","orphan","attributeNode","createAttributeNS","removeAttributeNode","setAttributeNodeNS","$d4962822fcfec78a$export$4a21f16c33752377","$d4962822fcfec78a$export$6cd530ed55e06764","lower","$d4962822fcfec78a$export$eff4d24c3ff7876e","current","$d4962822fcfec78a$export$a74fa819f7f7dff","dataset","$d4962822fcfec78a$export$4051a07651545597","$d4962822fcfec78a$export$6f093cfa640b7166","textContent","$a83c10e8e77a9b37$export$2e2bcd8739ae039","parentNode","before","bLength","aEnd","bEnd","aStart","bStart","nextSibling","removeChild","node1","sequence","node2","replaceChild","$828b7e0ea46e134b$export$43bee75e5e14138e","$828b7e0ea46e134b$var$prototype","$828b7e0ea46e134b$export$305f7d4e9d4624f2","createDocumentFragment","$828b7e0ea46e134b$var$createDocumentFragment","createElement","$828b7e0ea46e134b$var$createElement","createElementNS","$828b7e0ea46e134b$var$createElementNS","createTextNode","$828b7e0ea46e134b$export$b2ce9ad90858ed7a","createTreeWalker","$828b7e0ea46e134b$export$469f9e892a721cc4","importNode","$828b7e0ea46e134b$export$ce5e1f6513119f55","Proxy","bind","$828b7e0ea46e134b$var$xml","$828b7e0ea46e134b$export$41c7a4cacf5bab80","innerHTML","content","$828b7e0ea46e134b$var$createSVG","html","$828b7e0ea46e134b$var$createHTML","$87c034721bbdace5$var$reducePath","$87c034721bbdace5$var$diff","comment","oldNodes","newNodes","$87c034721bbdace5$var$handleAttribute","$87c034721bbdace5$export$455ce229eb3d2472","anyContent","$87c034721bbdace5$var$handleAnything","$f23a2ae05d1e4579$var$createPath","$f23a2ae05d1e4579$var$cache","$f23a2ae05d1e4579$var$textOnly","$f23a2ae05d1e4579$var$mapTemplate","tw","search","nextNode","hasAttribute","getAttribute","localName","$f23a2ae05d1e4579$var$mapUpdates","$f23a2ae05d1e4579$export$ed24ab65af38c83e","$f23a2ae05d1e4579$var$unrollValues","entry","updates","wire","$f23a2ae05d1e4579$var$createEntry","$f23a2ae05d1e4579$export$b5329b670b24e23b","$2c8ec47217099c06$var$tag","keyed","for","cache","$2c8ec47217099c06$var$cache","$2c8ec47217099c06$export$b3890eb0ae9dca99","where","what","replaceChildren","$2c8ec47217099c06$export$c0bb0b647f701bb5","$b8520e87c89b2588$var$__createBinding","$b8520e87c89b2588$exports","desc","getOwnPropertyDescriptor","$b8520e87c89b2588$var$__exportStar","__exportStar","exports1","$e5ab242dfdf0a49d$export$c1150d502d9297b5","$e5ab242dfdf0a49d$export$651dda916fb01a82","loader","$f66d5ebcb6184122$var$EMPTY","$f66d5ebcb6184122$export$2e2bcd8739ae039","handlers","resolvers","_handlers","_resolvers","createPath","settings","rawData","proxy","extendPath","pathProxy","newData","parent","property","resolver","supports","$d9a111e0148fee5a$var$BlankNode","nextId","other","termType","$d9a111e0148fee5a$exports","$53a8dc56bc98cea6$var$DefaultGraph","$53a8dc56bc98cea6$exports","$e7044a7edfdbee74$exports","original","blankNode","defaultGraph","literal","namedNode","datatype","subject","fromTerm","predicate","graph","quad","variable","$25b63638fd935f91$var$NamedNode","$25b63638fd935f91$exports","$ac64ad82e2385775$var$Literal","stringDatatype","langStringDatatype","$ac64ad82e2385775$exports","$f3ad1d7e649f5455$var$Quad","$f3ad1d7e649f5455$exports","$49b300755261c67e$var$Variable","$49b300755261c67e$exports","$592ea3cc87731175$var$DataFactory","languageOrDatatype","defaultGraphInstance","$ef46ebbca8386e4b$exports","$263af6617ba7b5c1$export$2e2bcd8739ae039","_context","extendContext","$0cf63d60e572b665$export$ec91da630f36d5ea","templateCallback","$2c9f6612ff913f5b$var$done","$2c9f6612ff913f5b$export$94dedbb929af3d62","iterable","$2c9f6612ff913f5b$export$fbdeaa6a76694f71","$a86c6cb50ef49bbb$export$6d207d5e6f54a902","createPromise","$a86c6cb50ef49bbb$export$81b5bd35a112305e","onResolved","onRejected","$a86c6cb50ef49bbb$export$99faa5b4f68eaefc","$a86c6cb50ef49bbb$export$cc5f62ee316eaef7","finally","$14545ad97e395b4e$var$xsd","$14545ad97e395b4e$var$xsdBoolean","$14545ad97e395b4e$var$xsdDateTime","$14545ad97e395b4e$var$xsdDecimal","$14545ad97e395b4e$var$xsdDouble","$14545ad97e395b4e$var$xsdFloat","$14545ad97e395b4e$var$xsdInteger","$14545ad97e395b4e$var$xsdBooleanTerm","$14545ad97e395b4e$var$xsdDateTimeTerm","$14545ad97e395b4e$var$xsdDecimalTerm","$14545ad97e395b4e$var$xsdDoubleTerm","$14545ad97e395b4e$var$xsdIntegerTerm","$14545ad97e395b4e$var$xsdTrue","$14545ad97e395b4e$var$xsdFalse","$14545ad97e395b4e$var$xsdNaN","$14545ad97e395b4e$var$xsdInf","$14545ad97e395b4e$var$xsdMinusInf","$14545ad97e395b4e$var$xsdPrimitives","INF","$14545ad97e395b4e$export$edb10ab8dd75a915","$14545ad97e395b4e$export$53b83ca8eaab0383","Date","$14545ad97e395b4e$export$b01956448ecd3bdc","allowMultiple","hasPlainObject","$14545ad97e395b4e$export$8dd40c03ee9b5c3","toISOString","$14545ad97e395b4e$export$538f936da7b46354","parseFloat","$683cc71cb762aa62$export$2e2bcd8739ae039","_contextProvider","expandProperty","resultsCache","getResultsCache","filters","lookupProperty","propertyCache","predicateString","$c9ae528992440ef2$export$2e2bcd8739ae039","expandedProperty","$7807c5a184d2f08a$export$2e2bcd8739ae039","endsWith","substring","$537af3c029aecb59$export$2e2bcd8739ae039","$e4d888787b80b563$export$c3c52e219617878","$40cb07d7c213631e$var$RDF","$40cb07d7c213631e$export$f30c4e1edcf592e8","_path","$40cb07d7c213631e$export$44bea742488e990c","container","Set","$40cb07d7c213631e$export$72904feb8709e15","$414c42567f8b437b$export$2e2bcd8739ae039","dataProperties","_isAsync","_isFunction","function","_dataProperties","_resolveDataPath","_resolveAsyncDataPath","_resolveSyncDataPath","$3e97c261032bd662$export$2e2bcd8739ae039","mutationType","allowZeroArgs","_mutationType","_allowZeroArgs","mutationExpressions","createMutationExpressions","createMutationExpression","pairs","expressions","predicateObjects","arrays","conditions","pathExpression","objects","extractObjects","$4fd604ce934162a9$export$2e2bcd8739ae039","queryEngine","query","sparql","bindings","execute","extractTerm","$fe1ee97c59482496$export$2e2bcd8739ae039","readProperties","properties","wrapSingleValues","values1","$b6d4bc62f9195b7a$export$2e2bcd8739ae039","$99cac367698b824f$export$2e2bcd8739ae039","segments","$ec80b4b6068edf2c$export$2e2bcd8739ae039","$37174482c7efbbe0$export$2e2bcd8739ae039","distinct","finalClause","queryVar","$5b81e9e8a38bb102$var$VARIABLE","$5b81e9e8a38bb102$var$QUERY_TAIL","$5b81e9e8a38bb102$export$2e2bcd8739ae039","predicates","createResultsCache","vars","resultVar","createQuery","propertyCaches","hash","$5b81e9e8a38bb102$export$eec403b5b4817a17","resultData","propertyCache1","valuePath","parentQuery","variableMatch","preloadClauses","$1208b6f31f30cfc6$export$2e2bcd8739ae039","_handle","parsedContext","$6bc534664d210e01$export$2e2bcd8739ae039","order","childData","childPath","$92d28e1280f9b39d$var$NEEDS_ESCAPE","$92d28e1280f9b39d$var$ESCAPE_ALL","$92d28e1280f9b39d$var$ESCAPED_CHARS","$92d28e1280f9b39d$export$2e2bcd8739ae039","mutationExpressionToQuery","pathExpressionToQuery","sorts","clauses","createVar","expressionToTriplePatterns","orderClauses","scope","termToString","lastPredicate","mutations","objectStrings","triplePatterns","mutationClauses","root","lastVar","lastIndex","allFilters","skolemized","$92d28e1280f9b39d$var$skolemId","$92d28e1280f9b39d$var$skolemize","allowValues","segment","suggestion","label","$92d28e1280f9b39d$var$escapeCharacter","subjectString","predicateTerm","subjectStrings","$00830d00d9c728e6$export$2e2bcd8739ae039","expression","ldflex","evaluator","Function","$e447d178736add1b$export$2e2bcd8739ae039","$2865c0aa963d26d3$export$2e2bcd8739ae039","$ab812908c20ad810$export$2e2bcd8739ae039","$7e351ca2f6f78f2b$export$2e2bcd8739ae039","$97a2f923703c5b52$var$breakIndex","hashIndex","$97a2f923703c5b52$export$8bfed00c3c6ef015","$97a2f923703c5b52$export$3b296f2eb789ca61","$97a2f923703c5b52$export$13cf003aeda35845","ns","$4b9804b53322e330$export$2e2bcd8739ae039","containerAsSet","collection","subjects","sortDesc","preload","add","previousPath","delete","newValues","$4b9804b53322e330$var$termPropertyHandler","canonical","syncFunction","$4b9804b53322e330$var$subjectToPrimitiveHandler","namespace","termTypes","datatypes","languages","$939aeae7ced733c4$export$2e2bcd8739ae039","_settings","_data","$939aeae7ced733c4$export$768ae4aa3d78e8c9","key1","getOwnPropertySymbols","$939aeae7ced733c4$export$ee3795cd6e92e609","contextProvider","_jsonldResolver","_ref","_pathProxy","$939aeae7ced733c4$var$supports","defaultHandlers","$713bfb32ba743e27$export$2e2bcd8739ae039","source","URL","searchParams","$713bfb32ba743e27$var$toIterator","$3ed53018085c2182$var$VARIABLE","$3ed53018085c2182$var$QUERY_TAIL","$25b162b7aaa30069$var$termPropertyHandler","$25b162b7aaa30069$var$subjectToPrimitiveHandler","_ref2","$25b162b7aaa30069$var$handlers","bundle","_this","paths","isMap","pathExpressions","mergedPathExpressions","resultsCaches","cacheKey","cacheItems","matches","cacheItem","cacheItemValue","mergedFilters","mergedFilter","newQueryTail","$25b162b7aaa30069$export$bb654e07daaf8c3a","prefixes","extraLDflexHandlers","$c0a9a09bedbd2a17$var$ldflexAttribute","preloader","resolved","$c0a9a09bedbd2a17$export$fbb6fe9928cdb676","dataHandlers","expandedType","templates","trails","subjectPaths1","$c0a9a09bedbd2a17$var$mapValue","render","isLDflex","isPromise","HTMLElement","valueValue","exception","$2e840568c5f21494$var$__createBinding","$2e840568c5f21494$exports","$2e840568c5f21494$var$__setModuleDefault","$2e840568c5f21494$var$__importStar","seriesIterationHandlers","$2e840568c5f21494$var$defaultIterationHandlers","default","$f66465c3439efdf3$export$c0bb0b647f701bb5","$f66465c3439efdf3$export$b3890eb0ae9dca99","Hole","$f66465c3439efdf3$export$b5329b670b24e23b","$f66465c3439efdf3$export$ea8d306c5e2b8884","schema","foaf","rdf","dbo","dbr","dbp","rdfs","friends","$parcel$interopDefault","map1","subPaths","subPath","dateStyle","$f66465c3439efdf3$var$loader","$f66465c3439efdf3$var$get","$f66465c3439efdf3$var$en","langcode","$f66465c3439efdf3$var$philosopherData","person","classList","thumbnail","deathYear","rdfs_comment","$f66465c3439efdf3$var$draw"],"version":3,"file":"index.23e0ed1c.js.map"}